// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/DeckPresetGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/DeckPresetGroup.proto</summary>
  public static partial class DeckPresetGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/DeckPresetGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeckPresetGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtQcm90by9EZWNrUHJlc2V0R3JvdXAucHJvdG8SDFJlTWFzdGVyc0xpYiJH",
            "Cg9EZWNrUHJlc2V0R3JvdXASHAoUZGVja19wcmVzZXRfZ3JvdXBfaWQYASAB",
            "KAUSFgoOZGVja19wcmVzZXRfaWQYAiABKAUiRgoURGVja1ByZXNldEdyb3Vw",
            "VGFibGUSLgoHZW50cmllcxgBIAMoCzIdLlJlTWFzdGVyc0xpYi5EZWNrUHJl",
            "c2V0R3JvdXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.DeckPresetGroup), global::ReMastersLib.DeckPresetGroup.Parser, new[]{ "DeckPresetGroupId", "DeckPresetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.DeckPresetGroupTable), global::ReMastersLib.DeckPresetGroupTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeckPresetGroup : pb::IMessage<DeckPresetGroup> {
    private static readonly pb::MessageParser<DeckPresetGroup> _parser = new pb::MessageParser<DeckPresetGroup>(() => new DeckPresetGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckPresetGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.DeckPresetGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetGroup(DeckPresetGroup other) : this() {
      deckPresetGroupId_ = other.deckPresetGroupId_;
      deckPresetId_ = other.deckPresetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetGroup Clone() {
      return new DeckPresetGroup(this);
    }

    /// <summary>Field number for the "deck_preset_group_id" field.</summary>
    public const int DeckPresetGroupIdFieldNumber = 1;
    private int deckPresetGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckPresetGroupId {
      get { return deckPresetGroupId_; }
      set {
        deckPresetGroupId_ = value;
      }
    }

    /// <summary>Field number for the "deck_preset_id" field.</summary>
    public const int DeckPresetIdFieldNumber = 2;
    private int deckPresetId_;
    /// <summary>
    /// DeckPreset.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckPresetId {
      get { return deckPresetId_; }
      set {
        deckPresetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckPresetGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckPresetGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeckPresetGroupId != other.DeckPresetGroupId) return false;
      if (DeckPresetId != other.DeckPresetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeckPresetGroupId != 0) hash ^= DeckPresetGroupId.GetHashCode();
      if (DeckPresetId != 0) hash ^= DeckPresetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeckPresetGroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DeckPresetGroupId);
      }
      if (DeckPresetId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DeckPresetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeckPresetGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckPresetGroupId);
      }
      if (DeckPresetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckPresetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckPresetGroup other) {
      if (other == null) {
        return;
      }
      if (other.DeckPresetGroupId != 0) {
        DeckPresetGroupId = other.DeckPresetGroupId;
      }
      if (other.DeckPresetId != 0) {
        DeckPresetId = other.DeckPresetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeckPresetGroupId = input.ReadInt32();
            break;
          }
          case 16: {
            DeckPresetId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeckPresetGroupTable : pb::IMessage<DeckPresetGroupTable> {
    private static readonly pb::MessageParser<DeckPresetGroupTable> _parser = new pb::MessageParser<DeckPresetGroupTable>(() => new DeckPresetGroupTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckPresetGroupTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.DeckPresetGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetGroupTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetGroupTable(DeckPresetGroupTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetGroupTable Clone() {
      return new DeckPresetGroupTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.DeckPresetGroup> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.DeckPresetGroup.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.DeckPresetGroup> entries_ = new pbc::RepeatedField<global::ReMastersLib.DeckPresetGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.DeckPresetGroup> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckPresetGroupTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckPresetGroupTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckPresetGroupTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
