// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/BGMReplace.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/BGMReplace.proto</summary>
  public static partial class BGMReplaceReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/BGMReplace.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BGMReplaceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90by9CR01SZXBsYWNlLnByb3RvEgxSZU1hc3RlcnNMaWIiYQoKQkdN",
            "UmVwbGFjZRIWCg5iZ21fcmVwbGFjZV9pZBgBIAEoDRISCgpiZ21faWRfb2xk",
            "GAIgASgJEhIKCmJnbV9pZF9uZXcYAyABKAkSEwoLc2NoZWR1bGVfaWQYBCAB",
            "KAkiPAoPQkdNUmVwbGFjZVRhYmxlEikKB2VudHJpZXMYASADKAsyGC5SZU1h",
            "c3RlcnNMaWIuQkdNUmVwbGFjZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BGMReplace), global::ReMastersLib.BGMReplace.Parser, new[]{ "BgmReplaceId", "BgmIdOld", "BgmIdNew", "ScheduleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BGMReplaceTable), global::ReMastersLib.BGMReplaceTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BGMReplace : pb::IMessage<BGMReplace> {
    private static readonly pb::MessageParser<BGMReplace> _parser = new pb::MessageParser<BGMReplace>(() => new BGMReplace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BGMReplace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BGMReplaceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMReplace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMReplace(BGMReplace other) : this() {
      bgmReplaceId_ = other.bgmReplaceId_;
      bgmIdOld_ = other.bgmIdOld_;
      bgmIdNew_ = other.bgmIdNew_;
      scheduleId_ = other.scheduleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMReplace Clone() {
      return new BGMReplace(this);
    }

    /// <summary>Field number for the "bgm_replace_id" field.</summary>
    public const int BgmReplaceIdFieldNumber = 1;
    private uint bgmReplaceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BgmReplaceId {
      get { return bgmReplaceId_; }
      set {
        bgmReplaceId_ = value;
      }
    }

    /// <summary>Field number for the "bgm_id_old" field.</summary>
    public const int BgmIdOldFieldNumber = 2;
    private string bgmIdOld_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BgmIdOld {
      get { return bgmIdOld_; }
      set {
        bgmIdOld_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bgm_id_new" field.</summary>
    public const int BgmIdNewFieldNumber = 3;
    private string bgmIdNew_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BgmIdNew {
      get { return bgmIdNew_; }
      set {
        bgmIdNew_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 4;
    private string scheduleId_ = "";
    /// <summary>
    /// Schedule.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BGMReplace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BGMReplace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BgmReplaceId != other.BgmReplaceId) return false;
      if (BgmIdOld != other.BgmIdOld) return false;
      if (BgmIdNew != other.BgmIdNew) return false;
      if (ScheduleId != other.ScheduleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BgmReplaceId != 0) hash ^= BgmReplaceId.GetHashCode();
      if (BgmIdOld.Length != 0) hash ^= BgmIdOld.GetHashCode();
      if (BgmIdNew.Length != 0) hash ^= BgmIdNew.GetHashCode();
      if (ScheduleId.Length != 0) hash ^= ScheduleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BgmReplaceId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(BgmReplaceId);
      }
      if (BgmIdOld.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BgmIdOld);
      }
      if (BgmIdNew.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BgmIdNew);
      }
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ScheduleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BgmReplaceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BgmReplaceId);
      }
      if (BgmIdOld.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BgmIdOld);
      }
      if (BgmIdNew.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BgmIdNew);
      }
      if (ScheduleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BGMReplace other) {
      if (other == null) {
        return;
      }
      if (other.BgmReplaceId != 0) {
        BgmReplaceId = other.BgmReplaceId;
      }
      if (other.BgmIdOld.Length != 0) {
        BgmIdOld = other.BgmIdOld;
      }
      if (other.BgmIdNew.Length != 0) {
        BgmIdNew = other.BgmIdNew;
      }
      if (other.ScheduleId.Length != 0) {
        ScheduleId = other.ScheduleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BgmReplaceId = input.ReadUInt32();
            break;
          }
          case 18: {
            BgmIdOld = input.ReadString();
            break;
          }
          case 26: {
            BgmIdNew = input.ReadString();
            break;
          }
          case 34: {
            ScheduleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BGMReplaceTable : pb::IMessage<BGMReplaceTable> {
    private static readonly pb::MessageParser<BGMReplaceTable> _parser = new pb::MessageParser<BGMReplaceTable>(() => new BGMReplaceTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BGMReplaceTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BGMReplaceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMReplaceTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMReplaceTable(BGMReplaceTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMReplaceTable Clone() {
      return new BGMReplaceTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.BGMReplace> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.BGMReplace.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.BGMReplace> entries_ = new pbc::RepeatedField<global::ReMastersLib.BGMReplace>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.BGMReplace> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BGMReplaceTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BGMReplaceTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BGMReplaceTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
