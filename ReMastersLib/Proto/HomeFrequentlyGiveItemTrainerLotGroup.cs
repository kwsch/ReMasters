// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/HomeFrequentlyGiveItemTrainerLotGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/HomeFrequentlyGiveItemTrainerLotGroup.proto</summary>
  public static partial class HomeFrequentlyGiveItemTrainerLotGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/HomeFrequentlyGiveItemTrainerLotGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HomeFrequentlyGiveItemTrainerLotGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFQcm90by9Ib21lRnJlcXVlbnRseUdpdmVJdGVtVHJhaW5lckxvdEdyb3Vw",
            "LnByb3RvEgxSZU1hc3RlcnNMaWIiawolSG9tZUZyZXF1ZW50bHlHaXZlSXRl",
            "bVRyYWluZXJMb3RHcm91cBIZChFpdGVtX2xvdF9ncm91cF9pZBgBIAEoBRIT",
            "CgtyZXBlYXRfdGltZRgCIAEoBRISCgpjb25kaXRpb25zGAMgAygJInIKKkhv",
            "bWVGcmVxdWVudGx5R2l2ZUl0ZW1UcmFpbmVyTG90R3JvdXBUYWJsZRJECgdl",
            "bnRyaWVzGAEgAygLMjMuUmVNYXN0ZXJzTGliLkhvbWVGcmVxdWVudGx5R2l2",
            "ZUl0ZW1UcmFpbmVyTG90R3JvdXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup), global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup.Parser, new[]{ "ItemLotGroupId", "RepeatTime", "Conditions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroupTable), global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroupTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class HomeFrequentlyGiveItemTrainerLotGroup : pb::IMessage<HomeFrequentlyGiveItemTrainerLotGroup> {
    private static readonly pb::MessageParser<HomeFrequentlyGiveItemTrainerLotGroup> _parser = new pb::MessageParser<HomeFrequentlyGiveItemTrainerLotGroup>(() => new HomeFrequentlyGiveItemTrainerLotGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HomeFrequentlyGiveItemTrainerLotGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeFrequentlyGiveItemTrainerLotGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeFrequentlyGiveItemTrainerLotGroup(HomeFrequentlyGiveItemTrainerLotGroup other) : this() {
      itemLotGroupId_ = other.itemLotGroupId_;
      repeatTime_ = other.repeatTime_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeFrequentlyGiveItemTrainerLotGroup Clone() {
      return new HomeFrequentlyGiveItemTrainerLotGroup(this);
    }

    /// <summary>Field number for the "item_lot_group_id" field.</summary>
    public const int ItemLotGroupIdFieldNumber = 1;
    private int itemLotGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemLotGroupId {
      get { return itemLotGroupId_; }
      set {
        itemLotGroupId_ = value;
      }
    }

    /// <summary>Field number for the "repeat_time" field.</summary>
    public const int RepeatTimeFieldNumber = 2;
    private int repeatTime_;
    /// <summary>
    /// in seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RepeatTime {
      get { return repeatTime_; }
      set {
        repeatTime_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_conditions_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> conditions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// the last one is a schedule_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HomeFrequentlyGiveItemTrainerLotGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HomeFrequentlyGiveItemTrainerLotGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemLotGroupId != other.ItemLotGroupId) return false;
      if (RepeatTime != other.RepeatTime) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemLotGroupId != 0) hash ^= ItemLotGroupId.GetHashCode();
      if (RepeatTime != 0) hash ^= RepeatTime.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemLotGroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemLotGroupId);
      }
      if (RepeatTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RepeatTime);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemLotGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemLotGroupId);
      }
      if (RepeatTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RepeatTime);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HomeFrequentlyGiveItemTrainerLotGroup other) {
      if (other == null) {
        return;
      }
      if (other.ItemLotGroupId != 0) {
        ItemLotGroupId = other.ItemLotGroupId;
      }
      if (other.RepeatTime != 0) {
        RepeatTime = other.RepeatTime;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemLotGroupId = input.ReadInt32();
            break;
          }
          case 16: {
            RepeatTime = input.ReadInt32();
            break;
          }
          case 26: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HomeFrequentlyGiveItemTrainerLotGroupTable : pb::IMessage<HomeFrequentlyGiveItemTrainerLotGroupTable> {
    private static readonly pb::MessageParser<HomeFrequentlyGiveItemTrainerLotGroupTable> _parser = new pb::MessageParser<HomeFrequentlyGiveItemTrainerLotGroupTable>(() => new HomeFrequentlyGiveItemTrainerLotGroupTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HomeFrequentlyGiveItemTrainerLotGroupTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeFrequentlyGiveItemTrainerLotGroupTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeFrequentlyGiveItemTrainerLotGroupTable(HomeFrequentlyGiveItemTrainerLotGroupTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HomeFrequentlyGiveItemTrainerLotGroupTable Clone() {
      return new HomeFrequentlyGiveItemTrainerLotGroupTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup> entries_ = new pbc::RepeatedField<global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.HomeFrequentlyGiveItemTrainerLotGroup> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HomeFrequentlyGiveItemTrainerLotGroupTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HomeFrequentlyGiveItemTrainerLotGroupTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HomeFrequentlyGiveItemTrainerLotGroupTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
