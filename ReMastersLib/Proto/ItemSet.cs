// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/ItemSet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/ItemSet.proto</summary>
  public static partial class ItemSetReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/ItemSet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemSetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90by9JdGVtU2V0LnByb3RvEgxSZU1hc3RlcnNMaWIiugMKB0l0ZW1T",
            "ZXQSEwoLaXRlbV9zZXRfaWQYASABKAQSDgoGaXRlbV8xGAIgASgDEhcKD2l0",
            "ZW1fMV9xdWFudGl0eRgDIAEoDRIOCgZpdGVtXzIYBCABKAMSFwoPaXRlbV8y",
            "X3F1YW50aXR5GAUgASgNEg4KBml0ZW1fMxgGIAEoAxIXCg9pdGVtXzNfcXVh",
            "bnRpdHkYByABKA0SDgoGaXRlbV80GAggASgDEhcKD2l0ZW1fNF9xdWFudGl0",
            "eRgJIAEoDRIOCgZpdGVtXzUYCiABKAMSFwoPaXRlbV81X3F1YW50aXR5GAsg",
            "ASgNEg4KBml0ZW1fNhgMIAEoAxIXCg9pdGVtXzZfcXVhbnRpdHkYDSABKA0S",
            "DgoGaXRlbV83GA4gASgDEhcKD2l0ZW1fN19xdWFudGl0eRgPIAEoDRIOCgZp",
            "dGVtXzgYECABKAMSFwoPaXRlbV84X3F1YW50aXR5GBEgASgNEg4KBml0ZW1f",
            "ORgSIAEoAxIXCg9pdGVtXzlfcXVhbnRpdHkYEyABKA0SDwoHaXRlbV8xMBgU",
            "IAEoAxIYChBpdGVtXzEwX3F1YW50aXR5GBUgASgNIjYKDEl0ZW1TZXRUYWJs",
            "ZRImCgdlbnRyaWVzGAEgAygLMhUuUmVNYXN0ZXJzTGliLkl0ZW1TZXRiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.ItemSet), global::ReMastersLib.ItemSet.Parser, new[]{ "ItemSetId", "Item1", "Item1Quantity", "Item2", "Item2Quantity", "Item3", "Item3Quantity", "Item4", "Item4Quantity", "Item5", "Item5Quantity", "Item6", "Item6Quantity", "Item7", "Item7Quantity", "Item8", "Item8Quantity", "Item9", "Item9Quantity", "Item10", "Item10Quantity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.ItemSetTable), global::ReMastersLib.ItemSetTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ItemSet : pb::IMessage<ItemSet> {
    private static readonly pb::MessageParser<ItemSet> _parser = new pb::MessageParser<ItemSet>(() => new ItemSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.ItemSetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSet(ItemSet other) : this() {
      itemSetId_ = other.itemSetId_;
      item1_ = other.item1_;
      item1Quantity_ = other.item1Quantity_;
      item2_ = other.item2_;
      item2Quantity_ = other.item2Quantity_;
      item3_ = other.item3_;
      item3Quantity_ = other.item3Quantity_;
      item4_ = other.item4_;
      item4Quantity_ = other.item4Quantity_;
      item5_ = other.item5_;
      item5Quantity_ = other.item5Quantity_;
      item6_ = other.item6_;
      item6Quantity_ = other.item6Quantity_;
      item7_ = other.item7_;
      item7Quantity_ = other.item7Quantity_;
      item8_ = other.item8_;
      item8Quantity_ = other.item8Quantity_;
      item9_ = other.item9_;
      item9Quantity_ = other.item9Quantity_;
      item10_ = other.item10_;
      item10Quantity_ = other.item10Quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSet Clone() {
      return new ItemSet(this);
    }

    /// <summary>Field number for the "item_set_id" field.</summary>
    public const int ItemSetIdFieldNumber = 1;
    private ulong itemSetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemSetId {
      get { return itemSetId_; }
      set {
        itemSetId_ = value;
      }
    }

    /// <summary>Field number for the "item_1" field.</summary>
    public const int Item1FieldNumber = 2;
    private long item1_;
    /// <summary>
    /// Item.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item1 {
      get { return item1_; }
      set {
        item1_ = value;
      }
    }

    /// <summary>Field number for the "item_1_quantity" field.</summary>
    public const int Item1QuantityFieldNumber = 3;
    private uint item1Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item1Quantity {
      get { return item1Quantity_; }
      set {
        item1Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_2" field.</summary>
    public const int Item2FieldNumber = 4;
    private long item2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item2 {
      get { return item2_; }
      set {
        item2_ = value;
      }
    }

    /// <summary>Field number for the "item_2_quantity" field.</summary>
    public const int Item2QuantityFieldNumber = 5;
    private uint item2Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item2Quantity {
      get { return item2Quantity_; }
      set {
        item2Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_3" field.</summary>
    public const int Item3FieldNumber = 6;
    private long item3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item3 {
      get { return item3_; }
      set {
        item3_ = value;
      }
    }

    /// <summary>Field number for the "item_3_quantity" field.</summary>
    public const int Item3QuantityFieldNumber = 7;
    private uint item3Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item3Quantity {
      get { return item3Quantity_; }
      set {
        item3Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_4" field.</summary>
    public const int Item4FieldNumber = 8;
    private long item4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item4 {
      get { return item4_; }
      set {
        item4_ = value;
      }
    }

    /// <summary>Field number for the "item_4_quantity" field.</summary>
    public const int Item4QuantityFieldNumber = 9;
    private uint item4Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item4Quantity {
      get { return item4Quantity_; }
      set {
        item4Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_5" field.</summary>
    public const int Item5FieldNumber = 10;
    private long item5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item5 {
      get { return item5_; }
      set {
        item5_ = value;
      }
    }

    /// <summary>Field number for the "item_5_quantity" field.</summary>
    public const int Item5QuantityFieldNumber = 11;
    private uint item5Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item5Quantity {
      get { return item5Quantity_; }
      set {
        item5Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_6" field.</summary>
    public const int Item6FieldNumber = 12;
    private long item6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item6 {
      get { return item6_; }
      set {
        item6_ = value;
      }
    }

    /// <summary>Field number for the "item_6_quantity" field.</summary>
    public const int Item6QuantityFieldNumber = 13;
    private uint item6Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item6Quantity {
      get { return item6Quantity_; }
      set {
        item6Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_7" field.</summary>
    public const int Item7FieldNumber = 14;
    private long item7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item7 {
      get { return item7_; }
      set {
        item7_ = value;
      }
    }

    /// <summary>Field number for the "item_7_quantity" field.</summary>
    public const int Item7QuantityFieldNumber = 15;
    private uint item7Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item7Quantity {
      get { return item7Quantity_; }
      set {
        item7Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_8" field.</summary>
    public const int Item8FieldNumber = 16;
    private long item8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item8 {
      get { return item8_; }
      set {
        item8_ = value;
      }
    }

    /// <summary>Field number for the "item_8_quantity" field.</summary>
    public const int Item8QuantityFieldNumber = 17;
    private uint item8Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item8Quantity {
      get { return item8Quantity_; }
      set {
        item8Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_9" field.</summary>
    public const int Item9FieldNumber = 18;
    private long item9_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item9 {
      get { return item9_; }
      set {
        item9_ = value;
      }
    }

    /// <summary>Field number for the "item_9_quantity" field.</summary>
    public const int Item9QuantityFieldNumber = 19;
    private uint item9Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item9Quantity {
      get { return item9Quantity_; }
      set {
        item9Quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_10" field.</summary>
    public const int Item10FieldNumber = 20;
    private long item10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item10 {
      get { return item10_; }
      set {
        item10_ = value;
      }
    }

    /// <summary>Field number for the "item_10_quantity" field.</summary>
    public const int Item10QuantityFieldNumber = 21;
    private uint item10Quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item10Quantity {
      get { return item10Quantity_; }
      set {
        item10Quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemSetId != other.ItemSetId) return false;
      if (Item1 != other.Item1) return false;
      if (Item1Quantity != other.Item1Quantity) return false;
      if (Item2 != other.Item2) return false;
      if (Item2Quantity != other.Item2Quantity) return false;
      if (Item3 != other.Item3) return false;
      if (Item3Quantity != other.Item3Quantity) return false;
      if (Item4 != other.Item4) return false;
      if (Item4Quantity != other.Item4Quantity) return false;
      if (Item5 != other.Item5) return false;
      if (Item5Quantity != other.Item5Quantity) return false;
      if (Item6 != other.Item6) return false;
      if (Item6Quantity != other.Item6Quantity) return false;
      if (Item7 != other.Item7) return false;
      if (Item7Quantity != other.Item7Quantity) return false;
      if (Item8 != other.Item8) return false;
      if (Item8Quantity != other.Item8Quantity) return false;
      if (Item9 != other.Item9) return false;
      if (Item9Quantity != other.Item9Quantity) return false;
      if (Item10 != other.Item10) return false;
      if (Item10Quantity != other.Item10Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemSetId != 0UL) hash ^= ItemSetId.GetHashCode();
      if (Item1 != 0L) hash ^= Item1.GetHashCode();
      if (Item1Quantity != 0) hash ^= Item1Quantity.GetHashCode();
      if (Item2 != 0L) hash ^= Item2.GetHashCode();
      if (Item2Quantity != 0) hash ^= Item2Quantity.GetHashCode();
      if (Item3 != 0L) hash ^= Item3.GetHashCode();
      if (Item3Quantity != 0) hash ^= Item3Quantity.GetHashCode();
      if (Item4 != 0L) hash ^= Item4.GetHashCode();
      if (Item4Quantity != 0) hash ^= Item4Quantity.GetHashCode();
      if (Item5 != 0L) hash ^= Item5.GetHashCode();
      if (Item5Quantity != 0) hash ^= Item5Quantity.GetHashCode();
      if (Item6 != 0L) hash ^= Item6.GetHashCode();
      if (Item6Quantity != 0) hash ^= Item6Quantity.GetHashCode();
      if (Item7 != 0L) hash ^= Item7.GetHashCode();
      if (Item7Quantity != 0) hash ^= Item7Quantity.GetHashCode();
      if (Item8 != 0L) hash ^= Item8.GetHashCode();
      if (Item8Quantity != 0) hash ^= Item8Quantity.GetHashCode();
      if (Item9 != 0L) hash ^= Item9.GetHashCode();
      if (Item9Quantity != 0) hash ^= Item9Quantity.GetHashCode();
      if (Item10 != 0L) hash ^= Item10.GetHashCode();
      if (Item10Quantity != 0) hash ^= Item10Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemSetId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemSetId);
      }
      if (Item1 != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Item1);
      }
      if (Item1Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Item1Quantity);
      }
      if (Item2 != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Item2);
      }
      if (Item2Quantity != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Item2Quantity);
      }
      if (Item3 != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Item3);
      }
      if (Item3Quantity != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Item3Quantity);
      }
      if (Item4 != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Item4);
      }
      if (Item4Quantity != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Item4Quantity);
      }
      if (Item5 != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Item5);
      }
      if (Item5Quantity != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Item5Quantity);
      }
      if (Item6 != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Item6);
      }
      if (Item6Quantity != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(Item6Quantity);
      }
      if (Item7 != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Item7);
      }
      if (Item7Quantity != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(Item7Quantity);
      }
      if (Item8 != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(Item8);
      }
      if (Item8Quantity != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Item8Quantity);
      }
      if (Item9 != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Item9);
      }
      if (Item9Quantity != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(Item9Quantity);
      }
      if (Item10 != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(Item10);
      }
      if (Item10Quantity != 0) {
        output.WriteRawTag(168, 1);
        output.WriteUInt32(Item10Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemSetId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemSetId);
      }
      if (Item1 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item1);
      }
      if (Item1Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item1Quantity);
      }
      if (Item2 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item2);
      }
      if (Item2Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item2Quantity);
      }
      if (Item3 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item3);
      }
      if (Item3Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item3Quantity);
      }
      if (Item4 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item4);
      }
      if (Item4Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item4Quantity);
      }
      if (Item5 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item5);
      }
      if (Item5Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item5Quantity);
      }
      if (Item6 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item6);
      }
      if (Item6Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item6Quantity);
      }
      if (Item7 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Item7);
      }
      if (Item7Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item7Quantity);
      }
      if (Item8 != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Item8);
      }
      if (Item8Quantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Item8Quantity);
      }
      if (Item9 != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Item9);
      }
      if (Item9Quantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Item9Quantity);
      }
      if (Item10 != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Item10);
      }
      if (Item10Quantity != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Item10Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemSet other) {
      if (other == null) {
        return;
      }
      if (other.ItemSetId != 0UL) {
        ItemSetId = other.ItemSetId;
      }
      if (other.Item1 != 0L) {
        Item1 = other.Item1;
      }
      if (other.Item1Quantity != 0) {
        Item1Quantity = other.Item1Quantity;
      }
      if (other.Item2 != 0L) {
        Item2 = other.Item2;
      }
      if (other.Item2Quantity != 0) {
        Item2Quantity = other.Item2Quantity;
      }
      if (other.Item3 != 0L) {
        Item3 = other.Item3;
      }
      if (other.Item3Quantity != 0) {
        Item3Quantity = other.Item3Quantity;
      }
      if (other.Item4 != 0L) {
        Item4 = other.Item4;
      }
      if (other.Item4Quantity != 0) {
        Item4Quantity = other.Item4Quantity;
      }
      if (other.Item5 != 0L) {
        Item5 = other.Item5;
      }
      if (other.Item5Quantity != 0) {
        Item5Quantity = other.Item5Quantity;
      }
      if (other.Item6 != 0L) {
        Item6 = other.Item6;
      }
      if (other.Item6Quantity != 0) {
        Item6Quantity = other.Item6Quantity;
      }
      if (other.Item7 != 0L) {
        Item7 = other.Item7;
      }
      if (other.Item7Quantity != 0) {
        Item7Quantity = other.Item7Quantity;
      }
      if (other.Item8 != 0L) {
        Item8 = other.Item8;
      }
      if (other.Item8Quantity != 0) {
        Item8Quantity = other.Item8Quantity;
      }
      if (other.Item9 != 0L) {
        Item9 = other.Item9;
      }
      if (other.Item9Quantity != 0) {
        Item9Quantity = other.Item9Quantity;
      }
      if (other.Item10 != 0L) {
        Item10 = other.Item10;
      }
      if (other.Item10Quantity != 0) {
        Item10Quantity = other.Item10Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemSetId = input.ReadUInt64();
            break;
          }
          case 16: {
            Item1 = input.ReadInt64();
            break;
          }
          case 24: {
            Item1Quantity = input.ReadUInt32();
            break;
          }
          case 32: {
            Item2 = input.ReadInt64();
            break;
          }
          case 40: {
            Item2Quantity = input.ReadUInt32();
            break;
          }
          case 48: {
            Item3 = input.ReadInt64();
            break;
          }
          case 56: {
            Item3Quantity = input.ReadUInt32();
            break;
          }
          case 64: {
            Item4 = input.ReadInt64();
            break;
          }
          case 72: {
            Item4Quantity = input.ReadUInt32();
            break;
          }
          case 80: {
            Item5 = input.ReadInt64();
            break;
          }
          case 88: {
            Item5Quantity = input.ReadUInt32();
            break;
          }
          case 96: {
            Item6 = input.ReadInt64();
            break;
          }
          case 104: {
            Item6Quantity = input.ReadUInt32();
            break;
          }
          case 112: {
            Item7 = input.ReadInt64();
            break;
          }
          case 120: {
            Item7Quantity = input.ReadUInt32();
            break;
          }
          case 128: {
            Item8 = input.ReadInt64();
            break;
          }
          case 136: {
            Item8Quantity = input.ReadUInt32();
            break;
          }
          case 144: {
            Item9 = input.ReadInt64();
            break;
          }
          case 152: {
            Item9Quantity = input.ReadUInt32();
            break;
          }
          case 160: {
            Item10 = input.ReadInt64();
            break;
          }
          case 168: {
            Item10Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemSetTable : pb::IMessage<ItemSetTable> {
    private static readonly pb::MessageParser<ItemSetTable> _parser = new pb::MessageParser<ItemSetTable>(() => new ItemSetTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemSetTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.ItemSetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSetTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSetTable(ItemSetTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemSetTable Clone() {
      return new ItemSetTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.ItemSet> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.ItemSet.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.ItemSet> entries_ = new pbc::RepeatedField<global::ReMastersLib.ItemSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.ItemSet> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemSetTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemSetTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemSetTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
