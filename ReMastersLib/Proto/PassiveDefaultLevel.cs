// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/PassiveDefaultLevel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/PassiveDefaultLevel.proto</summary>
  public static partial class PassiveDefaultLevelReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/PassiveDefaultLevel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PassiveDefaultLevelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Qcm90by9QYXNzaXZlRGVmYXVsdExldmVsLnByb3RvEgxSZU1hc3RlcnNM",
            "aWIitQEKE1Bhc3NpdmVEZWZhdWx0TGV2ZWwSCgoCdTEYASABKAUSCgoCdTIY",
            "AiABKAUSCgoCdTMYAyABKAUSCgoCdTQYBCABKAUSCgoCdTUYBSABKAUSCgoC",
            "dTYYBiABKAUSCgoCdTcYByABKAUSCgoCdTgYCCABKAUSCgoCdTkYCSABKAUS",
            "CwoDdTEwGAogASgFEgsKA3UxMRgLIAEoBRILCgN1MTIYDCABKAUSCwoDdTEz",
            "GA0gASgFIk4KGFBhc3NpdmVEZWZhdWx0TGV2ZWxUYWJsZRIyCgdlbnRyaWVz",
            "GAEgAygLMiEuUmVNYXN0ZXJzTGliLlBhc3NpdmVEZWZhdWx0TGV2ZWxiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.PassiveDefaultLevel), global::ReMastersLib.PassiveDefaultLevel.Parser, new[]{ "U1", "U2", "U3", "U4", "U5", "U6", "U7", "U8", "U9", "U10", "U11", "U12", "U13" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.PassiveDefaultLevelTable), global::ReMastersLib.PassiveDefaultLevelTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PassiveDefaultLevel : pb::IMessage<PassiveDefaultLevel> {
    private static readonly pb::MessageParser<PassiveDefaultLevel> _parser = new pb::MessageParser<PassiveDefaultLevel>(() => new PassiveDefaultLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PassiveDefaultLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.PassiveDefaultLevelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassiveDefaultLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassiveDefaultLevel(PassiveDefaultLevel other) : this() {
      u1_ = other.u1_;
      u2_ = other.u2_;
      u3_ = other.u3_;
      u4_ = other.u4_;
      u5_ = other.u5_;
      u6_ = other.u6_;
      u7_ = other.u7_;
      u8_ = other.u8_;
      u9_ = other.u9_;
      u10_ = other.u10_;
      u11_ = other.u11_;
      u12_ = other.u12_;
      u13_ = other.u13_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassiveDefaultLevel Clone() {
      return new PassiveDefaultLevel(this);
    }

    /// <summary>Field number for the "u1" field.</summary>
    public const int U1FieldNumber = 1;
    private int u1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U1 {
      get { return u1_; }
      set {
        u1_ = value;
      }
    }

    /// <summary>Field number for the "u2" field.</summary>
    public const int U2FieldNumber = 2;
    private int u2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U2 {
      get { return u2_; }
      set {
        u2_ = value;
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private int u3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private int u4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    /// <summary>Field number for the "u5" field.</summary>
    public const int U5FieldNumber = 5;
    private int u5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U5 {
      get { return u5_; }
      set {
        u5_ = value;
      }
    }

    /// <summary>Field number for the "u6" field.</summary>
    public const int U6FieldNumber = 6;
    private int u6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U6 {
      get { return u6_; }
      set {
        u6_ = value;
      }
    }

    /// <summary>Field number for the "u7" field.</summary>
    public const int U7FieldNumber = 7;
    private int u7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U7 {
      get { return u7_; }
      set {
        u7_ = value;
      }
    }

    /// <summary>Field number for the "u8" field.</summary>
    public const int U8FieldNumber = 8;
    private int u8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U8 {
      get { return u8_; }
      set {
        u8_ = value;
      }
    }

    /// <summary>Field number for the "u9" field.</summary>
    public const int U9FieldNumber = 9;
    private int u9_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U9 {
      get { return u9_; }
      set {
        u9_ = value;
      }
    }

    /// <summary>Field number for the "u10" field.</summary>
    public const int U10FieldNumber = 10;
    private int u10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U10 {
      get { return u10_; }
      set {
        u10_ = value;
      }
    }

    /// <summary>Field number for the "u11" field.</summary>
    public const int U11FieldNumber = 11;
    private int u11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U11 {
      get { return u11_; }
      set {
        u11_ = value;
      }
    }

    /// <summary>Field number for the "u12" field.</summary>
    public const int U12FieldNumber = 12;
    private int u12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U12 {
      get { return u12_; }
      set {
        u12_ = value;
      }
    }

    /// <summary>Field number for the "u13" field.</summary>
    public const int U13FieldNumber = 13;
    private int u13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U13 {
      get { return u13_; }
      set {
        u13_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PassiveDefaultLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PassiveDefaultLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (U1 != other.U1) return false;
      if (U2 != other.U2) return false;
      if (U3 != other.U3) return false;
      if (U4 != other.U4) return false;
      if (U5 != other.U5) return false;
      if (U6 != other.U6) return false;
      if (U7 != other.U7) return false;
      if (U8 != other.U8) return false;
      if (U9 != other.U9) return false;
      if (U10 != other.U10) return false;
      if (U11 != other.U11) return false;
      if (U12 != other.U12) return false;
      if (U13 != other.U13) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (U1 != 0) hash ^= U1.GetHashCode();
      if (U2 != 0) hash ^= U2.GetHashCode();
      if (U3 != 0) hash ^= U3.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (U5 != 0) hash ^= U5.GetHashCode();
      if (U6 != 0) hash ^= U6.GetHashCode();
      if (U7 != 0) hash ^= U7.GetHashCode();
      if (U8 != 0) hash ^= U8.GetHashCode();
      if (U9 != 0) hash ^= U9.GetHashCode();
      if (U10 != 0) hash ^= U10.GetHashCode();
      if (U11 != 0) hash ^= U11.GetHashCode();
      if (U12 != 0) hash ^= U12.GetHashCode();
      if (U13 != 0) hash ^= U13.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (U1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(U1);
      }
      if (U2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(U2);
      }
      if (U3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(U3);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(U4);
      }
      if (U5 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(U5);
      }
      if (U6 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(U6);
      }
      if (U7 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(U7);
      }
      if (U8 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(U8);
      }
      if (U9 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(U9);
      }
      if (U10 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(U10);
      }
      if (U11 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(U11);
      }
      if (U12 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(U12);
      }
      if (U13 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(U13);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (U1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U1);
      }
      if (U2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U2);
      }
      if (U3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U3);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U4);
      }
      if (U5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U5);
      }
      if (U6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U6);
      }
      if (U7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U7);
      }
      if (U8 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U8);
      }
      if (U9 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U9);
      }
      if (U10 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U10);
      }
      if (U11 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U11);
      }
      if (U12 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U12);
      }
      if (U13 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U13);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PassiveDefaultLevel other) {
      if (other == null) {
        return;
      }
      if (other.U1 != 0) {
        U1 = other.U1;
      }
      if (other.U2 != 0) {
        U2 = other.U2;
      }
      if (other.U3 != 0) {
        U3 = other.U3;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      if (other.U5 != 0) {
        U5 = other.U5;
      }
      if (other.U6 != 0) {
        U6 = other.U6;
      }
      if (other.U7 != 0) {
        U7 = other.U7;
      }
      if (other.U8 != 0) {
        U8 = other.U8;
      }
      if (other.U9 != 0) {
        U9 = other.U9;
      }
      if (other.U10 != 0) {
        U10 = other.U10;
      }
      if (other.U11 != 0) {
        U11 = other.U11;
      }
      if (other.U12 != 0) {
        U12 = other.U12;
      }
      if (other.U13 != 0) {
        U13 = other.U13;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            U1 = input.ReadInt32();
            break;
          }
          case 16: {
            U2 = input.ReadInt32();
            break;
          }
          case 24: {
            U3 = input.ReadInt32();
            break;
          }
          case 32: {
            U4 = input.ReadInt32();
            break;
          }
          case 40: {
            U5 = input.ReadInt32();
            break;
          }
          case 48: {
            U6 = input.ReadInt32();
            break;
          }
          case 56: {
            U7 = input.ReadInt32();
            break;
          }
          case 64: {
            U8 = input.ReadInt32();
            break;
          }
          case 72: {
            U9 = input.ReadInt32();
            break;
          }
          case 80: {
            U10 = input.ReadInt32();
            break;
          }
          case 88: {
            U11 = input.ReadInt32();
            break;
          }
          case 96: {
            U12 = input.ReadInt32();
            break;
          }
          case 104: {
            U13 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PassiveDefaultLevelTable : pb::IMessage<PassiveDefaultLevelTable> {
    private static readonly pb::MessageParser<PassiveDefaultLevelTable> _parser = new pb::MessageParser<PassiveDefaultLevelTable>(() => new PassiveDefaultLevelTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PassiveDefaultLevelTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.PassiveDefaultLevelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassiveDefaultLevelTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassiveDefaultLevelTable(PassiveDefaultLevelTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PassiveDefaultLevelTable Clone() {
      return new PassiveDefaultLevelTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.PassiveDefaultLevel> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.PassiveDefaultLevel.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.PassiveDefaultLevel> entries_ = new pbc::RepeatedField<global::ReMastersLib.PassiveDefaultLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.PassiveDefaultLevel> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PassiveDefaultLevelTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PassiveDefaultLevelTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PassiveDefaultLevelTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
