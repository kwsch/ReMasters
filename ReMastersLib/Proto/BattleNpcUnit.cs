// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/BattleNpcUnit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/BattleNpcUnit.proto</summary>
  public static partial class BattleNpcUnitReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/BattleNpcUnit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleNpcUnitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9CYXR0bGVOcGNVbml0LnByb3RvEgxSZU1hc3RlcnNMaWIingsK",
            "DUJhdHRsZU5wY1VuaXQSEwoLbnBjX3VuaXRfaWQYASABKAUSCgoCdTIYAiAB",
            "KAkSCgoCdTMYAyABKAUSCgoCdTQYBCABKAUSGAoQdHJhaW5lcl9hY3Rvcl9p",
            "ZBgFIAEoCRIYChBtb25zdGVyX2FjdG9yX2lkGAYgASgJEiAKBHJvbGUYByAB",
            "KA4yEi5SZU1hc3RlcnNMaWIuUm9sZRIKCgJ1OBgIIAEoBRIRCgltb3ZlXzFf",
            "aWQYCSABKAUSEQoJbW92ZV8yX2lkGAogASgFEhEKCW1vdmVfM19pZBgLIAEo",
            "BRIRCgltb3ZlXzRfaWQYDCABKAUSEQoJbW92ZV81X2lkGA0gASgFEhEKCW1v",
            "dmVfNl9pZBgOIAEoBRITCgttb3ZlXzFfdXNlcxgPIAEoBRITCgttb3ZlXzJf",
            "dXNlcxgQIAEoBRITCgttb3ZlXzNfdXNlcxgRIAEoBRITCgttb3ZlXzRfdXNl",
            "cxgSIAEoBRITCgttb3ZlXzVfdXNlcxgTIAEoBRITCgttb3ZlXzZfdXNlcxgU",
            "IAEoBRIUCgxzeW5jX21vdmVfaWQYFSABKAUSDQoFbGV2ZWwYFiABKAUSFAoM",
            "cGFzc2l2ZV8xX2lkGBcgASgFEhQKDHBhc3NpdmVfMl9pZBgYIAEoBRIUCgxw",
            "YXNzaXZlXzNfaWQYGSABKAUSFAoMcGFzc2l2ZV80X2lkGBogASgFEhQKDHBh",
            "c3NpdmVfNV9pZBgbIAEoBRILCgN1MjgYHCABKAUSCwoDdTI5GB0gASgFEgsK",
            "A3UzMBgeIAEoBRILCgN1MzEYHyABKAUSCwoDdTMyGCAgASgFEhAKCGhwX3Nj",
            "YWxlGCEgASgFEhEKCWF0a19zY2FsZRgiIAEoBRIRCglkZWZfc2NhbGUYIyAB",
            "KAUSEQoJc3BhX3NjYWxlGCQgASgFEhEKCXNwZF9zY2FsZRglIAEoBRIRCglz",
            "cGVfc2NhbGUYJiABKAUSEQoJd2Vha190eXBlGCcgASgFEg8KB3N0YXRlXzEY",
            "KCABKAUSDwoHc3RhdGVfMhgpIAEoBRILCgN1NDIYKiABKAUSCwoDdTQzGCsg",
            "ASgFEgsKA3U0NBgsIAEoBRILCgN1NDUYLSABKAUSCwoDdTQ2GC4gASgFEgsK",
            "A3U0NxgvIAEoBRILCgN1NDgYMCABKAUSCwoDdTQ5GDEgASgFEgsKA3U1MBgy",
            "IAEoBRILCgN1NTEYMyABKAUSCwoDdTUyGDQgASgFEgsKA3U1Mxg1IAEoBRIL",
            "CgN1NTQYNiABKAUSCwoDdTU1GDcgASgFEgsKA3U1Nhg4IAEoBRILCgN1NTcY",
            "OSABKAUSCwoDdTU4GDogASgFEgsKA3U1ORg7IAEoBRILCgN1NjAYPCABKAUS",
            "CwoDdTYxGD0gASgFEgsKA3U2Mhg+IAEoBRILCgN1NjMYPyABKAUSCwoDdTY0",
            "GEAgASgFEgsKA3U2NRhBIAEoBRILCgN1NjYYQiABKAUSCwoDdTY3GEMgASgF",
            "EgsKA3U2OBhEIAEoBRILCgN1NjkYRSABKAUSCwoDdTcwGEYgASgFEgsKA3U3",
            "MRhHIAEoBRILCgN1NzIYSCABKAUSCwoDdTczGEkgASgFEgsKA3U3NBhKIAEo",
            "BRILCgN1NzUYSyABKAUSCwoDdTc2GEwgASgFEgsKA3U3NxhNIAEoBRILCgN1",
            "NzgYTiABKAUSCwoDdTc5GE8gASgFEgsKA3U4MBhQIAEoBRILCgN1ODEYUSAB",
            "KAUSCwoDdTgyGFIgASgFEgsKA3U4MxhTIAEoBRILCgN1ODQYVCABKAUSCwoD",
            "dTg1GFUgASgFEgsKA3U4NhhWIAEoBRILCgN1ODcYVyABKAUSCwoDdTg4GFgg",
            "ASgFEgsKA3U4ORhZIAEoBRILCgN1OTAYWiABKAUSCwoDdTkxGFsgASgFIkIK",
            "EkJhdHRsZU5wY1VuaXRUYWJsZRIsCgdlbnRyaWVzGAEgAygLMhsuUmVNYXN0",
            "ZXJzTGliLkJhdHRsZU5wY1VuaXQqRAoEUm9sZRISCg5TdHJpa2VQaHlzaWNh",
            "bBAAEhEKDVN0cmlrZVNwZWNpYWwQARILCgdTdXBwb3J0EAISCAoEVGVjaBAD",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ReMastersLib.Role), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BattleNpcUnit), global::ReMastersLib.BattleNpcUnit.Parser, new[]{ "NpcUnitId", "U2", "U3", "U4", "TrainerActorId", "MonsterActorId", "Role", "U8", "Move1Id", "Move2Id", "Move3Id", "Move4Id", "Move5Id", "Move6Id", "Move1Uses", "Move2Uses", "Move3Uses", "Move4Uses", "Move5Uses", "Move6Uses", "SyncMoveId", "Level", "Passive1Id", "Passive2Id", "Passive3Id", "Passive4Id", "Passive5Id", "U28", "U29", "U30", "U31", "U32", "HpScale", "AtkScale", "DefScale", "SpaScale", "SpdScale", "SpeScale", "WeakType", "State1", "State2", "U42", "U43", "U44", "U45", "U46", "U47", "U48", "U49", "U50", "U51", "U52", "U53", "U54", "U55", "U56", "U57", "U58", "U59", "U60", "U61", "U62", "U63", "U64", "U65", "U66", "U67", "U68", "U69", "U70", "U71", "U72", "U73", "U74", "U75", "U76", "U77", "U78", "U79", "U80", "U81", "U82", "U83", "U84", "U85", "U86", "U87", "U88", "U89", "U90", "U91" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BattleNpcUnitTable), global::ReMastersLib.BattleNpcUnitTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Role {
    [pbr::OriginalName("StrikePhysical")] StrikePhysical = 0,
    [pbr::OriginalName("StrikeSpecial")] StrikeSpecial = 1,
    [pbr::OriginalName("Support")] Support = 2,
    [pbr::OriginalName("Tech")] Tech = 3,
  }

  #endregion

  #region Messages
  public sealed partial class BattleNpcUnit : pb::IMessage<BattleNpcUnit> {
    private static readonly pb::MessageParser<BattleNpcUnit> _parser = new pb::MessageParser<BattleNpcUnit>(() => new BattleNpcUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleNpcUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BattleNpcUnitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleNpcUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleNpcUnit(BattleNpcUnit other) : this() {
      npcUnitId_ = other.npcUnitId_;
      u2_ = other.u2_;
      u3_ = other.u3_;
      u4_ = other.u4_;
      trainerActorId_ = other.trainerActorId_;
      monsterActorId_ = other.monsterActorId_;
      role_ = other.role_;
      u8_ = other.u8_;
      move1Id_ = other.move1Id_;
      move2Id_ = other.move2Id_;
      move3Id_ = other.move3Id_;
      move4Id_ = other.move4Id_;
      move5Id_ = other.move5Id_;
      move6Id_ = other.move6Id_;
      move1Uses_ = other.move1Uses_;
      move2Uses_ = other.move2Uses_;
      move3Uses_ = other.move3Uses_;
      move4Uses_ = other.move4Uses_;
      move5Uses_ = other.move5Uses_;
      move6Uses_ = other.move6Uses_;
      syncMoveId_ = other.syncMoveId_;
      level_ = other.level_;
      passive1Id_ = other.passive1Id_;
      passive2Id_ = other.passive2Id_;
      passive3Id_ = other.passive3Id_;
      passive4Id_ = other.passive4Id_;
      passive5Id_ = other.passive5Id_;
      u28_ = other.u28_;
      u29_ = other.u29_;
      u30_ = other.u30_;
      u31_ = other.u31_;
      u32_ = other.u32_;
      hpScale_ = other.hpScale_;
      atkScale_ = other.atkScale_;
      defScale_ = other.defScale_;
      spaScale_ = other.spaScale_;
      spdScale_ = other.spdScale_;
      speScale_ = other.speScale_;
      weakType_ = other.weakType_;
      state1_ = other.state1_;
      state2_ = other.state2_;
      u42_ = other.u42_;
      u43_ = other.u43_;
      u44_ = other.u44_;
      u45_ = other.u45_;
      u46_ = other.u46_;
      u47_ = other.u47_;
      u48_ = other.u48_;
      u49_ = other.u49_;
      u50_ = other.u50_;
      u51_ = other.u51_;
      u52_ = other.u52_;
      u53_ = other.u53_;
      u54_ = other.u54_;
      u55_ = other.u55_;
      u56_ = other.u56_;
      u57_ = other.u57_;
      u58_ = other.u58_;
      u59_ = other.u59_;
      u60_ = other.u60_;
      u61_ = other.u61_;
      u62_ = other.u62_;
      u63_ = other.u63_;
      u64_ = other.u64_;
      u65_ = other.u65_;
      u66_ = other.u66_;
      u67_ = other.u67_;
      u68_ = other.u68_;
      u69_ = other.u69_;
      u70_ = other.u70_;
      u71_ = other.u71_;
      u72_ = other.u72_;
      u73_ = other.u73_;
      u74_ = other.u74_;
      u75_ = other.u75_;
      u76_ = other.u76_;
      u77_ = other.u77_;
      u78_ = other.u78_;
      u79_ = other.u79_;
      u80_ = other.u80_;
      u81_ = other.u81_;
      u82_ = other.u82_;
      u83_ = other.u83_;
      u84_ = other.u84_;
      u85_ = other.u85_;
      u86_ = other.u86_;
      u87_ = other.u87_;
      u88_ = other.u88_;
      u89_ = other.u89_;
      u90_ = other.u90_;
      u91_ = other.u91_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleNpcUnit Clone() {
      return new BattleNpcUnit(this);
    }

    /// <summary>Field number for the "npc_unit_id" field.</summary>
    public const int NpcUnitIdFieldNumber = 1;
    private int npcUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NpcUnitId {
      get { return npcUnitId_; }
      set {
        npcUnitId_ = value;
      }
    }

    /// <summary>Field number for the "u2" field.</summary>
    public const int U2FieldNumber = 2;
    private string u2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U2 {
      get { return u2_; }
      set {
        u2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private int u3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private int u4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    /// <summary>Field number for the "trainer_actor_id" field.</summary>
    public const int TrainerActorIdFieldNumber = 5;
    private string trainerActorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrainerActorId {
      get { return trainerActorId_; }
      set {
        trainerActorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monster_actor_id" field.</summary>
    public const int MonsterActorIdFieldNumber = 6;
    private string monsterActorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MonsterActorId {
      get { return monsterActorId_; }
      set {
        monsterActorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 7;
    private global::ReMastersLib.Role role_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ReMastersLib.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "u8" field.</summary>
    public const int U8FieldNumber = 8;
    private int u8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U8 {
      get { return u8_; }
      set {
        u8_ = value;
      }
    }

    /// <summary>Field number for the "move_1_id" field.</summary>
    public const int Move1IdFieldNumber = 9;
    private int move1Id_;
    /// <summary>
    /// Move.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move1Id {
      get { return move1Id_; }
      set {
        move1Id_ = value;
      }
    }

    /// <summary>Field number for the "move_2_id" field.</summary>
    public const int Move2IdFieldNumber = 10;
    private int move2Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move2Id {
      get { return move2Id_; }
      set {
        move2Id_ = value;
      }
    }

    /// <summary>Field number for the "move_3_id" field.</summary>
    public const int Move3IdFieldNumber = 11;
    private int move3Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move3Id {
      get { return move3Id_; }
      set {
        move3Id_ = value;
      }
    }

    /// <summary>Field number for the "move_4_id" field.</summary>
    public const int Move4IdFieldNumber = 12;
    private int move4Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move4Id {
      get { return move4Id_; }
      set {
        move4Id_ = value;
      }
    }

    /// <summary>Field number for the "move_5_id" field.</summary>
    public const int Move5IdFieldNumber = 13;
    private int move5Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move5Id {
      get { return move5Id_; }
      set {
        move5Id_ = value;
      }
    }

    /// <summary>Field number for the "move_6_id" field.</summary>
    public const int Move6IdFieldNumber = 14;
    private int move6Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move6Id {
      get { return move6Id_; }
      set {
        move6Id_ = value;
      }
    }

    /// <summary>Field number for the "move_1_uses" field.</summary>
    public const int Move1UsesFieldNumber = 15;
    private int move1Uses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move1Uses {
      get { return move1Uses_; }
      set {
        move1Uses_ = value;
      }
    }

    /// <summary>Field number for the "move_2_uses" field.</summary>
    public const int Move2UsesFieldNumber = 16;
    private int move2Uses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move2Uses {
      get { return move2Uses_; }
      set {
        move2Uses_ = value;
      }
    }

    /// <summary>Field number for the "move_3_uses" field.</summary>
    public const int Move3UsesFieldNumber = 17;
    private int move3Uses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move3Uses {
      get { return move3Uses_; }
      set {
        move3Uses_ = value;
      }
    }

    /// <summary>Field number for the "move_4_uses" field.</summary>
    public const int Move4UsesFieldNumber = 18;
    private int move4Uses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move4Uses {
      get { return move4Uses_; }
      set {
        move4Uses_ = value;
      }
    }

    /// <summary>Field number for the "move_5_uses" field.</summary>
    public const int Move5UsesFieldNumber = 19;
    private int move5Uses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move5Uses {
      get { return move5Uses_; }
      set {
        move5Uses_ = value;
      }
    }

    /// <summary>Field number for the "move_6_uses" field.</summary>
    public const int Move6UsesFieldNumber = 20;
    private int move6Uses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Move6Uses {
      get { return move6Uses_; }
      set {
        move6Uses_ = value;
      }
    }

    /// <summary>Field number for the "sync_move_id" field.</summary>
    public const int SyncMoveIdFieldNumber = 21;
    private int syncMoveId_;
    /// <summary>
    /// Move.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SyncMoveId {
      get { return syncMoveId_; }
      set {
        syncMoveId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 22;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "passive_1_id" field.</summary>
    public const int Passive1IdFieldNumber = 23;
    private int passive1Id_;
    /// <summary>
    /// passive_skill_xx_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Passive1Id {
      get { return passive1Id_; }
      set {
        passive1Id_ = value;
      }
    }

    /// <summary>Field number for the "passive_2_id" field.</summary>
    public const int Passive2IdFieldNumber = 24;
    private int passive2Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Passive2Id {
      get { return passive2Id_; }
      set {
        passive2Id_ = value;
      }
    }

    /// <summary>Field number for the "passive_3_id" field.</summary>
    public const int Passive3IdFieldNumber = 25;
    private int passive3Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Passive3Id {
      get { return passive3Id_; }
      set {
        passive3Id_ = value;
      }
    }

    /// <summary>Field number for the "passive_4_id" field.</summary>
    public const int Passive4IdFieldNumber = 26;
    private int passive4Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Passive4Id {
      get { return passive4Id_; }
      set {
        passive4Id_ = value;
      }
    }

    /// <summary>Field number for the "passive_5_id" field.</summary>
    public const int Passive5IdFieldNumber = 27;
    private int passive5Id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Passive5Id {
      get { return passive5Id_; }
      set {
        passive5Id_ = value;
      }
    }

    /// <summary>Field number for the "u28" field.</summary>
    public const int U28FieldNumber = 28;
    private int u28_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U28 {
      get { return u28_; }
      set {
        u28_ = value;
      }
    }

    /// <summary>Field number for the "u29" field.</summary>
    public const int U29FieldNumber = 29;
    private int u29_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U29 {
      get { return u29_; }
      set {
        u29_ = value;
      }
    }

    /// <summary>Field number for the "u30" field.</summary>
    public const int U30FieldNumber = 30;
    private int u30_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U30 {
      get { return u30_; }
      set {
        u30_ = value;
      }
    }

    /// <summary>Field number for the "u31" field.</summary>
    public const int U31FieldNumber = 31;
    private int u31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U31 {
      get { return u31_; }
      set {
        u31_ = value;
      }
    }

    /// <summary>Field number for the "u32" field.</summary>
    public const int U32FieldNumber = 32;
    private int u32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U32 {
      get { return u32_; }
      set {
        u32_ = value;
      }
    }

    /// <summary>Field number for the "hp_scale" field.</summary>
    public const int HpScaleFieldNumber = 33;
    private int hpScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HpScale {
      get { return hpScale_; }
      set {
        hpScale_ = value;
      }
    }

    /// <summary>Field number for the "atk_scale" field.</summary>
    public const int AtkScaleFieldNumber = 34;
    private int atkScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AtkScale {
      get { return atkScale_; }
      set {
        atkScale_ = value;
      }
    }

    /// <summary>Field number for the "def_scale" field.</summary>
    public const int DefScaleFieldNumber = 35;
    private int defScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefScale {
      get { return defScale_; }
      set {
        defScale_ = value;
      }
    }

    /// <summary>Field number for the "spa_scale" field.</summary>
    public const int SpaScaleFieldNumber = 36;
    private int spaScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpaScale {
      get { return spaScale_; }
      set {
        spaScale_ = value;
      }
    }

    /// <summary>Field number for the "spd_scale" field.</summary>
    public const int SpdScaleFieldNumber = 37;
    private int spdScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpdScale {
      get { return spdScale_; }
      set {
        spdScale_ = value;
      }
    }

    /// <summary>Field number for the "spe_scale" field.</summary>
    public const int SpeScaleFieldNumber = 38;
    private int speScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeScale {
      get { return speScale_; }
      set {
        speScale_ = value;
      }
    }

    /// <summary>Field number for the "weak_type" field.</summary>
    public const int WeakTypeFieldNumber = 39;
    private int weakType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WeakType {
      get { return weakType_; }
      set {
        weakType_ = value;
      }
    }

    /// <summary>Field number for the "state_1" field.</summary>
    public const int State1FieldNumber = 40;
    private int state1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State1 {
      get { return state1_; }
      set {
        state1_ = value;
      }
    }

    /// <summary>Field number for the "state_2" field.</summary>
    public const int State2FieldNumber = 41;
    private int state2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State2 {
      get { return state2_; }
      set {
        state2_ = value;
      }
    }

    /// <summary>Field number for the "u42" field.</summary>
    public const int U42FieldNumber = 42;
    private int u42_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U42 {
      get { return u42_; }
      set {
        u42_ = value;
      }
    }

    /// <summary>Field number for the "u43" field.</summary>
    public const int U43FieldNumber = 43;
    private int u43_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U43 {
      get { return u43_; }
      set {
        u43_ = value;
      }
    }

    /// <summary>Field number for the "u44" field.</summary>
    public const int U44FieldNumber = 44;
    private int u44_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U44 {
      get { return u44_; }
      set {
        u44_ = value;
      }
    }

    /// <summary>Field number for the "u45" field.</summary>
    public const int U45FieldNumber = 45;
    private int u45_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U45 {
      get { return u45_; }
      set {
        u45_ = value;
      }
    }

    /// <summary>Field number for the "u46" field.</summary>
    public const int U46FieldNumber = 46;
    private int u46_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U46 {
      get { return u46_; }
      set {
        u46_ = value;
      }
    }

    /// <summary>Field number for the "u47" field.</summary>
    public const int U47FieldNumber = 47;
    private int u47_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U47 {
      get { return u47_; }
      set {
        u47_ = value;
      }
    }

    /// <summary>Field number for the "u48" field.</summary>
    public const int U48FieldNumber = 48;
    private int u48_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U48 {
      get { return u48_; }
      set {
        u48_ = value;
      }
    }

    /// <summary>Field number for the "u49" field.</summary>
    public const int U49FieldNumber = 49;
    private int u49_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U49 {
      get { return u49_; }
      set {
        u49_ = value;
      }
    }

    /// <summary>Field number for the "u50" field.</summary>
    public const int U50FieldNumber = 50;
    private int u50_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U50 {
      get { return u50_; }
      set {
        u50_ = value;
      }
    }

    /// <summary>Field number for the "u51" field.</summary>
    public const int U51FieldNumber = 51;
    private int u51_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U51 {
      get { return u51_; }
      set {
        u51_ = value;
      }
    }

    /// <summary>Field number for the "u52" field.</summary>
    public const int U52FieldNumber = 52;
    private int u52_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U52 {
      get { return u52_; }
      set {
        u52_ = value;
      }
    }

    /// <summary>Field number for the "u53" field.</summary>
    public const int U53FieldNumber = 53;
    private int u53_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U53 {
      get { return u53_; }
      set {
        u53_ = value;
      }
    }

    /// <summary>Field number for the "u54" field.</summary>
    public const int U54FieldNumber = 54;
    private int u54_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U54 {
      get { return u54_; }
      set {
        u54_ = value;
      }
    }

    /// <summary>Field number for the "u55" field.</summary>
    public const int U55FieldNumber = 55;
    private int u55_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U55 {
      get { return u55_; }
      set {
        u55_ = value;
      }
    }

    /// <summary>Field number for the "u56" field.</summary>
    public const int U56FieldNumber = 56;
    private int u56_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U56 {
      get { return u56_; }
      set {
        u56_ = value;
      }
    }

    /// <summary>Field number for the "u57" field.</summary>
    public const int U57FieldNumber = 57;
    private int u57_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U57 {
      get { return u57_; }
      set {
        u57_ = value;
      }
    }

    /// <summary>Field number for the "u58" field.</summary>
    public const int U58FieldNumber = 58;
    private int u58_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U58 {
      get { return u58_; }
      set {
        u58_ = value;
      }
    }

    /// <summary>Field number for the "u59" field.</summary>
    public const int U59FieldNumber = 59;
    private int u59_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U59 {
      get { return u59_; }
      set {
        u59_ = value;
      }
    }

    /// <summary>Field number for the "u60" field.</summary>
    public const int U60FieldNumber = 60;
    private int u60_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U60 {
      get { return u60_; }
      set {
        u60_ = value;
      }
    }

    /// <summary>Field number for the "u61" field.</summary>
    public const int U61FieldNumber = 61;
    private int u61_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U61 {
      get { return u61_; }
      set {
        u61_ = value;
      }
    }

    /// <summary>Field number for the "u62" field.</summary>
    public const int U62FieldNumber = 62;
    private int u62_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U62 {
      get { return u62_; }
      set {
        u62_ = value;
      }
    }

    /// <summary>Field number for the "u63" field.</summary>
    public const int U63FieldNumber = 63;
    private int u63_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U63 {
      get { return u63_; }
      set {
        u63_ = value;
      }
    }

    /// <summary>Field number for the "u64" field.</summary>
    public const int U64FieldNumber = 64;
    private int u64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U64 {
      get { return u64_; }
      set {
        u64_ = value;
      }
    }

    /// <summary>Field number for the "u65" field.</summary>
    public const int U65FieldNumber = 65;
    private int u65_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U65 {
      get { return u65_; }
      set {
        u65_ = value;
      }
    }

    /// <summary>Field number for the "u66" field.</summary>
    public const int U66FieldNumber = 66;
    private int u66_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U66 {
      get { return u66_; }
      set {
        u66_ = value;
      }
    }

    /// <summary>Field number for the "u67" field.</summary>
    public const int U67FieldNumber = 67;
    private int u67_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U67 {
      get { return u67_; }
      set {
        u67_ = value;
      }
    }

    /// <summary>Field number for the "u68" field.</summary>
    public const int U68FieldNumber = 68;
    private int u68_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U68 {
      get { return u68_; }
      set {
        u68_ = value;
      }
    }

    /// <summary>Field number for the "u69" field.</summary>
    public const int U69FieldNumber = 69;
    private int u69_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U69 {
      get { return u69_; }
      set {
        u69_ = value;
      }
    }

    /// <summary>Field number for the "u70" field.</summary>
    public const int U70FieldNumber = 70;
    private int u70_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U70 {
      get { return u70_; }
      set {
        u70_ = value;
      }
    }

    /// <summary>Field number for the "u71" field.</summary>
    public const int U71FieldNumber = 71;
    private int u71_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U71 {
      get { return u71_; }
      set {
        u71_ = value;
      }
    }

    /// <summary>Field number for the "u72" field.</summary>
    public const int U72FieldNumber = 72;
    private int u72_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U72 {
      get { return u72_; }
      set {
        u72_ = value;
      }
    }

    /// <summary>Field number for the "u73" field.</summary>
    public const int U73FieldNumber = 73;
    private int u73_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U73 {
      get { return u73_; }
      set {
        u73_ = value;
      }
    }

    /// <summary>Field number for the "u74" field.</summary>
    public const int U74FieldNumber = 74;
    private int u74_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U74 {
      get { return u74_; }
      set {
        u74_ = value;
      }
    }

    /// <summary>Field number for the "u75" field.</summary>
    public const int U75FieldNumber = 75;
    private int u75_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U75 {
      get { return u75_; }
      set {
        u75_ = value;
      }
    }

    /// <summary>Field number for the "u76" field.</summary>
    public const int U76FieldNumber = 76;
    private int u76_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U76 {
      get { return u76_; }
      set {
        u76_ = value;
      }
    }

    /// <summary>Field number for the "u77" field.</summary>
    public const int U77FieldNumber = 77;
    private int u77_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U77 {
      get { return u77_; }
      set {
        u77_ = value;
      }
    }

    /// <summary>Field number for the "u78" field.</summary>
    public const int U78FieldNumber = 78;
    private int u78_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U78 {
      get { return u78_; }
      set {
        u78_ = value;
      }
    }

    /// <summary>Field number for the "u79" field.</summary>
    public const int U79FieldNumber = 79;
    private int u79_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U79 {
      get { return u79_; }
      set {
        u79_ = value;
      }
    }

    /// <summary>Field number for the "u80" field.</summary>
    public const int U80FieldNumber = 80;
    private int u80_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U80 {
      get { return u80_; }
      set {
        u80_ = value;
      }
    }

    /// <summary>Field number for the "u81" field.</summary>
    public const int U81FieldNumber = 81;
    private int u81_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U81 {
      get { return u81_; }
      set {
        u81_ = value;
      }
    }

    /// <summary>Field number for the "u82" field.</summary>
    public const int U82FieldNumber = 82;
    private int u82_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U82 {
      get { return u82_; }
      set {
        u82_ = value;
      }
    }

    /// <summary>Field number for the "u83" field.</summary>
    public const int U83FieldNumber = 83;
    private int u83_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U83 {
      get { return u83_; }
      set {
        u83_ = value;
      }
    }

    /// <summary>Field number for the "u84" field.</summary>
    public const int U84FieldNumber = 84;
    private int u84_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U84 {
      get { return u84_; }
      set {
        u84_ = value;
      }
    }

    /// <summary>Field number for the "u85" field.</summary>
    public const int U85FieldNumber = 85;
    private int u85_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U85 {
      get { return u85_; }
      set {
        u85_ = value;
      }
    }

    /// <summary>Field number for the "u86" field.</summary>
    public const int U86FieldNumber = 86;
    private int u86_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U86 {
      get { return u86_; }
      set {
        u86_ = value;
      }
    }

    /// <summary>Field number for the "u87" field.</summary>
    public const int U87FieldNumber = 87;
    private int u87_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U87 {
      get { return u87_; }
      set {
        u87_ = value;
      }
    }

    /// <summary>Field number for the "u88" field.</summary>
    public const int U88FieldNumber = 88;
    private int u88_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U88 {
      get { return u88_; }
      set {
        u88_ = value;
      }
    }

    /// <summary>Field number for the "u89" field.</summary>
    public const int U89FieldNumber = 89;
    private int u89_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U89 {
      get { return u89_; }
      set {
        u89_ = value;
      }
    }

    /// <summary>Field number for the "u90" field.</summary>
    public const int U90FieldNumber = 90;
    private int u90_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U90 {
      get { return u90_; }
      set {
        u90_ = value;
      }
    }

    /// <summary>Field number for the "u91" field.</summary>
    public const int U91FieldNumber = 91;
    private int u91_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U91 {
      get { return u91_; }
      set {
        u91_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleNpcUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleNpcUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NpcUnitId != other.NpcUnitId) return false;
      if (U2 != other.U2) return false;
      if (U3 != other.U3) return false;
      if (U4 != other.U4) return false;
      if (TrainerActorId != other.TrainerActorId) return false;
      if (MonsterActorId != other.MonsterActorId) return false;
      if (Role != other.Role) return false;
      if (U8 != other.U8) return false;
      if (Move1Id != other.Move1Id) return false;
      if (Move2Id != other.Move2Id) return false;
      if (Move3Id != other.Move3Id) return false;
      if (Move4Id != other.Move4Id) return false;
      if (Move5Id != other.Move5Id) return false;
      if (Move6Id != other.Move6Id) return false;
      if (Move1Uses != other.Move1Uses) return false;
      if (Move2Uses != other.Move2Uses) return false;
      if (Move3Uses != other.Move3Uses) return false;
      if (Move4Uses != other.Move4Uses) return false;
      if (Move5Uses != other.Move5Uses) return false;
      if (Move6Uses != other.Move6Uses) return false;
      if (SyncMoveId != other.SyncMoveId) return false;
      if (Level != other.Level) return false;
      if (Passive1Id != other.Passive1Id) return false;
      if (Passive2Id != other.Passive2Id) return false;
      if (Passive3Id != other.Passive3Id) return false;
      if (Passive4Id != other.Passive4Id) return false;
      if (Passive5Id != other.Passive5Id) return false;
      if (U28 != other.U28) return false;
      if (U29 != other.U29) return false;
      if (U30 != other.U30) return false;
      if (U31 != other.U31) return false;
      if (U32 != other.U32) return false;
      if (HpScale != other.HpScale) return false;
      if (AtkScale != other.AtkScale) return false;
      if (DefScale != other.DefScale) return false;
      if (SpaScale != other.SpaScale) return false;
      if (SpdScale != other.SpdScale) return false;
      if (SpeScale != other.SpeScale) return false;
      if (WeakType != other.WeakType) return false;
      if (State1 != other.State1) return false;
      if (State2 != other.State2) return false;
      if (U42 != other.U42) return false;
      if (U43 != other.U43) return false;
      if (U44 != other.U44) return false;
      if (U45 != other.U45) return false;
      if (U46 != other.U46) return false;
      if (U47 != other.U47) return false;
      if (U48 != other.U48) return false;
      if (U49 != other.U49) return false;
      if (U50 != other.U50) return false;
      if (U51 != other.U51) return false;
      if (U52 != other.U52) return false;
      if (U53 != other.U53) return false;
      if (U54 != other.U54) return false;
      if (U55 != other.U55) return false;
      if (U56 != other.U56) return false;
      if (U57 != other.U57) return false;
      if (U58 != other.U58) return false;
      if (U59 != other.U59) return false;
      if (U60 != other.U60) return false;
      if (U61 != other.U61) return false;
      if (U62 != other.U62) return false;
      if (U63 != other.U63) return false;
      if (U64 != other.U64) return false;
      if (U65 != other.U65) return false;
      if (U66 != other.U66) return false;
      if (U67 != other.U67) return false;
      if (U68 != other.U68) return false;
      if (U69 != other.U69) return false;
      if (U70 != other.U70) return false;
      if (U71 != other.U71) return false;
      if (U72 != other.U72) return false;
      if (U73 != other.U73) return false;
      if (U74 != other.U74) return false;
      if (U75 != other.U75) return false;
      if (U76 != other.U76) return false;
      if (U77 != other.U77) return false;
      if (U78 != other.U78) return false;
      if (U79 != other.U79) return false;
      if (U80 != other.U80) return false;
      if (U81 != other.U81) return false;
      if (U82 != other.U82) return false;
      if (U83 != other.U83) return false;
      if (U84 != other.U84) return false;
      if (U85 != other.U85) return false;
      if (U86 != other.U86) return false;
      if (U87 != other.U87) return false;
      if (U88 != other.U88) return false;
      if (U89 != other.U89) return false;
      if (U90 != other.U90) return false;
      if (U91 != other.U91) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NpcUnitId != 0) hash ^= NpcUnitId.GetHashCode();
      if (U2.Length != 0) hash ^= U2.GetHashCode();
      if (U3 != 0) hash ^= U3.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (TrainerActorId.Length != 0) hash ^= TrainerActorId.GetHashCode();
      if (MonsterActorId.Length != 0) hash ^= MonsterActorId.GetHashCode();
      if (Role != 0) hash ^= Role.GetHashCode();
      if (U8 != 0) hash ^= U8.GetHashCode();
      if (Move1Id != 0) hash ^= Move1Id.GetHashCode();
      if (Move2Id != 0) hash ^= Move2Id.GetHashCode();
      if (Move3Id != 0) hash ^= Move3Id.GetHashCode();
      if (Move4Id != 0) hash ^= Move4Id.GetHashCode();
      if (Move5Id != 0) hash ^= Move5Id.GetHashCode();
      if (Move6Id != 0) hash ^= Move6Id.GetHashCode();
      if (Move1Uses != 0) hash ^= Move1Uses.GetHashCode();
      if (Move2Uses != 0) hash ^= Move2Uses.GetHashCode();
      if (Move3Uses != 0) hash ^= Move3Uses.GetHashCode();
      if (Move4Uses != 0) hash ^= Move4Uses.GetHashCode();
      if (Move5Uses != 0) hash ^= Move5Uses.GetHashCode();
      if (Move6Uses != 0) hash ^= Move6Uses.GetHashCode();
      if (SyncMoveId != 0) hash ^= SyncMoveId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Passive1Id != 0) hash ^= Passive1Id.GetHashCode();
      if (Passive2Id != 0) hash ^= Passive2Id.GetHashCode();
      if (Passive3Id != 0) hash ^= Passive3Id.GetHashCode();
      if (Passive4Id != 0) hash ^= Passive4Id.GetHashCode();
      if (Passive5Id != 0) hash ^= Passive5Id.GetHashCode();
      if (U28 != 0) hash ^= U28.GetHashCode();
      if (U29 != 0) hash ^= U29.GetHashCode();
      if (U30 != 0) hash ^= U30.GetHashCode();
      if (U31 != 0) hash ^= U31.GetHashCode();
      if (U32 != 0) hash ^= U32.GetHashCode();
      if (HpScale != 0) hash ^= HpScale.GetHashCode();
      if (AtkScale != 0) hash ^= AtkScale.GetHashCode();
      if (DefScale != 0) hash ^= DefScale.GetHashCode();
      if (SpaScale != 0) hash ^= SpaScale.GetHashCode();
      if (SpdScale != 0) hash ^= SpdScale.GetHashCode();
      if (SpeScale != 0) hash ^= SpeScale.GetHashCode();
      if (WeakType != 0) hash ^= WeakType.GetHashCode();
      if (State1 != 0) hash ^= State1.GetHashCode();
      if (State2 != 0) hash ^= State2.GetHashCode();
      if (U42 != 0) hash ^= U42.GetHashCode();
      if (U43 != 0) hash ^= U43.GetHashCode();
      if (U44 != 0) hash ^= U44.GetHashCode();
      if (U45 != 0) hash ^= U45.GetHashCode();
      if (U46 != 0) hash ^= U46.GetHashCode();
      if (U47 != 0) hash ^= U47.GetHashCode();
      if (U48 != 0) hash ^= U48.GetHashCode();
      if (U49 != 0) hash ^= U49.GetHashCode();
      if (U50 != 0) hash ^= U50.GetHashCode();
      if (U51 != 0) hash ^= U51.GetHashCode();
      if (U52 != 0) hash ^= U52.GetHashCode();
      if (U53 != 0) hash ^= U53.GetHashCode();
      if (U54 != 0) hash ^= U54.GetHashCode();
      if (U55 != 0) hash ^= U55.GetHashCode();
      if (U56 != 0) hash ^= U56.GetHashCode();
      if (U57 != 0) hash ^= U57.GetHashCode();
      if (U58 != 0) hash ^= U58.GetHashCode();
      if (U59 != 0) hash ^= U59.GetHashCode();
      if (U60 != 0) hash ^= U60.GetHashCode();
      if (U61 != 0) hash ^= U61.GetHashCode();
      if (U62 != 0) hash ^= U62.GetHashCode();
      if (U63 != 0) hash ^= U63.GetHashCode();
      if (U64 != 0) hash ^= U64.GetHashCode();
      if (U65 != 0) hash ^= U65.GetHashCode();
      if (U66 != 0) hash ^= U66.GetHashCode();
      if (U67 != 0) hash ^= U67.GetHashCode();
      if (U68 != 0) hash ^= U68.GetHashCode();
      if (U69 != 0) hash ^= U69.GetHashCode();
      if (U70 != 0) hash ^= U70.GetHashCode();
      if (U71 != 0) hash ^= U71.GetHashCode();
      if (U72 != 0) hash ^= U72.GetHashCode();
      if (U73 != 0) hash ^= U73.GetHashCode();
      if (U74 != 0) hash ^= U74.GetHashCode();
      if (U75 != 0) hash ^= U75.GetHashCode();
      if (U76 != 0) hash ^= U76.GetHashCode();
      if (U77 != 0) hash ^= U77.GetHashCode();
      if (U78 != 0) hash ^= U78.GetHashCode();
      if (U79 != 0) hash ^= U79.GetHashCode();
      if (U80 != 0) hash ^= U80.GetHashCode();
      if (U81 != 0) hash ^= U81.GetHashCode();
      if (U82 != 0) hash ^= U82.GetHashCode();
      if (U83 != 0) hash ^= U83.GetHashCode();
      if (U84 != 0) hash ^= U84.GetHashCode();
      if (U85 != 0) hash ^= U85.GetHashCode();
      if (U86 != 0) hash ^= U86.GetHashCode();
      if (U87 != 0) hash ^= U87.GetHashCode();
      if (U88 != 0) hash ^= U88.GetHashCode();
      if (U89 != 0) hash ^= U89.GetHashCode();
      if (U90 != 0) hash ^= U90.GetHashCode();
      if (U91 != 0) hash ^= U91.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NpcUnitId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NpcUnitId);
      }
      if (U2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(U2);
      }
      if (U3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(U3);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(U4);
      }
      if (TrainerActorId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TrainerActorId);
      }
      if (MonsterActorId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MonsterActorId);
      }
      if (Role != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Role);
      }
      if (U8 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(U8);
      }
      if (Move1Id != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Move1Id);
      }
      if (Move2Id != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Move2Id);
      }
      if (Move3Id != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Move3Id);
      }
      if (Move4Id != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Move4Id);
      }
      if (Move5Id != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Move5Id);
      }
      if (Move6Id != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Move6Id);
      }
      if (Move1Uses != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Move1Uses);
      }
      if (Move2Uses != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Move2Uses);
      }
      if (Move3Uses != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Move3Uses);
      }
      if (Move4Uses != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Move4Uses);
      }
      if (Move5Uses != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Move5Uses);
      }
      if (Move6Uses != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Move6Uses);
      }
      if (SyncMoveId != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(SyncMoveId);
      }
      if (Level != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(Level);
      }
      if (Passive1Id != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(Passive1Id);
      }
      if (Passive2Id != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(Passive2Id);
      }
      if (Passive3Id != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(Passive3Id);
      }
      if (Passive4Id != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(Passive4Id);
      }
      if (Passive5Id != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(Passive5Id);
      }
      if (U28 != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(U28);
      }
      if (U29 != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(U29);
      }
      if (U30 != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(U30);
      }
      if (U31 != 0) {
        output.WriteRawTag(248, 1);
        output.WriteInt32(U31);
      }
      if (U32 != 0) {
        output.WriteRawTag(128, 2);
        output.WriteInt32(U32);
      }
      if (HpScale != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(HpScale);
      }
      if (AtkScale != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(AtkScale);
      }
      if (DefScale != 0) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(DefScale);
      }
      if (SpaScale != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(SpaScale);
      }
      if (SpdScale != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(SpdScale);
      }
      if (SpeScale != 0) {
        output.WriteRawTag(176, 2);
        output.WriteInt32(SpeScale);
      }
      if (WeakType != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(WeakType);
      }
      if (State1 != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(State1);
      }
      if (State2 != 0) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(State2);
      }
      if (U42 != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(U42);
      }
      if (U43 != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(U43);
      }
      if (U44 != 0) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(U44);
      }
      if (U45 != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(U45);
      }
      if (U46 != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(U46);
      }
      if (U47 != 0) {
        output.WriteRawTag(248, 2);
        output.WriteInt32(U47);
      }
      if (U48 != 0) {
        output.WriteRawTag(128, 3);
        output.WriteInt32(U48);
      }
      if (U49 != 0) {
        output.WriteRawTag(136, 3);
        output.WriteInt32(U49);
      }
      if (U50 != 0) {
        output.WriteRawTag(144, 3);
        output.WriteInt32(U50);
      }
      if (U51 != 0) {
        output.WriteRawTag(152, 3);
        output.WriteInt32(U51);
      }
      if (U52 != 0) {
        output.WriteRawTag(160, 3);
        output.WriteInt32(U52);
      }
      if (U53 != 0) {
        output.WriteRawTag(168, 3);
        output.WriteInt32(U53);
      }
      if (U54 != 0) {
        output.WriteRawTag(176, 3);
        output.WriteInt32(U54);
      }
      if (U55 != 0) {
        output.WriteRawTag(184, 3);
        output.WriteInt32(U55);
      }
      if (U56 != 0) {
        output.WriteRawTag(192, 3);
        output.WriteInt32(U56);
      }
      if (U57 != 0) {
        output.WriteRawTag(200, 3);
        output.WriteInt32(U57);
      }
      if (U58 != 0) {
        output.WriteRawTag(208, 3);
        output.WriteInt32(U58);
      }
      if (U59 != 0) {
        output.WriteRawTag(216, 3);
        output.WriteInt32(U59);
      }
      if (U60 != 0) {
        output.WriteRawTag(224, 3);
        output.WriteInt32(U60);
      }
      if (U61 != 0) {
        output.WriteRawTag(232, 3);
        output.WriteInt32(U61);
      }
      if (U62 != 0) {
        output.WriteRawTag(240, 3);
        output.WriteInt32(U62);
      }
      if (U63 != 0) {
        output.WriteRawTag(248, 3);
        output.WriteInt32(U63);
      }
      if (U64 != 0) {
        output.WriteRawTag(128, 4);
        output.WriteInt32(U64);
      }
      if (U65 != 0) {
        output.WriteRawTag(136, 4);
        output.WriteInt32(U65);
      }
      if (U66 != 0) {
        output.WriteRawTag(144, 4);
        output.WriteInt32(U66);
      }
      if (U67 != 0) {
        output.WriteRawTag(152, 4);
        output.WriteInt32(U67);
      }
      if (U68 != 0) {
        output.WriteRawTag(160, 4);
        output.WriteInt32(U68);
      }
      if (U69 != 0) {
        output.WriteRawTag(168, 4);
        output.WriteInt32(U69);
      }
      if (U70 != 0) {
        output.WriteRawTag(176, 4);
        output.WriteInt32(U70);
      }
      if (U71 != 0) {
        output.WriteRawTag(184, 4);
        output.WriteInt32(U71);
      }
      if (U72 != 0) {
        output.WriteRawTag(192, 4);
        output.WriteInt32(U72);
      }
      if (U73 != 0) {
        output.WriteRawTag(200, 4);
        output.WriteInt32(U73);
      }
      if (U74 != 0) {
        output.WriteRawTag(208, 4);
        output.WriteInt32(U74);
      }
      if (U75 != 0) {
        output.WriteRawTag(216, 4);
        output.WriteInt32(U75);
      }
      if (U76 != 0) {
        output.WriteRawTag(224, 4);
        output.WriteInt32(U76);
      }
      if (U77 != 0) {
        output.WriteRawTag(232, 4);
        output.WriteInt32(U77);
      }
      if (U78 != 0) {
        output.WriteRawTag(240, 4);
        output.WriteInt32(U78);
      }
      if (U79 != 0) {
        output.WriteRawTag(248, 4);
        output.WriteInt32(U79);
      }
      if (U80 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteInt32(U80);
      }
      if (U81 != 0) {
        output.WriteRawTag(136, 5);
        output.WriteInt32(U81);
      }
      if (U82 != 0) {
        output.WriteRawTag(144, 5);
        output.WriteInt32(U82);
      }
      if (U83 != 0) {
        output.WriteRawTag(152, 5);
        output.WriteInt32(U83);
      }
      if (U84 != 0) {
        output.WriteRawTag(160, 5);
        output.WriteInt32(U84);
      }
      if (U85 != 0) {
        output.WriteRawTag(168, 5);
        output.WriteInt32(U85);
      }
      if (U86 != 0) {
        output.WriteRawTag(176, 5);
        output.WriteInt32(U86);
      }
      if (U87 != 0) {
        output.WriteRawTag(184, 5);
        output.WriteInt32(U87);
      }
      if (U88 != 0) {
        output.WriteRawTag(192, 5);
        output.WriteInt32(U88);
      }
      if (U89 != 0) {
        output.WriteRawTag(200, 5);
        output.WriteInt32(U89);
      }
      if (U90 != 0) {
        output.WriteRawTag(208, 5);
        output.WriteInt32(U90);
      }
      if (U91 != 0) {
        output.WriteRawTag(216, 5);
        output.WriteInt32(U91);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NpcUnitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NpcUnitId);
      }
      if (U2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U2);
      }
      if (U3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U3);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U4);
      }
      if (TrainerActorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrainerActorId);
      }
      if (MonsterActorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonsterActorId);
      }
      if (Role != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (U8 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U8);
      }
      if (Move1Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move1Id);
      }
      if (Move2Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move2Id);
      }
      if (Move3Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move3Id);
      }
      if (Move4Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move4Id);
      }
      if (Move5Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move5Id);
      }
      if (Move6Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move6Id);
      }
      if (Move1Uses != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move1Uses);
      }
      if (Move2Uses != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Move2Uses);
      }
      if (Move3Uses != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Move3Uses);
      }
      if (Move4Uses != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Move4Uses);
      }
      if (Move5Uses != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Move5Uses);
      }
      if (Move6Uses != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Move6Uses);
      }
      if (SyncMoveId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SyncMoveId);
      }
      if (Level != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Passive1Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Passive1Id);
      }
      if (Passive2Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Passive2Id);
      }
      if (Passive3Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Passive3Id);
      }
      if (Passive4Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Passive4Id);
      }
      if (Passive5Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Passive5Id);
      }
      if (U28 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U28);
      }
      if (U29 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U29);
      }
      if (U30 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U30);
      }
      if (U31 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U31);
      }
      if (U32 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U32);
      }
      if (HpScale != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(HpScale);
      }
      if (AtkScale != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AtkScale);
      }
      if (DefScale != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DefScale);
      }
      if (SpaScale != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpaScale);
      }
      if (SpdScale != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpdScale);
      }
      if (SpeScale != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpeScale);
      }
      if (WeakType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WeakType);
      }
      if (State1 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(State1);
      }
      if (State2 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(State2);
      }
      if (U42 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U42);
      }
      if (U43 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U43);
      }
      if (U44 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U44);
      }
      if (U45 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U45);
      }
      if (U46 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U46);
      }
      if (U47 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U47);
      }
      if (U48 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U48);
      }
      if (U49 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U49);
      }
      if (U50 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U50);
      }
      if (U51 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U51);
      }
      if (U52 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U52);
      }
      if (U53 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U53);
      }
      if (U54 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U54);
      }
      if (U55 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U55);
      }
      if (U56 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U56);
      }
      if (U57 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U57);
      }
      if (U58 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U58);
      }
      if (U59 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U59);
      }
      if (U60 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U60);
      }
      if (U61 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U61);
      }
      if (U62 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U62);
      }
      if (U63 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U63);
      }
      if (U64 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U64);
      }
      if (U65 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U65);
      }
      if (U66 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U66);
      }
      if (U67 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U67);
      }
      if (U68 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U68);
      }
      if (U69 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U69);
      }
      if (U70 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U70);
      }
      if (U71 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U71);
      }
      if (U72 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U72);
      }
      if (U73 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U73);
      }
      if (U74 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U74);
      }
      if (U75 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U75);
      }
      if (U76 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U76);
      }
      if (U77 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U77);
      }
      if (U78 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U78);
      }
      if (U79 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U79);
      }
      if (U80 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U80);
      }
      if (U81 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U81);
      }
      if (U82 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U82);
      }
      if (U83 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U83);
      }
      if (U84 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U84);
      }
      if (U85 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U85);
      }
      if (U86 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U86);
      }
      if (U87 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U87);
      }
      if (U88 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U88);
      }
      if (U89 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U89);
      }
      if (U90 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U90);
      }
      if (U91 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U91);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleNpcUnit other) {
      if (other == null) {
        return;
      }
      if (other.NpcUnitId != 0) {
        NpcUnitId = other.NpcUnitId;
      }
      if (other.U2.Length != 0) {
        U2 = other.U2;
      }
      if (other.U3 != 0) {
        U3 = other.U3;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      if (other.TrainerActorId.Length != 0) {
        TrainerActorId = other.TrainerActorId;
      }
      if (other.MonsterActorId.Length != 0) {
        MonsterActorId = other.MonsterActorId;
      }
      if (other.Role != 0) {
        Role = other.Role;
      }
      if (other.U8 != 0) {
        U8 = other.U8;
      }
      if (other.Move1Id != 0) {
        Move1Id = other.Move1Id;
      }
      if (other.Move2Id != 0) {
        Move2Id = other.Move2Id;
      }
      if (other.Move3Id != 0) {
        Move3Id = other.Move3Id;
      }
      if (other.Move4Id != 0) {
        Move4Id = other.Move4Id;
      }
      if (other.Move5Id != 0) {
        Move5Id = other.Move5Id;
      }
      if (other.Move6Id != 0) {
        Move6Id = other.Move6Id;
      }
      if (other.Move1Uses != 0) {
        Move1Uses = other.Move1Uses;
      }
      if (other.Move2Uses != 0) {
        Move2Uses = other.Move2Uses;
      }
      if (other.Move3Uses != 0) {
        Move3Uses = other.Move3Uses;
      }
      if (other.Move4Uses != 0) {
        Move4Uses = other.Move4Uses;
      }
      if (other.Move5Uses != 0) {
        Move5Uses = other.Move5Uses;
      }
      if (other.Move6Uses != 0) {
        Move6Uses = other.Move6Uses;
      }
      if (other.SyncMoveId != 0) {
        SyncMoveId = other.SyncMoveId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Passive1Id != 0) {
        Passive1Id = other.Passive1Id;
      }
      if (other.Passive2Id != 0) {
        Passive2Id = other.Passive2Id;
      }
      if (other.Passive3Id != 0) {
        Passive3Id = other.Passive3Id;
      }
      if (other.Passive4Id != 0) {
        Passive4Id = other.Passive4Id;
      }
      if (other.Passive5Id != 0) {
        Passive5Id = other.Passive5Id;
      }
      if (other.U28 != 0) {
        U28 = other.U28;
      }
      if (other.U29 != 0) {
        U29 = other.U29;
      }
      if (other.U30 != 0) {
        U30 = other.U30;
      }
      if (other.U31 != 0) {
        U31 = other.U31;
      }
      if (other.U32 != 0) {
        U32 = other.U32;
      }
      if (other.HpScale != 0) {
        HpScale = other.HpScale;
      }
      if (other.AtkScale != 0) {
        AtkScale = other.AtkScale;
      }
      if (other.DefScale != 0) {
        DefScale = other.DefScale;
      }
      if (other.SpaScale != 0) {
        SpaScale = other.SpaScale;
      }
      if (other.SpdScale != 0) {
        SpdScale = other.SpdScale;
      }
      if (other.SpeScale != 0) {
        SpeScale = other.SpeScale;
      }
      if (other.WeakType != 0) {
        WeakType = other.WeakType;
      }
      if (other.State1 != 0) {
        State1 = other.State1;
      }
      if (other.State2 != 0) {
        State2 = other.State2;
      }
      if (other.U42 != 0) {
        U42 = other.U42;
      }
      if (other.U43 != 0) {
        U43 = other.U43;
      }
      if (other.U44 != 0) {
        U44 = other.U44;
      }
      if (other.U45 != 0) {
        U45 = other.U45;
      }
      if (other.U46 != 0) {
        U46 = other.U46;
      }
      if (other.U47 != 0) {
        U47 = other.U47;
      }
      if (other.U48 != 0) {
        U48 = other.U48;
      }
      if (other.U49 != 0) {
        U49 = other.U49;
      }
      if (other.U50 != 0) {
        U50 = other.U50;
      }
      if (other.U51 != 0) {
        U51 = other.U51;
      }
      if (other.U52 != 0) {
        U52 = other.U52;
      }
      if (other.U53 != 0) {
        U53 = other.U53;
      }
      if (other.U54 != 0) {
        U54 = other.U54;
      }
      if (other.U55 != 0) {
        U55 = other.U55;
      }
      if (other.U56 != 0) {
        U56 = other.U56;
      }
      if (other.U57 != 0) {
        U57 = other.U57;
      }
      if (other.U58 != 0) {
        U58 = other.U58;
      }
      if (other.U59 != 0) {
        U59 = other.U59;
      }
      if (other.U60 != 0) {
        U60 = other.U60;
      }
      if (other.U61 != 0) {
        U61 = other.U61;
      }
      if (other.U62 != 0) {
        U62 = other.U62;
      }
      if (other.U63 != 0) {
        U63 = other.U63;
      }
      if (other.U64 != 0) {
        U64 = other.U64;
      }
      if (other.U65 != 0) {
        U65 = other.U65;
      }
      if (other.U66 != 0) {
        U66 = other.U66;
      }
      if (other.U67 != 0) {
        U67 = other.U67;
      }
      if (other.U68 != 0) {
        U68 = other.U68;
      }
      if (other.U69 != 0) {
        U69 = other.U69;
      }
      if (other.U70 != 0) {
        U70 = other.U70;
      }
      if (other.U71 != 0) {
        U71 = other.U71;
      }
      if (other.U72 != 0) {
        U72 = other.U72;
      }
      if (other.U73 != 0) {
        U73 = other.U73;
      }
      if (other.U74 != 0) {
        U74 = other.U74;
      }
      if (other.U75 != 0) {
        U75 = other.U75;
      }
      if (other.U76 != 0) {
        U76 = other.U76;
      }
      if (other.U77 != 0) {
        U77 = other.U77;
      }
      if (other.U78 != 0) {
        U78 = other.U78;
      }
      if (other.U79 != 0) {
        U79 = other.U79;
      }
      if (other.U80 != 0) {
        U80 = other.U80;
      }
      if (other.U81 != 0) {
        U81 = other.U81;
      }
      if (other.U82 != 0) {
        U82 = other.U82;
      }
      if (other.U83 != 0) {
        U83 = other.U83;
      }
      if (other.U84 != 0) {
        U84 = other.U84;
      }
      if (other.U85 != 0) {
        U85 = other.U85;
      }
      if (other.U86 != 0) {
        U86 = other.U86;
      }
      if (other.U87 != 0) {
        U87 = other.U87;
      }
      if (other.U88 != 0) {
        U88 = other.U88;
      }
      if (other.U89 != 0) {
        U89 = other.U89;
      }
      if (other.U90 != 0) {
        U90 = other.U90;
      }
      if (other.U91 != 0) {
        U91 = other.U91;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NpcUnitId = input.ReadInt32();
            break;
          }
          case 18: {
            U2 = input.ReadString();
            break;
          }
          case 24: {
            U3 = input.ReadInt32();
            break;
          }
          case 32: {
            U4 = input.ReadInt32();
            break;
          }
          case 42: {
            TrainerActorId = input.ReadString();
            break;
          }
          case 50: {
            MonsterActorId = input.ReadString();
            break;
          }
          case 56: {
            role_ = (global::ReMastersLib.Role) input.ReadEnum();
            break;
          }
          case 64: {
            U8 = input.ReadInt32();
            break;
          }
          case 72: {
            Move1Id = input.ReadInt32();
            break;
          }
          case 80: {
            Move2Id = input.ReadInt32();
            break;
          }
          case 88: {
            Move3Id = input.ReadInt32();
            break;
          }
          case 96: {
            Move4Id = input.ReadInt32();
            break;
          }
          case 104: {
            Move5Id = input.ReadInt32();
            break;
          }
          case 112: {
            Move6Id = input.ReadInt32();
            break;
          }
          case 120: {
            Move1Uses = input.ReadInt32();
            break;
          }
          case 128: {
            Move2Uses = input.ReadInt32();
            break;
          }
          case 136: {
            Move3Uses = input.ReadInt32();
            break;
          }
          case 144: {
            Move4Uses = input.ReadInt32();
            break;
          }
          case 152: {
            Move5Uses = input.ReadInt32();
            break;
          }
          case 160: {
            Move6Uses = input.ReadInt32();
            break;
          }
          case 168: {
            SyncMoveId = input.ReadInt32();
            break;
          }
          case 176: {
            Level = input.ReadInt32();
            break;
          }
          case 184: {
            Passive1Id = input.ReadInt32();
            break;
          }
          case 192: {
            Passive2Id = input.ReadInt32();
            break;
          }
          case 200: {
            Passive3Id = input.ReadInt32();
            break;
          }
          case 208: {
            Passive4Id = input.ReadInt32();
            break;
          }
          case 216: {
            Passive5Id = input.ReadInt32();
            break;
          }
          case 224: {
            U28 = input.ReadInt32();
            break;
          }
          case 232: {
            U29 = input.ReadInt32();
            break;
          }
          case 240: {
            U30 = input.ReadInt32();
            break;
          }
          case 248: {
            U31 = input.ReadInt32();
            break;
          }
          case 256: {
            U32 = input.ReadInt32();
            break;
          }
          case 264: {
            HpScale = input.ReadInt32();
            break;
          }
          case 272: {
            AtkScale = input.ReadInt32();
            break;
          }
          case 280: {
            DefScale = input.ReadInt32();
            break;
          }
          case 288: {
            SpaScale = input.ReadInt32();
            break;
          }
          case 296: {
            SpdScale = input.ReadInt32();
            break;
          }
          case 304: {
            SpeScale = input.ReadInt32();
            break;
          }
          case 312: {
            WeakType = input.ReadInt32();
            break;
          }
          case 320: {
            State1 = input.ReadInt32();
            break;
          }
          case 328: {
            State2 = input.ReadInt32();
            break;
          }
          case 336: {
            U42 = input.ReadInt32();
            break;
          }
          case 344: {
            U43 = input.ReadInt32();
            break;
          }
          case 352: {
            U44 = input.ReadInt32();
            break;
          }
          case 360: {
            U45 = input.ReadInt32();
            break;
          }
          case 368: {
            U46 = input.ReadInt32();
            break;
          }
          case 376: {
            U47 = input.ReadInt32();
            break;
          }
          case 384: {
            U48 = input.ReadInt32();
            break;
          }
          case 392: {
            U49 = input.ReadInt32();
            break;
          }
          case 400: {
            U50 = input.ReadInt32();
            break;
          }
          case 408: {
            U51 = input.ReadInt32();
            break;
          }
          case 416: {
            U52 = input.ReadInt32();
            break;
          }
          case 424: {
            U53 = input.ReadInt32();
            break;
          }
          case 432: {
            U54 = input.ReadInt32();
            break;
          }
          case 440: {
            U55 = input.ReadInt32();
            break;
          }
          case 448: {
            U56 = input.ReadInt32();
            break;
          }
          case 456: {
            U57 = input.ReadInt32();
            break;
          }
          case 464: {
            U58 = input.ReadInt32();
            break;
          }
          case 472: {
            U59 = input.ReadInt32();
            break;
          }
          case 480: {
            U60 = input.ReadInt32();
            break;
          }
          case 488: {
            U61 = input.ReadInt32();
            break;
          }
          case 496: {
            U62 = input.ReadInt32();
            break;
          }
          case 504: {
            U63 = input.ReadInt32();
            break;
          }
          case 512: {
            U64 = input.ReadInt32();
            break;
          }
          case 520: {
            U65 = input.ReadInt32();
            break;
          }
          case 528: {
            U66 = input.ReadInt32();
            break;
          }
          case 536: {
            U67 = input.ReadInt32();
            break;
          }
          case 544: {
            U68 = input.ReadInt32();
            break;
          }
          case 552: {
            U69 = input.ReadInt32();
            break;
          }
          case 560: {
            U70 = input.ReadInt32();
            break;
          }
          case 568: {
            U71 = input.ReadInt32();
            break;
          }
          case 576: {
            U72 = input.ReadInt32();
            break;
          }
          case 584: {
            U73 = input.ReadInt32();
            break;
          }
          case 592: {
            U74 = input.ReadInt32();
            break;
          }
          case 600: {
            U75 = input.ReadInt32();
            break;
          }
          case 608: {
            U76 = input.ReadInt32();
            break;
          }
          case 616: {
            U77 = input.ReadInt32();
            break;
          }
          case 624: {
            U78 = input.ReadInt32();
            break;
          }
          case 632: {
            U79 = input.ReadInt32();
            break;
          }
          case 640: {
            U80 = input.ReadInt32();
            break;
          }
          case 648: {
            U81 = input.ReadInt32();
            break;
          }
          case 656: {
            U82 = input.ReadInt32();
            break;
          }
          case 664: {
            U83 = input.ReadInt32();
            break;
          }
          case 672: {
            U84 = input.ReadInt32();
            break;
          }
          case 680: {
            U85 = input.ReadInt32();
            break;
          }
          case 688: {
            U86 = input.ReadInt32();
            break;
          }
          case 696: {
            U87 = input.ReadInt32();
            break;
          }
          case 704: {
            U88 = input.ReadInt32();
            break;
          }
          case 712: {
            U89 = input.ReadInt32();
            break;
          }
          case 720: {
            U90 = input.ReadInt32();
            break;
          }
          case 728: {
            U91 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleNpcUnitTable : pb::IMessage<BattleNpcUnitTable> {
    private static readonly pb::MessageParser<BattleNpcUnitTable> _parser = new pb::MessageParser<BattleNpcUnitTable>(() => new BattleNpcUnitTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleNpcUnitTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BattleNpcUnitReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleNpcUnitTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleNpcUnitTable(BattleNpcUnitTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleNpcUnitTable Clone() {
      return new BattleNpcUnitTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.BattleNpcUnit> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.BattleNpcUnit.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.BattleNpcUnit> entries_ = new pbc::RepeatedField<global::ReMastersLib.BattleNpcUnit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.BattleNpcUnit> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleNpcUnitTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleNpcUnitTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleNpcUnitTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
