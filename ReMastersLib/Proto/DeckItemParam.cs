// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/DeckItemParam.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/DeckItemParam.proto</summary>
  public static partial class DeckItemParamReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/DeckItemParam.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeckItemParamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9EZWNrSXRlbVBhcmFtLnByb3RvEgxSZU1hc3RlcnNMaWIixQEK",
            "DURlY2tJdGVtUGFyYW0SGAoQZGVja0l0ZW1QYXJhbV9pZBgBIAEoBBImCgVC",
            "b29zdBgCIAEoDjIXLlJlTWFzdGVyc0xpYi5Cb29zdFN0YXQSEQoJTHYxX2Jv",
            "b3N0GAMgASgFEhEKCUx2M19ib29zdBgEIAEoBRIRCglMdjZfYm9vc3QYBSAB",
            "KAUSEQoJTHY5X2Jvb3N0GAYgASgFEhIKCkx2MTJfYm9vc3QYByABKAUSEgoK",
            "THYxNV9ib29zdBgIIAEoBSJCChJEZWNrSXRlbVBhcmFtVGFibGUSLAoHZW50",
            "cmllcxgBIAMoCzIbLlJlTWFzdGVyc0xpYi5EZWNrSXRlbVBhcmFtKkoKCUJv",
            "b3N0U3RhdBIICgRub25lEAASBgoCSFAQARIHCgNBVEsQAhIHCgNERUYQAxIH",
            "CgNTUEEQBBIHCgNTUEQQBRIHCgNTUEUQBmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ReMastersLib.BoostStat), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.DeckItemParam), global::ReMastersLib.DeckItemParam.Parser, new[]{ "DeckItemParamId", "Boost", "Lv1Boost", "Lv3Boost", "Lv6Boost", "Lv9Boost", "Lv12Boost", "Lv15Boost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.DeckItemParamTable), global::ReMastersLib.DeckItemParamTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BoostStat {
    [pbr::OriginalName("none")] None = 0,
    [pbr::OriginalName("HP")] Hp = 1,
    [pbr::OriginalName("ATK")] Atk = 2,
    [pbr::OriginalName("DEF")] Def = 3,
    [pbr::OriginalName("SPA")] Spa = 4,
    [pbr::OriginalName("SPD")] Spd = 5,
    [pbr::OriginalName("SPE")] Spe = 6,
  }

  #endregion

  #region Messages
  public sealed partial class DeckItemParam : pb::IMessage<DeckItemParam> {
    private static readonly pb::MessageParser<DeckItemParam> _parser = new pb::MessageParser<DeckItemParam>(() => new DeckItemParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckItemParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.DeckItemParamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckItemParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckItemParam(DeckItemParam other) : this() {
      deckItemParamId_ = other.deckItemParamId_;
      boost_ = other.boost_;
      lv1Boost_ = other.lv1Boost_;
      lv3Boost_ = other.lv3Boost_;
      lv6Boost_ = other.lv6Boost_;
      lv9Boost_ = other.lv9Boost_;
      lv12Boost_ = other.lv12Boost_;
      lv15Boost_ = other.lv15Boost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckItemParam Clone() {
      return new DeckItemParam(this);
    }

    /// <summary>Field number for the "deckItemParam_id" field.</summary>
    public const int DeckItemParamIdFieldNumber = 1;
    private ulong deckItemParamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DeckItemParamId {
      get { return deckItemParamId_; }
      set {
        deckItemParamId_ = value;
      }
    }

    /// <summary>Field number for the "Boost" field.</summary>
    public const int BoostFieldNumber = 2;
    private global::ReMastersLib.BoostStat boost_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ReMastersLib.BoostStat Boost {
      get { return boost_; }
      set {
        boost_ = value;
      }
    }

    /// <summary>Field number for the "Lv1_boost" field.</summary>
    public const int Lv1BoostFieldNumber = 3;
    private int lv1Boost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv1Boost {
      get { return lv1Boost_; }
      set {
        lv1Boost_ = value;
      }
    }

    /// <summary>Field number for the "Lv3_boost" field.</summary>
    public const int Lv3BoostFieldNumber = 4;
    private int lv3Boost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv3Boost {
      get { return lv3Boost_; }
      set {
        lv3Boost_ = value;
      }
    }

    /// <summary>Field number for the "Lv6_boost" field.</summary>
    public const int Lv6BoostFieldNumber = 5;
    private int lv6Boost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv6Boost {
      get { return lv6Boost_; }
      set {
        lv6Boost_ = value;
      }
    }

    /// <summary>Field number for the "Lv9_boost" field.</summary>
    public const int Lv9BoostFieldNumber = 6;
    private int lv9Boost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv9Boost {
      get { return lv9Boost_; }
      set {
        lv9Boost_ = value;
      }
    }

    /// <summary>Field number for the "Lv12_boost" field.</summary>
    public const int Lv12BoostFieldNumber = 7;
    private int lv12Boost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv12Boost {
      get { return lv12Boost_; }
      set {
        lv12Boost_ = value;
      }
    }

    /// <summary>Field number for the "Lv15_boost" field.</summary>
    public const int Lv15BoostFieldNumber = 8;
    private int lv15Boost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lv15Boost {
      get { return lv15Boost_; }
      set {
        lv15Boost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckItemParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckItemParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeckItemParamId != other.DeckItemParamId) return false;
      if (Boost != other.Boost) return false;
      if (Lv1Boost != other.Lv1Boost) return false;
      if (Lv3Boost != other.Lv3Boost) return false;
      if (Lv6Boost != other.Lv6Boost) return false;
      if (Lv9Boost != other.Lv9Boost) return false;
      if (Lv12Boost != other.Lv12Boost) return false;
      if (Lv15Boost != other.Lv15Boost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeckItemParamId != 0UL) hash ^= DeckItemParamId.GetHashCode();
      if (Boost != 0) hash ^= Boost.GetHashCode();
      if (Lv1Boost != 0) hash ^= Lv1Boost.GetHashCode();
      if (Lv3Boost != 0) hash ^= Lv3Boost.GetHashCode();
      if (Lv6Boost != 0) hash ^= Lv6Boost.GetHashCode();
      if (Lv9Boost != 0) hash ^= Lv9Boost.GetHashCode();
      if (Lv12Boost != 0) hash ^= Lv12Boost.GetHashCode();
      if (Lv15Boost != 0) hash ^= Lv15Boost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeckItemParamId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(DeckItemParamId);
      }
      if (Boost != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Boost);
      }
      if (Lv1Boost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Lv1Boost);
      }
      if (Lv3Boost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Lv3Boost);
      }
      if (Lv6Boost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Lv6Boost);
      }
      if (Lv9Boost != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Lv9Boost);
      }
      if (Lv12Boost != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Lv12Boost);
      }
      if (Lv15Boost != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Lv15Boost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeckItemParamId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeckItemParamId);
      }
      if (Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Boost);
      }
      if (Lv1Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv1Boost);
      }
      if (Lv3Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv3Boost);
      }
      if (Lv6Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv6Boost);
      }
      if (Lv9Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv9Boost);
      }
      if (Lv12Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv12Boost);
      }
      if (Lv15Boost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lv15Boost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckItemParam other) {
      if (other == null) {
        return;
      }
      if (other.DeckItemParamId != 0UL) {
        DeckItemParamId = other.DeckItemParamId;
      }
      if (other.Boost != 0) {
        Boost = other.Boost;
      }
      if (other.Lv1Boost != 0) {
        Lv1Boost = other.Lv1Boost;
      }
      if (other.Lv3Boost != 0) {
        Lv3Boost = other.Lv3Boost;
      }
      if (other.Lv6Boost != 0) {
        Lv6Boost = other.Lv6Boost;
      }
      if (other.Lv9Boost != 0) {
        Lv9Boost = other.Lv9Boost;
      }
      if (other.Lv12Boost != 0) {
        Lv12Boost = other.Lv12Boost;
      }
      if (other.Lv15Boost != 0) {
        Lv15Boost = other.Lv15Boost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeckItemParamId = input.ReadUInt64();
            break;
          }
          case 16: {
            boost_ = (global::ReMastersLib.BoostStat) input.ReadEnum();
            break;
          }
          case 24: {
            Lv1Boost = input.ReadInt32();
            break;
          }
          case 32: {
            Lv3Boost = input.ReadInt32();
            break;
          }
          case 40: {
            Lv6Boost = input.ReadInt32();
            break;
          }
          case 48: {
            Lv9Boost = input.ReadInt32();
            break;
          }
          case 56: {
            Lv12Boost = input.ReadInt32();
            break;
          }
          case 64: {
            Lv15Boost = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeckItemParamTable : pb::IMessage<DeckItemParamTable> {
    private static readonly pb::MessageParser<DeckItemParamTable> _parser = new pb::MessageParser<DeckItemParamTable>(() => new DeckItemParamTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckItemParamTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.DeckItemParamReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckItemParamTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckItemParamTable(DeckItemParamTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckItemParamTable Clone() {
      return new DeckItemParamTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.DeckItemParam> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.DeckItemParam.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.DeckItemParam> entries_ = new pbc::RepeatedField<global::ReMastersLib.DeckItemParam>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.DeckItemParam> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckItemParamTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckItemParamTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckItemParamTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
