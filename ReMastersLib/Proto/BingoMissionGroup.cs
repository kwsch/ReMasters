// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/BingoMissionGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/BingoMissionGroup.proto</summary>
  public static partial class BingoMissionGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/BingoMissionGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BingoMissionGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1Qcm90by9CaW5nb01pc3Npb25Hcm91cC5wcm90bxIMUmVNYXN0ZXJzTGli",
            "IqkCChFCaW5nb01pc3Npb25Hcm91cBIeChZiaW5nb19taXNzaW9uX2dyb3Vw",
            "X2lkGAEgASgFEgoKAnUyGAIgASgFEhMKC3NjaGVkdWxlX2lkGAMgASgJEh0K",
            "FWJpbmdvX21pc3Npb25fY2FyZF9pZBgEIAEoBRIfChdiaW5nb19taXNzaW9u",
            "X3Jld2FyZF9pZBgFIAEoBRIKCgJ1NhgGIAEoBRIRCgliYW5uZXJfaWQYByAB",
            "KAUSCgoCdTgYCCABKAUSIwobcHJldl9iaW5nb19taXNzaW9uX2dyb3VwX2lk",
            "GAkgASgFEikKIWJpbmdvX21pc3Npb25fZ3JvdXBfcGVybWlzc2lvbl9pZBgK",
            "IAEoBRILCgN1MTEYCyABKAUSCwoDdTEyGAwgASgFIkoKFkJpbmdvTWlzc2lv",
            "bkdyb3VwVGFibGUSMAoHZW50cmllcxgBIAMoCzIfLlJlTWFzdGVyc0xpYi5C",
            "aW5nb01pc3Npb25Hcm91cGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BingoMissionGroup), global::ReMastersLib.BingoMissionGroup.Parser, new[]{ "BingoMissionGroupId", "U2", "ScheduleId", "BingoMissionCardId", "BingoMissionRewardId", "U6", "BannerId", "U8", "PrevBingoMissionGroupId", "BingoMissionGroupPermissionId", "U11", "U12" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BingoMissionGroupTable), global::ReMastersLib.BingoMissionGroupTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BingoMissionGroup : pb::IMessage<BingoMissionGroup> {
    private static readonly pb::MessageParser<BingoMissionGroup> _parser = new pb::MessageParser<BingoMissionGroup>(() => new BingoMissionGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BingoMissionGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BingoMissionGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionGroup(BingoMissionGroup other) : this() {
      bingoMissionGroupId_ = other.bingoMissionGroupId_;
      u2_ = other.u2_;
      scheduleId_ = other.scheduleId_;
      bingoMissionCardId_ = other.bingoMissionCardId_;
      bingoMissionRewardId_ = other.bingoMissionRewardId_;
      u6_ = other.u6_;
      bannerId_ = other.bannerId_;
      u8_ = other.u8_;
      prevBingoMissionGroupId_ = other.prevBingoMissionGroupId_;
      bingoMissionGroupPermissionId_ = other.bingoMissionGroupPermissionId_;
      u11_ = other.u11_;
      u12_ = other.u12_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionGroup Clone() {
      return new BingoMissionGroup(this);
    }

    /// <summary>Field number for the "bingo_mission_group_id" field.</summary>
    public const int BingoMissionGroupIdFieldNumber = 1;
    private int bingoMissionGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BingoMissionGroupId {
      get { return bingoMissionGroupId_; }
      set {
        bingoMissionGroupId_ = value;
      }
    }

    /// <summary>Field number for the "u2" field.</summary>
    public const int U2FieldNumber = 2;
    private int u2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U2 {
      get { return u2_; }
      set {
        u2_ = value;
      }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 3;
    private string scheduleId_ = "";
    /// <summary>
    /// Schedule.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bingo_mission_card_id" field.</summary>
    public const int BingoMissionCardIdFieldNumber = 4;
    private int bingoMissionCardId_;
    /// <summary>
    /// These two might be inversed but there's no way to
    /// actually know since they have the same value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BingoMissionCardId {
      get { return bingoMissionCardId_; }
      set {
        bingoMissionCardId_ = value;
      }
    }

    /// <summary>Field number for the "bingo_mission_reward_id" field.</summary>
    public const int BingoMissionRewardIdFieldNumber = 5;
    private int bingoMissionRewardId_;
    /// <summary>
    /// BingoMissionReward.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BingoMissionRewardId {
      get { return bingoMissionRewardId_; }
      set {
        bingoMissionRewardId_ = value;
      }
    }

    /// <summary>Field number for the "u6" field.</summary>
    public const int U6FieldNumber = 6;
    private int u6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U6 {
      get { return u6_; }
      set {
        u6_ = value;
      }
    }

    /// <summary>Field number for the "banner_id" field.</summary>
    public const int BannerIdFieldNumber = 7;
    private int bannerId_;
    /// <summary>
    /// Banner.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BannerId {
      get { return bannerId_; }
      set {
        bannerId_ = value;
      }
    }

    /// <summary>Field number for the "u8" field.</summary>
    public const int U8FieldNumber = 8;
    private int u8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U8 {
      get { return u8_; }
      set {
        u8_ = value;
      }
    }

    /// <summary>Field number for the "prev_bingo_mission_group_id" field.</summary>
    public const int PrevBingoMissionGroupIdFieldNumber = 9;
    private int prevBingoMissionGroupId_;
    /// <summary>
    /// id of the bingo that needs to be finished before
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PrevBingoMissionGroupId {
      get { return prevBingoMissionGroupId_; }
      set {
        prevBingoMissionGroupId_ = value;
      }
    }

    /// <summary>Field number for the "bingo_mission_group_permission_id" field.</summary>
    public const int BingoMissionGroupPermissionIdFieldNumber = 10;
    private int bingoMissionGroupPermissionId_;
    /// <summary>
    /// bingo_mission_group_permission_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BingoMissionGroupPermissionId {
      get { return bingoMissionGroupPermissionId_; }
      set {
        bingoMissionGroupPermissionId_ = value;
      }
    }

    /// <summary>Field number for the "u11" field.</summary>
    public const int U11FieldNumber = 11;
    private int u11_;
    /// <summary>
    /// boolean?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U11 {
      get { return u11_; }
      set {
        u11_ = value;
      }
    }

    /// <summary>Field number for the "u12" field.</summary>
    public const int U12FieldNumber = 12;
    private int u12_;
    /// <summary>
    /// boolean?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U12 {
      get { return u12_; }
      set {
        u12_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BingoMissionGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BingoMissionGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BingoMissionGroupId != other.BingoMissionGroupId) return false;
      if (U2 != other.U2) return false;
      if (ScheduleId != other.ScheduleId) return false;
      if (BingoMissionCardId != other.BingoMissionCardId) return false;
      if (BingoMissionRewardId != other.BingoMissionRewardId) return false;
      if (U6 != other.U6) return false;
      if (BannerId != other.BannerId) return false;
      if (U8 != other.U8) return false;
      if (PrevBingoMissionGroupId != other.PrevBingoMissionGroupId) return false;
      if (BingoMissionGroupPermissionId != other.BingoMissionGroupPermissionId) return false;
      if (U11 != other.U11) return false;
      if (U12 != other.U12) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BingoMissionGroupId != 0) hash ^= BingoMissionGroupId.GetHashCode();
      if (U2 != 0) hash ^= U2.GetHashCode();
      if (ScheduleId.Length != 0) hash ^= ScheduleId.GetHashCode();
      if (BingoMissionCardId != 0) hash ^= BingoMissionCardId.GetHashCode();
      if (BingoMissionRewardId != 0) hash ^= BingoMissionRewardId.GetHashCode();
      if (U6 != 0) hash ^= U6.GetHashCode();
      if (BannerId != 0) hash ^= BannerId.GetHashCode();
      if (U8 != 0) hash ^= U8.GetHashCode();
      if (PrevBingoMissionGroupId != 0) hash ^= PrevBingoMissionGroupId.GetHashCode();
      if (BingoMissionGroupPermissionId != 0) hash ^= BingoMissionGroupPermissionId.GetHashCode();
      if (U11 != 0) hash ^= U11.GetHashCode();
      if (U12 != 0) hash ^= U12.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BingoMissionGroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BingoMissionGroupId);
      }
      if (U2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(U2);
      }
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ScheduleId);
      }
      if (BingoMissionCardId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BingoMissionCardId);
      }
      if (BingoMissionRewardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BingoMissionRewardId);
      }
      if (U6 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(U6);
      }
      if (BannerId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BannerId);
      }
      if (U8 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(U8);
      }
      if (PrevBingoMissionGroupId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PrevBingoMissionGroupId);
      }
      if (BingoMissionGroupPermissionId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BingoMissionGroupPermissionId);
      }
      if (U11 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(U11);
      }
      if (U12 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(U12);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BingoMissionGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BingoMissionGroupId);
      }
      if (U2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U2);
      }
      if (ScheduleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleId);
      }
      if (BingoMissionCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BingoMissionCardId);
      }
      if (BingoMissionRewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BingoMissionRewardId);
      }
      if (U6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U6);
      }
      if (BannerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BannerId);
      }
      if (U8 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U8);
      }
      if (PrevBingoMissionGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrevBingoMissionGroupId);
      }
      if (BingoMissionGroupPermissionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BingoMissionGroupPermissionId);
      }
      if (U11 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U11);
      }
      if (U12 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U12);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BingoMissionGroup other) {
      if (other == null) {
        return;
      }
      if (other.BingoMissionGroupId != 0) {
        BingoMissionGroupId = other.BingoMissionGroupId;
      }
      if (other.U2 != 0) {
        U2 = other.U2;
      }
      if (other.ScheduleId.Length != 0) {
        ScheduleId = other.ScheduleId;
      }
      if (other.BingoMissionCardId != 0) {
        BingoMissionCardId = other.BingoMissionCardId;
      }
      if (other.BingoMissionRewardId != 0) {
        BingoMissionRewardId = other.BingoMissionRewardId;
      }
      if (other.U6 != 0) {
        U6 = other.U6;
      }
      if (other.BannerId != 0) {
        BannerId = other.BannerId;
      }
      if (other.U8 != 0) {
        U8 = other.U8;
      }
      if (other.PrevBingoMissionGroupId != 0) {
        PrevBingoMissionGroupId = other.PrevBingoMissionGroupId;
      }
      if (other.BingoMissionGroupPermissionId != 0) {
        BingoMissionGroupPermissionId = other.BingoMissionGroupPermissionId;
      }
      if (other.U11 != 0) {
        U11 = other.U11;
      }
      if (other.U12 != 0) {
        U12 = other.U12;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BingoMissionGroupId = input.ReadInt32();
            break;
          }
          case 16: {
            U2 = input.ReadInt32();
            break;
          }
          case 26: {
            ScheduleId = input.ReadString();
            break;
          }
          case 32: {
            BingoMissionCardId = input.ReadInt32();
            break;
          }
          case 40: {
            BingoMissionRewardId = input.ReadInt32();
            break;
          }
          case 48: {
            U6 = input.ReadInt32();
            break;
          }
          case 56: {
            BannerId = input.ReadInt32();
            break;
          }
          case 64: {
            U8 = input.ReadInt32();
            break;
          }
          case 72: {
            PrevBingoMissionGroupId = input.ReadInt32();
            break;
          }
          case 80: {
            BingoMissionGroupPermissionId = input.ReadInt32();
            break;
          }
          case 88: {
            U11 = input.ReadInt32();
            break;
          }
          case 96: {
            U12 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BingoMissionGroupTable : pb::IMessage<BingoMissionGroupTable> {
    private static readonly pb::MessageParser<BingoMissionGroupTable> _parser = new pb::MessageParser<BingoMissionGroupTable>(() => new BingoMissionGroupTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BingoMissionGroupTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BingoMissionGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionGroupTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionGroupTable(BingoMissionGroupTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionGroupTable Clone() {
      return new BingoMissionGroupTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.BingoMissionGroup> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.BingoMissionGroup.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.BingoMissionGroup> entries_ = new pbc::RepeatedField<global::ReMastersLib.BingoMissionGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.BingoMissionGroup> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BingoMissionGroupTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BingoMissionGroupTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BingoMissionGroupTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
