// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/TeamSkillTag.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/TeamSkillTag.proto</summary>
  public static partial class TeamSkillTagReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/TeamSkillTag.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TeamSkillTagReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90by9UZWFtU2tpbGxUYWcucHJvdG8SDFJlTWFzdGVyc0xpYiJzCgxU",
            "ZWFtU2tpbGxUYWcSGQoRdGVhbV9za2lsbF90YWdfaWQYASABKAQSGwoTdGVh",
            "bV9za2lsbF90YWdfdHlwZRgCIAEoBRIKCgJ1MxgDIAEoBRIKCgJ1NBgEIAEo",
            "BRITCgtzY2hlZHVsZV9pZBgFIAEoCSJAChFUZWFtU2tpbGxUYWdUYWJsZRIr",
            "CgdlbnRyaWVzGAEgAygLMhouUmVNYXN0ZXJzTGliLlRlYW1Ta2lsbFRhZ2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.TeamSkillTag), global::ReMastersLib.TeamSkillTag.Parser, new[]{ "TeamSkillTagId", "TeamSkillTagType", "U3", "U4", "ScheduleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.TeamSkillTagTable), global::ReMastersLib.TeamSkillTagTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TeamSkillTag : pb::IMessage<TeamSkillTag> {
    private static readonly pb::MessageParser<TeamSkillTag> _parser = new pb::MessageParser<TeamSkillTag>(() => new TeamSkillTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamSkillTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.TeamSkillTagReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTag(TeamSkillTag other) : this() {
      teamSkillTagId_ = other.teamSkillTagId_;
      teamSkillTagType_ = other.teamSkillTagType_;
      u3_ = other.u3_;
      u4_ = other.u4_;
      scheduleId_ = other.scheduleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTag Clone() {
      return new TeamSkillTag(this);
    }

    /// <summary>Field number for the "team_skill_tag_id" field.</summary>
    public const int TeamSkillTagIdFieldNumber = 1;
    private ulong teamSkillTagId_;
    /// <summary>
    /// team_skill_tag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TeamSkillTagId {
      get { return teamSkillTagId_; }
      set {
        teamSkillTagId_ = value;
      }
    }

    /// <summary>Field number for the "team_skill_tag_type" field.</summary>
    public const int TeamSkillTagTypeFieldNumber = 2;
    private int teamSkillTagType_;
    /// <summary>
    /// motif_type_name_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeamSkillTagType {
      get { return teamSkillTagType_; }
      set {
        teamSkillTagType_ = value;
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private int u3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private int u4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 5;
    private string scheduleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamSkillTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamSkillTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamSkillTagId != other.TeamSkillTagId) return false;
      if (TeamSkillTagType != other.TeamSkillTagType) return false;
      if (U3 != other.U3) return false;
      if (U4 != other.U4) return false;
      if (ScheduleId != other.ScheduleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamSkillTagId != 0UL) hash ^= TeamSkillTagId.GetHashCode();
      if (TeamSkillTagType != 0) hash ^= TeamSkillTagType.GetHashCode();
      if (U3 != 0) hash ^= U3.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (ScheduleId.Length != 0) hash ^= ScheduleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamSkillTagId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TeamSkillTagId);
      }
      if (TeamSkillTagType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TeamSkillTagType);
      }
      if (U3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(U3);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(U4);
      }
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ScheduleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamSkillTagId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TeamSkillTagId);
      }
      if (TeamSkillTagType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamSkillTagType);
      }
      if (U3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U3);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U4);
      }
      if (ScheduleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamSkillTag other) {
      if (other == null) {
        return;
      }
      if (other.TeamSkillTagId != 0UL) {
        TeamSkillTagId = other.TeamSkillTagId;
      }
      if (other.TeamSkillTagType != 0) {
        TeamSkillTagType = other.TeamSkillTagType;
      }
      if (other.U3 != 0) {
        U3 = other.U3;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      if (other.ScheduleId.Length != 0) {
        ScheduleId = other.ScheduleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamSkillTagId = input.ReadUInt64();
            break;
          }
          case 16: {
            TeamSkillTagType = input.ReadInt32();
            break;
          }
          case 24: {
            U3 = input.ReadInt32();
            break;
          }
          case 32: {
            U4 = input.ReadInt32();
            break;
          }
          case 42: {
            ScheduleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamSkillTagTable : pb::IMessage<TeamSkillTagTable> {
    private static readonly pb::MessageParser<TeamSkillTagTable> _parser = new pb::MessageParser<TeamSkillTagTable>(() => new TeamSkillTagTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamSkillTagTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.TeamSkillTagReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTagTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTagTable(TeamSkillTagTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTagTable Clone() {
      return new TeamSkillTagTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.TeamSkillTag> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.TeamSkillTag.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.TeamSkillTag> entries_ = new pbc::RepeatedField<global::ReMastersLib.TeamSkillTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.TeamSkillTag> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamSkillTagTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamSkillTagTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamSkillTagTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
