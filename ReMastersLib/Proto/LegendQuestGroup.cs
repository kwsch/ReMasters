// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/LegendQuestGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/LegendQuestGroup.proto</summary>
  public static partial class LegendQuestGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/LegendQuestGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LegendQuestGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90by9MZWdlbmRRdWVzdEdyb3VwLnByb3RvEgxSZU1hc3RlcnNMaWIi",
            "lwEKEExlZ2VuZFF1ZXN0R3JvdXASFgoOcXVlc3RfZ3JvdXBfaWQYASABKAMS",
            "EQoJYmFubmVyX2lkGAIgASgFEgoKAnUzGAMgASgFEgoKAnU0GAQgASgJEgoK",
            "AnU1GAUgASgJEg4KBmJnbV9pZBgGIAEoCRIPCgdpdGVtX2lkGAcgASgDEhMK",
            "C21pc3Npb25faWRzGAggAygFIkgKFUxlZ2VuZFF1ZXN0R3JvdXBUYWJsZRIv",
            "CgdlbnRyaWVzGAEgAygLMh4uUmVNYXN0ZXJzTGliLkxlZ2VuZFF1ZXN0R3Jv",
            "dXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.LegendQuestGroup), global::ReMastersLib.LegendQuestGroup.Parser, new[]{ "QuestGroupId", "BannerId", "U3", "U4", "U5", "BgmId", "ItemId", "MissionIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.LegendQuestGroupTable), global::ReMastersLib.LegendQuestGroupTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LegendQuestGroup : pb::IMessage<LegendQuestGroup> {
    private static readonly pb::MessageParser<LegendQuestGroup> _parser = new pb::MessageParser<LegendQuestGroup>(() => new LegendQuestGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LegendQuestGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.LegendQuestGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegendQuestGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegendQuestGroup(LegendQuestGroup other) : this() {
      questGroupId_ = other.questGroupId_;
      bannerId_ = other.bannerId_;
      u3_ = other.u3_;
      u4_ = other.u4_;
      u5_ = other.u5_;
      bgmId_ = other.bgmId_;
      itemId_ = other.itemId_;
      missionIds_ = other.missionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegendQuestGroup Clone() {
      return new LegendQuestGroup(this);
    }

    /// <summary>Field number for the "quest_group_id" field.</summary>
    public const int QuestGroupIdFieldNumber = 1;
    private long questGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long QuestGroupId {
      get { return questGroupId_; }
      set {
        questGroupId_ = value;
      }
    }

    /// <summary>Field number for the "banner_id" field.</summary>
    public const int BannerIdFieldNumber = 2;
    private int bannerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BannerId {
      get { return bannerId_; }
      set {
        bannerId_ = value;
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private int u3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private string u4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U4 {
      get { return u4_; }
      set {
        u4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u5" field.</summary>
    public const int U5FieldNumber = 5;
    private string u5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U5 {
      get { return u5_; }
      set {
        u5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bgm_id" field.</summary>
    public const int BgmIdFieldNumber = 6;
    private string bgmId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BgmId {
      get { return bgmId_; }
      set {
        bgmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 7;
    private long itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "mission_ids" field.</summary>
    public const int MissionIdsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_missionIds_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> missionIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MissionIds {
      get { return missionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LegendQuestGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LegendQuestGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestGroupId != other.QuestGroupId) return false;
      if (BannerId != other.BannerId) return false;
      if (U3 != other.U3) return false;
      if (U4 != other.U4) return false;
      if (U5 != other.U5) return false;
      if (BgmId != other.BgmId) return false;
      if (ItemId != other.ItemId) return false;
      if(!missionIds_.Equals(other.missionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestGroupId != 0L) hash ^= QuestGroupId.GetHashCode();
      if (BannerId != 0) hash ^= BannerId.GetHashCode();
      if (U3 != 0) hash ^= U3.GetHashCode();
      if (U4.Length != 0) hash ^= U4.GetHashCode();
      if (U5.Length != 0) hash ^= U5.GetHashCode();
      if (BgmId.Length != 0) hash ^= BgmId.GetHashCode();
      if (ItemId != 0L) hash ^= ItemId.GetHashCode();
      hash ^= missionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QuestGroupId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(QuestGroupId);
      }
      if (BannerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BannerId);
      }
      if (U3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(U3);
      }
      if (U4.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(U4);
      }
      if (U5.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(U5);
      }
      if (BgmId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BgmId);
      }
      if (ItemId != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ItemId);
      }
      missionIds_.WriteTo(output, _repeated_missionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestGroupId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QuestGroupId);
      }
      if (BannerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BannerId);
      }
      if (U3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U3);
      }
      if (U4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U4);
      }
      if (U5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U5);
      }
      if (BgmId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BgmId);
      }
      if (ItemId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemId);
      }
      size += missionIds_.CalculateSize(_repeated_missionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LegendQuestGroup other) {
      if (other == null) {
        return;
      }
      if (other.QuestGroupId != 0L) {
        QuestGroupId = other.QuestGroupId;
      }
      if (other.BannerId != 0) {
        BannerId = other.BannerId;
      }
      if (other.U3 != 0) {
        U3 = other.U3;
      }
      if (other.U4.Length != 0) {
        U4 = other.U4;
      }
      if (other.U5.Length != 0) {
        U5 = other.U5;
      }
      if (other.BgmId.Length != 0) {
        BgmId = other.BgmId;
      }
      if (other.ItemId != 0L) {
        ItemId = other.ItemId;
      }
      missionIds_.Add(other.missionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestGroupId = input.ReadInt64();
            break;
          }
          case 16: {
            BannerId = input.ReadInt32();
            break;
          }
          case 24: {
            U3 = input.ReadInt32();
            break;
          }
          case 34: {
            U4 = input.ReadString();
            break;
          }
          case 42: {
            U5 = input.ReadString();
            break;
          }
          case 50: {
            BgmId = input.ReadString();
            break;
          }
          case 56: {
            ItemId = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            missionIds_.AddEntriesFrom(input, _repeated_missionIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LegendQuestGroupTable : pb::IMessage<LegendQuestGroupTable> {
    private static readonly pb::MessageParser<LegendQuestGroupTable> _parser = new pb::MessageParser<LegendQuestGroupTable>(() => new LegendQuestGroupTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LegendQuestGroupTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.LegendQuestGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegendQuestGroupTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegendQuestGroupTable(LegendQuestGroupTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegendQuestGroupTable Clone() {
      return new LegendQuestGroupTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.LegendQuestGroup> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.LegendQuestGroup.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.LegendQuestGroup> entries_ = new pbc::RepeatedField<global::ReMastersLib.LegendQuestGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.LegendQuestGroup> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LegendQuestGroupTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LegendQuestGroupTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LegendQuestGroupTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
