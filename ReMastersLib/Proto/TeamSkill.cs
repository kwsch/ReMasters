// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/TeamSkill.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/TeamSkill.proto</summary>
  public static partial class TeamSkillReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/TeamSkill.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TeamSkillReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90by9UZWFtU2tpbGwucHJvdG8SDFJlTWFzdGVyc0xpYiJeCglUZWFt",
            "U2tpbGwSFQoNdGVhbV9za2lsbF9pZBgBIAEoBBIbChN0ZWFtX3NraWxsX3By",
            "b3BfbnVtGAIgASgFEh0KFXRlYW1fc2tpbGxfcHJvcF92YWx1ZRgDIAEoBSI6",
            "Cg5UZWFtU2tpbGxUYWJsZRIoCgdlbnRyaWVzGAEgAygLMhcuUmVNYXN0ZXJz",
            "TGliLlRlYW1Ta2lsbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.TeamSkill), global::ReMastersLib.TeamSkill.Parser, new[]{ "TeamSkillId", "TeamSkillPropNum", "TeamSkillPropValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.TeamSkillTable), global::ReMastersLib.TeamSkillTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TeamSkill : pb::IMessage<TeamSkill> {
    private static readonly pb::MessageParser<TeamSkill> _parser = new pb::MessageParser<TeamSkill>(() => new TeamSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.TeamSkillReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkill(TeamSkill other) : this() {
      teamSkillId_ = other.teamSkillId_;
      teamSkillPropNum_ = other.teamSkillPropNum_;
      teamSkillPropValue_ = other.teamSkillPropValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkill Clone() {
      return new TeamSkill(this);
    }

    /// <summary>Field number for the "team_skill_id" field.</summary>
    public const int TeamSkillIdFieldNumber = 1;
    private ulong teamSkillId_;
    /// <summary>
    /// team_skill_name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TeamSkillId {
      get { return teamSkillId_; }
      set {
        teamSkillId_ = value;
      }
    }

    /// <summary>Field number for the "team_skill_prop_num" field.</summary>
    public const int TeamSkillPropNumFieldNumber = 2;
    private int teamSkillPropNum_;
    /// <summary>
    /// 1 - team_skill_tag, 2 - team_skill_condition, 3 - team_skill_effect
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeamSkillPropNum {
      get { return teamSkillPropNum_; }
      set {
        teamSkillPropNum_ = value;
      }
    }

    /// <summary>Field number for the "team_skill_prop_value" field.</summary>
    public const int TeamSkillPropValueFieldNumber = 3;
    private int teamSkillPropValue_;
    /// <summary>
    /// based on above
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeamSkillPropValue {
      get { return teamSkillPropValue_; }
      set {
        teamSkillPropValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamSkillId != other.TeamSkillId) return false;
      if (TeamSkillPropNum != other.TeamSkillPropNum) return false;
      if (TeamSkillPropValue != other.TeamSkillPropValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamSkillId != 0UL) hash ^= TeamSkillId.GetHashCode();
      if (TeamSkillPropNum != 0) hash ^= TeamSkillPropNum.GetHashCode();
      if (TeamSkillPropValue != 0) hash ^= TeamSkillPropValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamSkillId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(TeamSkillId);
      }
      if (TeamSkillPropNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TeamSkillPropNum);
      }
      if (TeamSkillPropValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TeamSkillPropValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamSkillId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TeamSkillId);
      }
      if (TeamSkillPropNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamSkillPropNum);
      }
      if (TeamSkillPropValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamSkillPropValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamSkill other) {
      if (other == null) {
        return;
      }
      if (other.TeamSkillId != 0UL) {
        TeamSkillId = other.TeamSkillId;
      }
      if (other.TeamSkillPropNum != 0) {
        TeamSkillPropNum = other.TeamSkillPropNum;
      }
      if (other.TeamSkillPropValue != 0) {
        TeamSkillPropValue = other.TeamSkillPropValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamSkillId = input.ReadUInt64();
            break;
          }
          case 16: {
            TeamSkillPropNum = input.ReadInt32();
            break;
          }
          case 24: {
            TeamSkillPropValue = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TeamSkillTable : pb::IMessage<TeamSkillTable> {
    private static readonly pb::MessageParser<TeamSkillTable> _parser = new pb::MessageParser<TeamSkillTable>(() => new TeamSkillTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamSkillTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.TeamSkillReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTable(TeamSkillTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamSkillTable Clone() {
      return new TeamSkillTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.TeamSkill> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.TeamSkill.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.TeamSkill> entries_ = new pbc::RepeatedField<global::ReMastersLib.TeamSkill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.TeamSkill> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamSkillTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamSkillTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamSkillTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
