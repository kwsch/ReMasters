// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/MonsterEvolution.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/MonsterEvolution.proto</summary>
  public static partial class MonsterEvolutionReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/MonsterEvolution.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterEvolutionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90by9Nb25zdGVyRXZvbHV0aW9uLnByb3RvEgxSZU1hc3RlcnNMaWIi",
            "0QIKEE1vbnN0ZXJFdm9sdXRpb24SFAoMZXZvbHV0aW9uX2lkGAEgASgEEhIK",
            "CnRyYWluZXJfaWQYAiABKAQSGgoSbW9uc3Rlcl9pZF9jdXJyZW50GAMgASgE",
            "EhcKD21vbnN0ZXJfaWRfbmV4dBgEIAEoBBIKCgJ1NRgFIAEoBRIKCgJ1NhgG",
            "IAEoBRIKCgJ1NxgHIAEoBRIKCgJ1OBgIIAEoBRIKCgJ1ORgJIAEoBRILCgN1",
            "MTAYCiABKAUSCwoDdTExGAsgASgFEgsKA3UxMhgMIAEoBRILCgN1MTMYDSAB",
            "KAUSCwoDdTE0GA4gASgFEgsKA3UxNRgPIAEoBRILCgN1MTYYECABKAUSCwoD",
            "dTE3GBEgASgFEgsKA3UxOBgSIAEoBRILCgN1MTkYEyABKAUSCwoDdTIwGBQg",
            "ASgFEhMKC3NjaGVkdWxlX2lkGBUgASgJIkgKFU1vbnN0ZXJFdm9sdXRpb25U",
            "YWJsZRIvCgdlbnRyaWVzGAEgAygLMh4uUmVNYXN0ZXJzTGliLk1vbnN0ZXJF",
            "dm9sdXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.MonsterEvolution), global::ReMastersLib.MonsterEvolution.Parser, new[]{ "EvolutionId", "TrainerId", "MonsterIdCurrent", "MonsterIdNext", "U5", "U6", "U7", "U8", "U9", "U10", "U11", "U12", "U13", "U14", "U15", "U16", "U17", "U18", "U19", "U20", "ScheduleId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.MonsterEvolutionTable), global::ReMastersLib.MonsterEvolutionTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MonsterEvolution : pb::IMessage<MonsterEvolution> {
    private static readonly pb::MessageParser<MonsterEvolution> _parser = new pb::MessageParser<MonsterEvolution>(() => new MonsterEvolution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterEvolution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.MonsterEvolutionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterEvolution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterEvolution(MonsterEvolution other) : this() {
      evolutionId_ = other.evolutionId_;
      trainerId_ = other.trainerId_;
      monsterIdCurrent_ = other.monsterIdCurrent_;
      monsterIdNext_ = other.monsterIdNext_;
      u5_ = other.u5_;
      u6_ = other.u6_;
      u7_ = other.u7_;
      u8_ = other.u8_;
      u9_ = other.u9_;
      u10_ = other.u10_;
      u11_ = other.u11_;
      u12_ = other.u12_;
      u13_ = other.u13_;
      u14_ = other.u14_;
      u15_ = other.u15_;
      u16_ = other.u16_;
      u17_ = other.u17_;
      u18_ = other.u18_;
      u19_ = other.u19_;
      u20_ = other.u20_;
      scheduleId_ = other.scheduleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterEvolution Clone() {
      return new MonsterEvolution(this);
    }

    /// <summary>Field number for the "evolution_id" field.</summary>
    public const int EvolutionIdFieldNumber = 1;
    private ulong evolutionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EvolutionId {
      get { return evolutionId_; }
      set {
        evolutionId_ = value;
      }
    }

    /// <summary>Field number for the "trainer_id" field.</summary>
    public const int TrainerIdFieldNumber = 2;
    private ulong trainerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TrainerId {
      get { return trainerId_; }
      set {
        trainerId_ = value;
      }
    }

    /// <summary>Field number for the "monster_id_current" field.</summary>
    public const int MonsterIdCurrentFieldNumber = 3;
    private ulong monsterIdCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MonsterIdCurrent {
      get { return monsterIdCurrent_; }
      set {
        monsterIdCurrent_ = value;
      }
    }

    /// <summary>Field number for the "monster_id_next" field.</summary>
    public const int MonsterIdNextFieldNumber = 4;
    private ulong monsterIdNext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MonsterIdNext {
      get { return monsterIdNext_; }
      set {
        monsterIdNext_ = value;
      }
    }

    /// <summary>Field number for the "u5" field.</summary>
    public const int U5FieldNumber = 5;
    private int u5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U5 {
      get { return u5_; }
      set {
        u5_ = value;
      }
    }

    /// <summary>Field number for the "u6" field.</summary>
    public const int U6FieldNumber = 6;
    private int u6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U6 {
      get { return u6_; }
      set {
        u6_ = value;
      }
    }

    /// <summary>Field number for the "u7" field.</summary>
    public const int U7FieldNumber = 7;
    private int u7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U7 {
      get { return u7_; }
      set {
        u7_ = value;
      }
    }

    /// <summary>Field number for the "u8" field.</summary>
    public const int U8FieldNumber = 8;
    private int u8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U8 {
      get { return u8_; }
      set {
        u8_ = value;
      }
    }

    /// <summary>Field number for the "u9" field.</summary>
    public const int U9FieldNumber = 9;
    private int u9_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U9 {
      get { return u9_; }
      set {
        u9_ = value;
      }
    }

    /// <summary>Field number for the "u10" field.</summary>
    public const int U10FieldNumber = 10;
    private int u10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U10 {
      get { return u10_; }
      set {
        u10_ = value;
      }
    }

    /// <summary>Field number for the "u11" field.</summary>
    public const int U11FieldNumber = 11;
    private int u11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U11 {
      get { return u11_; }
      set {
        u11_ = value;
      }
    }

    /// <summary>Field number for the "u12" field.</summary>
    public const int U12FieldNumber = 12;
    private int u12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U12 {
      get { return u12_; }
      set {
        u12_ = value;
      }
    }

    /// <summary>Field number for the "u13" field.</summary>
    public const int U13FieldNumber = 13;
    private int u13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U13 {
      get { return u13_; }
      set {
        u13_ = value;
      }
    }

    /// <summary>Field number for the "u14" field.</summary>
    public const int U14FieldNumber = 14;
    private int u14_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U14 {
      get { return u14_; }
      set {
        u14_ = value;
      }
    }

    /// <summary>Field number for the "u15" field.</summary>
    public const int U15FieldNumber = 15;
    private int u15_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U15 {
      get { return u15_; }
      set {
        u15_ = value;
      }
    }

    /// <summary>Field number for the "u16" field.</summary>
    public const int U16FieldNumber = 16;
    private int u16_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U16 {
      get { return u16_; }
      set {
        u16_ = value;
      }
    }

    /// <summary>Field number for the "u17" field.</summary>
    public const int U17FieldNumber = 17;
    private int u17_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U17 {
      get { return u17_; }
      set {
        u17_ = value;
      }
    }

    /// <summary>Field number for the "u18" field.</summary>
    public const int U18FieldNumber = 18;
    private int u18_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U18 {
      get { return u18_; }
      set {
        u18_ = value;
      }
    }

    /// <summary>Field number for the "u19" field.</summary>
    public const int U19FieldNumber = 19;
    private int u19_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U19 {
      get { return u19_; }
      set {
        u19_ = value;
      }
    }

    /// <summary>Field number for the "u20" field.</summary>
    public const int U20FieldNumber = 20;
    private int u20_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U20 {
      get { return u20_; }
      set {
        u20_ = value;
      }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 21;
    private string scheduleId_ = "";
    /// <summary>
    /// Schedule.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterEvolution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterEvolution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EvolutionId != other.EvolutionId) return false;
      if (TrainerId != other.TrainerId) return false;
      if (MonsterIdCurrent != other.MonsterIdCurrent) return false;
      if (MonsterIdNext != other.MonsterIdNext) return false;
      if (U5 != other.U5) return false;
      if (U6 != other.U6) return false;
      if (U7 != other.U7) return false;
      if (U8 != other.U8) return false;
      if (U9 != other.U9) return false;
      if (U10 != other.U10) return false;
      if (U11 != other.U11) return false;
      if (U12 != other.U12) return false;
      if (U13 != other.U13) return false;
      if (U14 != other.U14) return false;
      if (U15 != other.U15) return false;
      if (U16 != other.U16) return false;
      if (U17 != other.U17) return false;
      if (U18 != other.U18) return false;
      if (U19 != other.U19) return false;
      if (U20 != other.U20) return false;
      if (ScheduleId != other.ScheduleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EvolutionId != 0UL) hash ^= EvolutionId.GetHashCode();
      if (TrainerId != 0UL) hash ^= TrainerId.GetHashCode();
      if (MonsterIdCurrent != 0UL) hash ^= MonsterIdCurrent.GetHashCode();
      if (MonsterIdNext != 0UL) hash ^= MonsterIdNext.GetHashCode();
      if (U5 != 0) hash ^= U5.GetHashCode();
      if (U6 != 0) hash ^= U6.GetHashCode();
      if (U7 != 0) hash ^= U7.GetHashCode();
      if (U8 != 0) hash ^= U8.GetHashCode();
      if (U9 != 0) hash ^= U9.GetHashCode();
      if (U10 != 0) hash ^= U10.GetHashCode();
      if (U11 != 0) hash ^= U11.GetHashCode();
      if (U12 != 0) hash ^= U12.GetHashCode();
      if (U13 != 0) hash ^= U13.GetHashCode();
      if (U14 != 0) hash ^= U14.GetHashCode();
      if (U15 != 0) hash ^= U15.GetHashCode();
      if (U16 != 0) hash ^= U16.GetHashCode();
      if (U17 != 0) hash ^= U17.GetHashCode();
      if (U18 != 0) hash ^= U18.GetHashCode();
      if (U19 != 0) hash ^= U19.GetHashCode();
      if (U20 != 0) hash ^= U20.GetHashCode();
      if (ScheduleId.Length != 0) hash ^= ScheduleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EvolutionId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(EvolutionId);
      }
      if (TrainerId != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TrainerId);
      }
      if (MonsterIdCurrent != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MonsterIdCurrent);
      }
      if (MonsterIdNext != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MonsterIdNext);
      }
      if (U5 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(U5);
      }
      if (U6 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(U6);
      }
      if (U7 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(U7);
      }
      if (U8 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(U8);
      }
      if (U9 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(U9);
      }
      if (U10 != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(U10);
      }
      if (U11 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(U11);
      }
      if (U12 != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(U12);
      }
      if (U13 != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(U13);
      }
      if (U14 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(U14);
      }
      if (U15 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(U15);
      }
      if (U16 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(U16);
      }
      if (U17 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(U17);
      }
      if (U18 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(U18);
      }
      if (U19 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(U19);
      }
      if (U20 != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(U20);
      }
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ScheduleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EvolutionId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EvolutionId);
      }
      if (TrainerId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TrainerId);
      }
      if (MonsterIdCurrent != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MonsterIdCurrent);
      }
      if (MonsterIdNext != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MonsterIdNext);
      }
      if (U5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U5);
      }
      if (U6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U6);
      }
      if (U7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U7);
      }
      if (U8 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U8);
      }
      if (U9 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U9);
      }
      if (U10 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U10);
      }
      if (U11 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U11);
      }
      if (U12 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U12);
      }
      if (U13 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U13);
      }
      if (U14 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U14);
      }
      if (U15 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U15);
      }
      if (U16 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U16);
      }
      if (U17 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U17);
      }
      if (U18 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U18);
      }
      if (U19 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U19);
      }
      if (U20 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U20);
      }
      if (ScheduleId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ScheduleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterEvolution other) {
      if (other == null) {
        return;
      }
      if (other.EvolutionId != 0UL) {
        EvolutionId = other.EvolutionId;
      }
      if (other.TrainerId != 0UL) {
        TrainerId = other.TrainerId;
      }
      if (other.MonsterIdCurrent != 0UL) {
        MonsterIdCurrent = other.MonsterIdCurrent;
      }
      if (other.MonsterIdNext != 0UL) {
        MonsterIdNext = other.MonsterIdNext;
      }
      if (other.U5 != 0) {
        U5 = other.U5;
      }
      if (other.U6 != 0) {
        U6 = other.U6;
      }
      if (other.U7 != 0) {
        U7 = other.U7;
      }
      if (other.U8 != 0) {
        U8 = other.U8;
      }
      if (other.U9 != 0) {
        U9 = other.U9;
      }
      if (other.U10 != 0) {
        U10 = other.U10;
      }
      if (other.U11 != 0) {
        U11 = other.U11;
      }
      if (other.U12 != 0) {
        U12 = other.U12;
      }
      if (other.U13 != 0) {
        U13 = other.U13;
      }
      if (other.U14 != 0) {
        U14 = other.U14;
      }
      if (other.U15 != 0) {
        U15 = other.U15;
      }
      if (other.U16 != 0) {
        U16 = other.U16;
      }
      if (other.U17 != 0) {
        U17 = other.U17;
      }
      if (other.U18 != 0) {
        U18 = other.U18;
      }
      if (other.U19 != 0) {
        U19 = other.U19;
      }
      if (other.U20 != 0) {
        U20 = other.U20;
      }
      if (other.ScheduleId.Length != 0) {
        ScheduleId = other.ScheduleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EvolutionId = input.ReadUInt64();
            break;
          }
          case 16: {
            TrainerId = input.ReadUInt64();
            break;
          }
          case 24: {
            MonsterIdCurrent = input.ReadUInt64();
            break;
          }
          case 32: {
            MonsterIdNext = input.ReadUInt64();
            break;
          }
          case 40: {
            U5 = input.ReadInt32();
            break;
          }
          case 48: {
            U6 = input.ReadInt32();
            break;
          }
          case 56: {
            U7 = input.ReadInt32();
            break;
          }
          case 64: {
            U8 = input.ReadInt32();
            break;
          }
          case 72: {
            U9 = input.ReadInt32();
            break;
          }
          case 80: {
            U10 = input.ReadInt32();
            break;
          }
          case 88: {
            U11 = input.ReadInt32();
            break;
          }
          case 96: {
            U12 = input.ReadInt32();
            break;
          }
          case 104: {
            U13 = input.ReadInt32();
            break;
          }
          case 112: {
            U14 = input.ReadInt32();
            break;
          }
          case 120: {
            U15 = input.ReadInt32();
            break;
          }
          case 128: {
            U16 = input.ReadInt32();
            break;
          }
          case 136: {
            U17 = input.ReadInt32();
            break;
          }
          case 144: {
            U18 = input.ReadInt32();
            break;
          }
          case 152: {
            U19 = input.ReadInt32();
            break;
          }
          case 160: {
            U20 = input.ReadInt32();
            break;
          }
          case 170: {
            ScheduleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MonsterEvolutionTable : pb::IMessage<MonsterEvolutionTable> {
    private static readonly pb::MessageParser<MonsterEvolutionTable> _parser = new pb::MessageParser<MonsterEvolutionTable>(() => new MonsterEvolutionTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterEvolutionTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.MonsterEvolutionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterEvolutionTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterEvolutionTable(MonsterEvolutionTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterEvolutionTable Clone() {
      return new MonsterEvolutionTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.MonsterEvolution> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.MonsterEvolution.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.MonsterEvolution> entries_ = new pbc::RepeatedField<global::ReMastersLib.MonsterEvolution>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.MonsterEvolution> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterEvolutionTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterEvolutionTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterEvolutionTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
