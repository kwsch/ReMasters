// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/DeckPreset.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/DeckPreset.proto</summary>
  public static partial class DeckPresetReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/DeckPreset.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeckPresetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90by9EZWNrUHJlc2V0LnByb3RvEgxSZU1hc3RlcnNMaWIimQQKCkRl",
            "Y2tQcmVzZXQSFgoOZGVja19wcmVzZXRfaWQYASABKAUSFgoOY2hhcmFjdGVy",
            "XzFfaWQYAiABKAMSFAoMdHJhaW5lcl8xX2lkGAMgASgDEgoKAnU0GAQgASgF",
            "EgoKAnU1GAUgASgFEgoKAnU2GAYgASgFEgoKAnU3GAcgASgFEgoKAnU4GAgg",
            "ASgFEgoKAnU5GAkgASgFEhYKDmNoYXJhY3Rlcl8yX2lkGAwgASgDEhQKDHRy",
            "YWluZXJfMl9pZBgNIAEoAxILCgN1MTQYDiABKAUSCwoDdTE1GA8gASgFEgsK",
            "A3UxNhgQIAEoBRILCgN1MTcYESABKAUSCwoDdTE4GBIgASgFEgsKA3UxORgT",
            "IAEoBRIWCg5jaGFyYWN0ZXJfM19pZBgWIAEoAxIUCgx0cmFpbmVyXzNfaWQY",
            "FyABKAMSCwoDdTI0GBggASgFEgsKA3UyNRgZIAEoBRILCgN1MjYYGiABKAUS",
            "CwoDdTI3GBsgASgFEgsKA3UyOBgcIAEoBRILCgN1MjkYHSABKAUSEQoJaXRl",
            "bV8xX2lkGCAgASgDEgsKA3UzMxghIAEoBRILCgN1MzQYIiABKAUSEQoJaXRl",
            "bV8yX2lkGCMgASgDEgsKA3UzNhgkIAEoBRILCgN1MzcYJSABKAUSEQoJaXRl",
            "bV8zX2lkGCYgASgDEgsKA3UzORgnIAEoBRILCgN1NDAYKCABKAUiPAoPRGVj",
            "a1ByZXNldFRhYmxlEikKB2VudHJpZXMYASADKAsyGC5SZU1hc3RlcnNMaWIu",
            "RGVja1ByZXNldGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.DeckPreset), global::ReMastersLib.DeckPreset.Parser, new[]{ "DeckPresetId", "Character1Id", "Trainer1Id", "U4", "U5", "U6", "U7", "U8", "U9", "Character2Id", "Trainer2Id", "U14", "U15", "U16", "U17", "U18", "U19", "Character3Id", "Trainer3Id", "U24", "U25", "U26", "U27", "U28", "U29", "Item1Id", "U33", "U34", "Item2Id", "U36", "U37", "Item3Id", "U39", "U40" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.DeckPresetTable), global::ReMastersLib.DeckPresetTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeckPreset : pb::IMessage<DeckPreset> {
    private static readonly pb::MessageParser<DeckPreset> _parser = new pb::MessageParser<DeckPreset>(() => new DeckPreset());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckPreset> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.DeckPresetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPreset() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPreset(DeckPreset other) : this() {
      deckPresetId_ = other.deckPresetId_;
      character1Id_ = other.character1Id_;
      trainer1Id_ = other.trainer1Id_;
      u4_ = other.u4_;
      u5_ = other.u5_;
      u6_ = other.u6_;
      u7_ = other.u7_;
      u8_ = other.u8_;
      u9_ = other.u9_;
      character2Id_ = other.character2Id_;
      trainer2Id_ = other.trainer2Id_;
      u14_ = other.u14_;
      u15_ = other.u15_;
      u16_ = other.u16_;
      u17_ = other.u17_;
      u18_ = other.u18_;
      u19_ = other.u19_;
      character3Id_ = other.character3Id_;
      trainer3Id_ = other.trainer3Id_;
      u24_ = other.u24_;
      u25_ = other.u25_;
      u26_ = other.u26_;
      u27_ = other.u27_;
      u28_ = other.u28_;
      u29_ = other.u29_;
      item1Id_ = other.item1Id_;
      u33_ = other.u33_;
      u34_ = other.u34_;
      item2Id_ = other.item2Id_;
      u36_ = other.u36_;
      u37_ = other.u37_;
      item3Id_ = other.item3Id_;
      u39_ = other.u39_;
      u40_ = other.u40_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPreset Clone() {
      return new DeckPreset(this);
    }

    /// <summary>Field number for the "deck_preset_id" field.</summary>
    public const int DeckPresetIdFieldNumber = 1;
    private int deckPresetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckPresetId {
      get { return deckPresetId_; }
      set {
        deckPresetId_ = value;
      }
    }

    /// <summary>Field number for the "character_1_id" field.</summary>
    public const int Character1IdFieldNumber = 2;
    private long character1Id_;
    /// <summary>
    /// Trainer.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Character1Id {
      get { return character1Id_; }
      set {
        character1Id_ = value;
      }
    }

    /// <summary>Field number for the "trainer_1_id" field.</summary>
    public const int Trainer1IdFieldNumber = 3;
    private long trainer1Id_;
    /// <summary>
    /// Monster.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Trainer1Id {
      get { return trainer1Id_; }
      set {
        trainer1Id_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private int u4_;
    /// <summary>
    /// Stats?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    /// <summary>Field number for the "u5" field.</summary>
    public const int U5FieldNumber = 5;
    private int u5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U5 {
      get { return u5_; }
      set {
        u5_ = value;
      }
    }

    /// <summary>Field number for the "u6" field.</summary>
    public const int U6FieldNumber = 6;
    private int u6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U6 {
      get { return u6_; }
      set {
        u6_ = value;
      }
    }

    /// <summary>Field number for the "u7" field.</summary>
    public const int U7FieldNumber = 7;
    private int u7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U7 {
      get { return u7_; }
      set {
        u7_ = value;
      }
    }

    /// <summary>Field number for the "u8" field.</summary>
    public const int U8FieldNumber = 8;
    private int u8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U8 {
      get { return u8_; }
      set {
        u8_ = value;
      }
    }

    /// <summary>Field number for the "u9" field.</summary>
    public const int U9FieldNumber = 9;
    private int u9_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U9 {
      get { return u9_; }
      set {
        u9_ = value;
      }
    }

    /// <summary>Field number for the "character_2_id" field.</summary>
    public const int Character2IdFieldNumber = 12;
    private long character2Id_;
    /// <summary>
    /// Trainer.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Character2Id {
      get { return character2Id_; }
      set {
        character2Id_ = value;
      }
    }

    /// <summary>Field number for the "trainer_2_id" field.</summary>
    public const int Trainer2IdFieldNumber = 13;
    private long trainer2Id_;
    /// <summary>
    /// Monster.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Trainer2Id {
      get { return trainer2Id_; }
      set {
        trainer2Id_ = value;
      }
    }

    /// <summary>Field number for the "u14" field.</summary>
    public const int U14FieldNumber = 14;
    private int u14_;
    /// <summary>
    /// Stats?        
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U14 {
      get { return u14_; }
      set {
        u14_ = value;
      }
    }

    /// <summary>Field number for the "u15" field.</summary>
    public const int U15FieldNumber = 15;
    private int u15_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U15 {
      get { return u15_; }
      set {
        u15_ = value;
      }
    }

    /// <summary>Field number for the "u16" field.</summary>
    public const int U16FieldNumber = 16;
    private int u16_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U16 {
      get { return u16_; }
      set {
        u16_ = value;
      }
    }

    /// <summary>Field number for the "u17" field.</summary>
    public const int U17FieldNumber = 17;
    private int u17_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U17 {
      get { return u17_; }
      set {
        u17_ = value;
      }
    }

    /// <summary>Field number for the "u18" field.</summary>
    public const int U18FieldNumber = 18;
    private int u18_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U18 {
      get { return u18_; }
      set {
        u18_ = value;
      }
    }

    /// <summary>Field number for the "u19" field.</summary>
    public const int U19FieldNumber = 19;
    private int u19_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U19 {
      get { return u19_; }
      set {
        u19_ = value;
      }
    }

    /// <summary>Field number for the "character_3_id" field.</summary>
    public const int Character3IdFieldNumber = 22;
    private long character3Id_;
    /// <summary>
    /// Trainer.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Character3Id {
      get { return character3Id_; }
      set {
        character3Id_ = value;
      }
    }

    /// <summary>Field number for the "trainer_3_id" field.</summary>
    public const int Trainer3IdFieldNumber = 23;
    private long trainer3Id_;
    /// <summary>
    /// Monster.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Trainer3Id {
      get { return trainer3Id_; }
      set {
        trainer3Id_ = value;
      }
    }

    /// <summary>Field number for the "u24" field.</summary>
    public const int U24FieldNumber = 24;
    private int u24_;
    /// <summary>
    /// Stats? 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U24 {
      get { return u24_; }
      set {
        u24_ = value;
      }
    }

    /// <summary>Field number for the "u25" field.</summary>
    public const int U25FieldNumber = 25;
    private int u25_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U25 {
      get { return u25_; }
      set {
        u25_ = value;
      }
    }

    /// <summary>Field number for the "u26" field.</summary>
    public const int U26FieldNumber = 26;
    private int u26_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U26 {
      get { return u26_; }
      set {
        u26_ = value;
      }
    }

    /// <summary>Field number for the "u27" field.</summary>
    public const int U27FieldNumber = 27;
    private int u27_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U27 {
      get { return u27_; }
      set {
        u27_ = value;
      }
    }

    /// <summary>Field number for the "u28" field.</summary>
    public const int U28FieldNumber = 28;
    private int u28_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U28 {
      get { return u28_; }
      set {
        u28_ = value;
      }
    }

    /// <summary>Field number for the "u29" field.</summary>
    public const int U29FieldNumber = 29;
    private int u29_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U29 {
      get { return u29_; }
      set {
        u29_ = value;
      }
    }

    /// <summary>Field number for the "item_1_id" field.</summary>
    public const int Item1IdFieldNumber = 32;
    private long item1Id_;
    /// <summary>
    /// DeckItem.pb / deck_item_name_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item1Id {
      get { return item1Id_; }
      set {
        item1Id_ = value;
      }
    }

    /// <summary>Field number for the "u33" field.</summary>
    public const int U33FieldNumber = 33;
    private int u33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U33 {
      get { return u33_; }
      set {
        u33_ = value;
      }
    }

    /// <summary>Field number for the "u34" field.</summary>
    public const int U34FieldNumber = 34;
    private int u34_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U34 {
      get { return u34_; }
      set {
        u34_ = value;
      }
    }

    /// <summary>Field number for the "item_2_id" field.</summary>
    public const int Item2IdFieldNumber = 35;
    private long item2Id_;
    /// <summary>
    /// DeckItem.pb / deck_item_name_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item2Id {
      get { return item2Id_; }
      set {
        item2Id_ = value;
      }
    }

    /// <summary>Field number for the "u36" field.</summary>
    public const int U36FieldNumber = 36;
    private int u36_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U36 {
      get { return u36_; }
      set {
        u36_ = value;
      }
    }

    /// <summary>Field number for the "u37" field.</summary>
    public const int U37FieldNumber = 37;
    private int u37_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U37 {
      get { return u37_; }
      set {
        u37_ = value;
      }
    }

    /// <summary>Field number for the "item_3_id" field.</summary>
    public const int Item3IdFieldNumber = 38;
    private long item3Id_;
    /// <summary>
    /// DeckItem.pb / deck_item_name_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Item3Id {
      get { return item3Id_; }
      set {
        item3Id_ = value;
      }
    }

    /// <summary>Field number for the "u39" field.</summary>
    public const int U39FieldNumber = 39;
    private int u39_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U39 {
      get { return u39_; }
      set {
        u39_ = value;
      }
    }

    /// <summary>Field number for the "u40" field.</summary>
    public const int U40FieldNumber = 40;
    private int u40_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U40 {
      get { return u40_; }
      set {
        u40_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckPreset);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckPreset other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeckPresetId != other.DeckPresetId) return false;
      if (Character1Id != other.Character1Id) return false;
      if (Trainer1Id != other.Trainer1Id) return false;
      if (U4 != other.U4) return false;
      if (U5 != other.U5) return false;
      if (U6 != other.U6) return false;
      if (U7 != other.U7) return false;
      if (U8 != other.U8) return false;
      if (U9 != other.U9) return false;
      if (Character2Id != other.Character2Id) return false;
      if (Trainer2Id != other.Trainer2Id) return false;
      if (U14 != other.U14) return false;
      if (U15 != other.U15) return false;
      if (U16 != other.U16) return false;
      if (U17 != other.U17) return false;
      if (U18 != other.U18) return false;
      if (U19 != other.U19) return false;
      if (Character3Id != other.Character3Id) return false;
      if (Trainer3Id != other.Trainer3Id) return false;
      if (U24 != other.U24) return false;
      if (U25 != other.U25) return false;
      if (U26 != other.U26) return false;
      if (U27 != other.U27) return false;
      if (U28 != other.U28) return false;
      if (U29 != other.U29) return false;
      if (Item1Id != other.Item1Id) return false;
      if (U33 != other.U33) return false;
      if (U34 != other.U34) return false;
      if (Item2Id != other.Item2Id) return false;
      if (U36 != other.U36) return false;
      if (U37 != other.U37) return false;
      if (Item3Id != other.Item3Id) return false;
      if (U39 != other.U39) return false;
      if (U40 != other.U40) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeckPresetId != 0) hash ^= DeckPresetId.GetHashCode();
      if (Character1Id != 0L) hash ^= Character1Id.GetHashCode();
      if (Trainer1Id != 0L) hash ^= Trainer1Id.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (U5 != 0) hash ^= U5.GetHashCode();
      if (U6 != 0) hash ^= U6.GetHashCode();
      if (U7 != 0) hash ^= U7.GetHashCode();
      if (U8 != 0) hash ^= U8.GetHashCode();
      if (U9 != 0) hash ^= U9.GetHashCode();
      if (Character2Id != 0L) hash ^= Character2Id.GetHashCode();
      if (Trainer2Id != 0L) hash ^= Trainer2Id.GetHashCode();
      if (U14 != 0) hash ^= U14.GetHashCode();
      if (U15 != 0) hash ^= U15.GetHashCode();
      if (U16 != 0) hash ^= U16.GetHashCode();
      if (U17 != 0) hash ^= U17.GetHashCode();
      if (U18 != 0) hash ^= U18.GetHashCode();
      if (U19 != 0) hash ^= U19.GetHashCode();
      if (Character3Id != 0L) hash ^= Character3Id.GetHashCode();
      if (Trainer3Id != 0L) hash ^= Trainer3Id.GetHashCode();
      if (U24 != 0) hash ^= U24.GetHashCode();
      if (U25 != 0) hash ^= U25.GetHashCode();
      if (U26 != 0) hash ^= U26.GetHashCode();
      if (U27 != 0) hash ^= U27.GetHashCode();
      if (U28 != 0) hash ^= U28.GetHashCode();
      if (U29 != 0) hash ^= U29.GetHashCode();
      if (Item1Id != 0L) hash ^= Item1Id.GetHashCode();
      if (U33 != 0) hash ^= U33.GetHashCode();
      if (U34 != 0) hash ^= U34.GetHashCode();
      if (Item2Id != 0L) hash ^= Item2Id.GetHashCode();
      if (U36 != 0) hash ^= U36.GetHashCode();
      if (U37 != 0) hash ^= U37.GetHashCode();
      if (Item3Id != 0L) hash ^= Item3Id.GetHashCode();
      if (U39 != 0) hash ^= U39.GetHashCode();
      if (U40 != 0) hash ^= U40.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeckPresetId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DeckPresetId);
      }
      if (Character1Id != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Character1Id);
      }
      if (Trainer1Id != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Trainer1Id);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(U4);
      }
      if (U5 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(U5);
      }
      if (U6 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(U6);
      }
      if (U7 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(U7);
      }
      if (U8 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(U8);
      }
      if (U9 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(U9);
      }
      if (Character2Id != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Character2Id);
      }
      if (Trainer2Id != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Trainer2Id);
      }
      if (U14 != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(U14);
      }
      if (U15 != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(U15);
      }
      if (U16 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(U16);
      }
      if (U17 != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(U17);
      }
      if (U18 != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(U18);
      }
      if (U19 != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(U19);
      }
      if (Character3Id != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(Character3Id);
      }
      if (Trainer3Id != 0L) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(Trainer3Id);
      }
      if (U24 != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(U24);
      }
      if (U25 != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(U25);
      }
      if (U26 != 0) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(U26);
      }
      if (U27 != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(U27);
      }
      if (U28 != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(U28);
      }
      if (U29 != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(U29);
      }
      if (Item1Id != 0L) {
        output.WriteRawTag(128, 2);
        output.WriteInt64(Item1Id);
      }
      if (U33 != 0) {
        output.WriteRawTag(136, 2);
        output.WriteInt32(U33);
      }
      if (U34 != 0) {
        output.WriteRawTag(144, 2);
        output.WriteInt32(U34);
      }
      if (Item2Id != 0L) {
        output.WriteRawTag(152, 2);
        output.WriteInt64(Item2Id);
      }
      if (U36 != 0) {
        output.WriteRawTag(160, 2);
        output.WriteInt32(U36);
      }
      if (U37 != 0) {
        output.WriteRawTag(168, 2);
        output.WriteInt32(U37);
      }
      if (Item3Id != 0L) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(Item3Id);
      }
      if (U39 != 0) {
        output.WriteRawTag(184, 2);
        output.WriteInt32(U39);
      }
      if (U40 != 0) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(U40);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeckPresetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckPresetId);
      }
      if (Character1Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Character1Id);
      }
      if (Trainer1Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Trainer1Id);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U4);
      }
      if (U5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U5);
      }
      if (U6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U6);
      }
      if (U7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U7);
      }
      if (U8 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U8);
      }
      if (U9 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U9);
      }
      if (Character2Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Character2Id);
      }
      if (Trainer2Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Trainer2Id);
      }
      if (U14 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U14);
      }
      if (U15 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U15);
      }
      if (U16 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U16);
      }
      if (U17 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U17);
      }
      if (U18 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U18);
      }
      if (U19 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U19);
      }
      if (Character3Id != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Character3Id);
      }
      if (Trainer3Id != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Trainer3Id);
      }
      if (U24 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U24);
      }
      if (U25 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U25);
      }
      if (U26 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U26);
      }
      if (U27 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U27);
      }
      if (U28 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U28);
      }
      if (U29 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U29);
      }
      if (Item1Id != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Item1Id);
      }
      if (U33 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U33);
      }
      if (U34 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U34);
      }
      if (Item2Id != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Item2Id);
      }
      if (U36 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U36);
      }
      if (U37 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U37);
      }
      if (Item3Id != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Item3Id);
      }
      if (U39 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U39);
      }
      if (U40 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(U40);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckPreset other) {
      if (other == null) {
        return;
      }
      if (other.DeckPresetId != 0) {
        DeckPresetId = other.DeckPresetId;
      }
      if (other.Character1Id != 0L) {
        Character1Id = other.Character1Id;
      }
      if (other.Trainer1Id != 0L) {
        Trainer1Id = other.Trainer1Id;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      if (other.U5 != 0) {
        U5 = other.U5;
      }
      if (other.U6 != 0) {
        U6 = other.U6;
      }
      if (other.U7 != 0) {
        U7 = other.U7;
      }
      if (other.U8 != 0) {
        U8 = other.U8;
      }
      if (other.U9 != 0) {
        U9 = other.U9;
      }
      if (other.Character2Id != 0L) {
        Character2Id = other.Character2Id;
      }
      if (other.Trainer2Id != 0L) {
        Trainer2Id = other.Trainer2Id;
      }
      if (other.U14 != 0) {
        U14 = other.U14;
      }
      if (other.U15 != 0) {
        U15 = other.U15;
      }
      if (other.U16 != 0) {
        U16 = other.U16;
      }
      if (other.U17 != 0) {
        U17 = other.U17;
      }
      if (other.U18 != 0) {
        U18 = other.U18;
      }
      if (other.U19 != 0) {
        U19 = other.U19;
      }
      if (other.Character3Id != 0L) {
        Character3Id = other.Character3Id;
      }
      if (other.Trainer3Id != 0L) {
        Trainer3Id = other.Trainer3Id;
      }
      if (other.U24 != 0) {
        U24 = other.U24;
      }
      if (other.U25 != 0) {
        U25 = other.U25;
      }
      if (other.U26 != 0) {
        U26 = other.U26;
      }
      if (other.U27 != 0) {
        U27 = other.U27;
      }
      if (other.U28 != 0) {
        U28 = other.U28;
      }
      if (other.U29 != 0) {
        U29 = other.U29;
      }
      if (other.Item1Id != 0L) {
        Item1Id = other.Item1Id;
      }
      if (other.U33 != 0) {
        U33 = other.U33;
      }
      if (other.U34 != 0) {
        U34 = other.U34;
      }
      if (other.Item2Id != 0L) {
        Item2Id = other.Item2Id;
      }
      if (other.U36 != 0) {
        U36 = other.U36;
      }
      if (other.U37 != 0) {
        U37 = other.U37;
      }
      if (other.Item3Id != 0L) {
        Item3Id = other.Item3Id;
      }
      if (other.U39 != 0) {
        U39 = other.U39;
      }
      if (other.U40 != 0) {
        U40 = other.U40;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeckPresetId = input.ReadInt32();
            break;
          }
          case 16: {
            Character1Id = input.ReadInt64();
            break;
          }
          case 24: {
            Trainer1Id = input.ReadInt64();
            break;
          }
          case 32: {
            U4 = input.ReadInt32();
            break;
          }
          case 40: {
            U5 = input.ReadInt32();
            break;
          }
          case 48: {
            U6 = input.ReadInt32();
            break;
          }
          case 56: {
            U7 = input.ReadInt32();
            break;
          }
          case 64: {
            U8 = input.ReadInt32();
            break;
          }
          case 72: {
            U9 = input.ReadInt32();
            break;
          }
          case 96: {
            Character2Id = input.ReadInt64();
            break;
          }
          case 104: {
            Trainer2Id = input.ReadInt64();
            break;
          }
          case 112: {
            U14 = input.ReadInt32();
            break;
          }
          case 120: {
            U15 = input.ReadInt32();
            break;
          }
          case 128: {
            U16 = input.ReadInt32();
            break;
          }
          case 136: {
            U17 = input.ReadInt32();
            break;
          }
          case 144: {
            U18 = input.ReadInt32();
            break;
          }
          case 152: {
            U19 = input.ReadInt32();
            break;
          }
          case 176: {
            Character3Id = input.ReadInt64();
            break;
          }
          case 184: {
            Trainer3Id = input.ReadInt64();
            break;
          }
          case 192: {
            U24 = input.ReadInt32();
            break;
          }
          case 200: {
            U25 = input.ReadInt32();
            break;
          }
          case 208: {
            U26 = input.ReadInt32();
            break;
          }
          case 216: {
            U27 = input.ReadInt32();
            break;
          }
          case 224: {
            U28 = input.ReadInt32();
            break;
          }
          case 232: {
            U29 = input.ReadInt32();
            break;
          }
          case 256: {
            Item1Id = input.ReadInt64();
            break;
          }
          case 264: {
            U33 = input.ReadInt32();
            break;
          }
          case 272: {
            U34 = input.ReadInt32();
            break;
          }
          case 280: {
            Item2Id = input.ReadInt64();
            break;
          }
          case 288: {
            U36 = input.ReadInt32();
            break;
          }
          case 296: {
            U37 = input.ReadInt32();
            break;
          }
          case 304: {
            Item3Id = input.ReadInt64();
            break;
          }
          case 312: {
            U39 = input.ReadInt32();
            break;
          }
          case 320: {
            U40 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeckPresetTable : pb::IMessage<DeckPresetTable> {
    private static readonly pb::MessageParser<DeckPresetTable> _parser = new pb::MessageParser<DeckPresetTable>(() => new DeckPresetTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeckPresetTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.DeckPresetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetTable(DeckPresetTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeckPresetTable Clone() {
      return new DeckPresetTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.DeckPreset> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.DeckPreset.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.DeckPreset> entries_ = new pbc::RepeatedField<global::ReMastersLib.DeckPreset>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.DeckPreset> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeckPresetTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeckPresetTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeckPresetTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
