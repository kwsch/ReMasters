// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/EggDrop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/EggDrop.proto</summary>
  public static partial class EggDropReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/EggDrop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EggDropReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90by9FZ2dEcm9wLnByb3RvEgxSZU1hc3RlcnNMaWIiWAoHRWdnRHJv",
            "cBITCgtlZ2dfZHJvcF9pZBgBIAEoBRIMCgRyYXRlGAIgASgFEgoKAnUzGAMg",
            "ASgDEgoKAnU0GAQgASgFEhIKCmlzX3JlZ3VsYXIYBSABKAgiNgoMRWdnRHJv",
            "cFRhYmxlEiYKB2VudHJpZXMYASADKAsyFS5SZU1hc3RlcnNMaWIuRWdnRHJv",
            "cGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.EggDrop), global::ReMastersLib.EggDrop.Parser, new[]{ "EggDropId", "Rate", "U3", "U4", "IsRegular" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.EggDropTable), global::ReMastersLib.EggDropTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EggDrop : pb::IMessage<EggDrop> {
    private static readonly pb::MessageParser<EggDrop> _parser = new pb::MessageParser<EggDrop>(() => new EggDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EggDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.EggDropReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggDrop(EggDrop other) : this() {
      eggDropId_ = other.eggDropId_;
      rate_ = other.rate_;
      u3_ = other.u3_;
      u4_ = other.u4_;
      isRegular_ = other.isRegular_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggDrop Clone() {
      return new EggDrop(this);
    }

    /// <summary>Field number for the "egg_drop_id" field.</summary>
    public const int EggDropIdFieldNumber = 1;
    private int eggDropId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EggDropId {
      get { return eggDropId_; }
      set {
        eggDropId_ = value;
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 2;
    private int rate_;
    /// <summary>
    /// per 1000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private long u3_;
    /// <summary>
    /// same as egg_drop_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private int u4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    /// <summary>Field number for the "is_regular" field.</summary>
    public const int IsRegularFieldNumber = 5;
    private bool isRegular_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRegular {
      get { return isRegular_; }
      set {
        isRegular_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EggDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EggDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EggDropId != other.EggDropId) return false;
      if (Rate != other.Rate) return false;
      if (U3 != other.U3) return false;
      if (U4 != other.U4) return false;
      if (IsRegular != other.IsRegular) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EggDropId != 0) hash ^= EggDropId.GetHashCode();
      if (Rate != 0) hash ^= Rate.GetHashCode();
      if (U3 != 0L) hash ^= U3.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (IsRegular != false) hash ^= IsRegular.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EggDropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EggDropId);
      }
      if (Rate != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Rate);
      }
      if (U3 != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(U3);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(U4);
      }
      if (IsRegular != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsRegular);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EggDropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EggDropId);
      }
      if (Rate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rate);
      }
      if (U3 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(U3);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U4);
      }
      if (IsRegular != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EggDrop other) {
      if (other == null) {
        return;
      }
      if (other.EggDropId != 0) {
        EggDropId = other.EggDropId;
      }
      if (other.Rate != 0) {
        Rate = other.Rate;
      }
      if (other.U3 != 0L) {
        U3 = other.U3;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      if (other.IsRegular != false) {
        IsRegular = other.IsRegular;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EggDropId = input.ReadInt32();
            break;
          }
          case 16: {
            Rate = input.ReadInt32();
            break;
          }
          case 24: {
            U3 = input.ReadInt64();
            break;
          }
          case 32: {
            U4 = input.ReadInt32();
            break;
          }
          case 40: {
            IsRegular = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EggDropTable : pb::IMessage<EggDropTable> {
    private static readonly pb::MessageParser<EggDropTable> _parser = new pb::MessageParser<EggDropTable>(() => new EggDropTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EggDropTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.EggDropReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggDropTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggDropTable(EggDropTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggDropTable Clone() {
      return new EggDropTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.EggDrop> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.EggDrop.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.EggDrop> entries_ = new pbc::RepeatedField<global::ReMastersLib.EggDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.EggDrop> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EggDropTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EggDropTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EggDropTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
