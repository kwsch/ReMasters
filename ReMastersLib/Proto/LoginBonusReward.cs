// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/LoginBonusReward.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/LoginBonusReward.proto</summary>
  public static partial class LoginBonusRewardReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/LoginBonusReward.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginBonusRewardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90by9Mb2dpbkJvbnVzUmV3YXJkLnByb3RvEgxSZU1hc3RlcnNMaWIi",
            "UwoQTG9naW5Cb251c1Jld2FyZBIRCglyZXdhcmRfaWQYASABKAkSCwoDZGF5",
            "GAIgASgFEhMKC2l0ZW1fc2V0X2lkGAMgASgEEgoKAnU0GAQgASgNIkgKFUxv",
            "Z2luQm9udXNSZXdhcmRUYWJsZRIvCgdlbnRyaWVzGAEgAygLMh4uUmVNYXN0",
            "ZXJzTGliLkxvZ2luQm9udXNSZXdhcmRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.LoginBonusReward), global::ReMastersLib.LoginBonusReward.Parser, new[]{ "RewardId", "Day", "ItemSetId", "U4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.LoginBonusRewardTable), global::ReMastersLib.LoginBonusRewardTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoginBonusReward : pb::IMessage<LoginBonusReward> {
    private static readonly pb::MessageParser<LoginBonusReward> _parser = new pb::MessageParser<LoginBonusReward>(() => new LoginBonusReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginBonusReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.LoginBonusRewardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusReward(LoginBonusReward other) : this() {
      rewardId_ = other.rewardId_;
      day_ = other.day_;
      itemSetId_ = other.itemSetId_;
      u4_ = other.u4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusReward Clone() {
      return new LoginBonusReward(this);
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 1;
    private string rewardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "day" field.</summary>
    public const int DayFieldNumber = 2;
    private int day_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Day {
      get { return day_; }
      set {
        day_ = value;
      }
    }

    /// <summary>Field number for the "item_set_id" field.</summary>
    public const int ItemSetIdFieldNumber = 3;
    private ulong itemSetId_;
    /// <summary>
    /// ItemSet.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemSetId {
      get { return itemSetId_; }
      set {
        itemSetId_ = value;
      }
    }

    /// <summary>Field number for the "u4" field.</summary>
    public const int U4FieldNumber = 4;
    private uint u4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint U4 {
      get { return u4_; }
      set {
        u4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginBonusReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginBonusReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RewardId != other.RewardId) return false;
      if (Day != other.Day) return false;
      if (ItemSetId != other.ItemSetId) return false;
      if (U4 != other.U4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RewardId.Length != 0) hash ^= RewardId.GetHashCode();
      if (Day != 0) hash ^= Day.GetHashCode();
      if (ItemSetId != 0UL) hash ^= ItemSetId.GetHashCode();
      if (U4 != 0) hash ^= U4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RewardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RewardId);
      }
      if (Day != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Day);
      }
      if (ItemSetId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ItemSetId);
      }
      if (U4 != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(U4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RewardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardId);
      }
      if (Day != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
      }
      if (ItemSetId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemSetId);
      }
      if (U4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(U4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginBonusReward other) {
      if (other == null) {
        return;
      }
      if (other.RewardId.Length != 0) {
        RewardId = other.RewardId;
      }
      if (other.Day != 0) {
        Day = other.Day;
      }
      if (other.ItemSetId != 0UL) {
        ItemSetId = other.ItemSetId;
      }
      if (other.U4 != 0) {
        U4 = other.U4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RewardId = input.ReadString();
            break;
          }
          case 16: {
            Day = input.ReadInt32();
            break;
          }
          case 24: {
            ItemSetId = input.ReadUInt64();
            break;
          }
          case 32: {
            U4 = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginBonusRewardTable : pb::IMessage<LoginBonusRewardTable> {
    private static readonly pb::MessageParser<LoginBonusRewardTable> _parser = new pb::MessageParser<LoginBonusRewardTable>(() => new LoginBonusRewardTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginBonusRewardTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.LoginBonusRewardReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusRewardTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusRewardTable(LoginBonusRewardTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusRewardTable Clone() {
      return new LoginBonusRewardTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.LoginBonusReward> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.LoginBonusReward.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.LoginBonusReward> entries_ = new pbc::RepeatedField<global::ReMastersLib.LoginBonusReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.LoginBonusReward> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginBonusRewardTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginBonusRewardTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginBonusRewardTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
