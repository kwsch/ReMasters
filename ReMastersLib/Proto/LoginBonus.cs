// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/LoginBonus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/LoginBonus.proto</summary>
  public static partial class LoginBonusReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/LoginBonus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginBonusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90by9Mb2dpbkJvbnVzLnByb3RvEgxSZU1hc3RlcnNMaWIimwEKCkxv",
            "Z2luQm9udXMSFgoObG9naW5fYm9udXNfaWQYASABKAkSEQoJcmV3YXJkX2lk",
            "GAIgASgJEgwKBHR5cGUYAyABKA0SGwoTbG9naW5fYm9udXNfbmFtZV9pZBgE",
            "IAEoCRIRCgliYW5uZXJfaWQYBSABKAUSEgoKc3RhcnRfZGF0ZRgGIAEoDRIQ",
            "CghlbmRfZGF0ZRgHIAEoDSI8Cg9Mb2dpbkJvbnVzVGFibGUSKQoHZW50cmll",
            "cxgBIAMoCzIYLlJlTWFzdGVyc0xpYi5Mb2dpbkJvbnVzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.LoginBonus), global::ReMastersLib.LoginBonus.Parser, new[]{ "LoginBonusId", "RewardId", "Type", "LoginBonusNameId", "BannerId", "StartDate", "EndDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.LoginBonusTable), global::ReMastersLib.LoginBonusTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoginBonus : pb::IMessage<LoginBonus> {
    private static readonly pb::MessageParser<LoginBonus> _parser = new pb::MessageParser<LoginBonus>(() => new LoginBonus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.LoginBonusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonus(LoginBonus other) : this() {
      loginBonusId_ = other.loginBonusId_;
      rewardId_ = other.rewardId_;
      type_ = other.type_;
      loginBonusNameId_ = other.loginBonusNameId_;
      bannerId_ = other.bannerId_;
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonus Clone() {
      return new LoginBonus(this);
    }

    /// <summary>Field number for the "login_bonus_id" field.</summary>
    public const int LoginBonusIdFieldNumber = 1;
    private string loginBonusId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginBonusId {
      get { return loginBonusId_; }
      set {
        loginBonusId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward_id" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private string rewardId_ = "";
    /// <summary>
    /// LoginBonusReward.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "login_bonus_name_id" field.</summary>
    public const int LoginBonusNameIdFieldNumber = 4;
    private string loginBonusNameId_ = "";
    /// <summary>
    ///
    ///0 = General Log-In Bonus
    ///1 = Other Login Bonuses
    ///2 = Compensation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoginBonusNameId {
      get { return loginBonusNameId_; }
      set {
        loginBonusNameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "banner_id" field.</summary>
    public const int BannerIdFieldNumber = 5;
    private int bannerId_;
    /// <summary>
    /// Banner.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BannerId {
      get { return bannerId_; }
      set {
        bannerId_ = value;
      }
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 6;
    private uint startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 7;
    private uint endDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginBonusId != other.LoginBonusId) return false;
      if (RewardId != other.RewardId) return false;
      if (Type != other.Type) return false;
      if (LoginBonusNameId != other.LoginBonusNameId) return false;
      if (BannerId != other.BannerId) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginBonusId.Length != 0) hash ^= LoginBonusId.GetHashCode();
      if (RewardId.Length != 0) hash ^= RewardId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (LoginBonusNameId.Length != 0) hash ^= LoginBonusNameId.GetHashCode();
      if (BannerId != 0) hash ^= BannerId.GetHashCode();
      if (StartDate != 0) hash ^= StartDate.GetHashCode();
      if (EndDate != 0) hash ^= EndDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoginBonusId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LoginBonusId);
      }
      if (RewardId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RewardId);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      if (LoginBonusNameId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LoginBonusNameId);
      }
      if (BannerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BannerId);
      }
      if (StartDate != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StartDate);
      }
      if (EndDate != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginBonusId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginBonusId);
      }
      if (RewardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (LoginBonusNameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoginBonusNameId);
      }
      if (BannerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BannerId);
      }
      if (StartDate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartDate);
      }
      if (EndDate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginBonus other) {
      if (other == null) {
        return;
      }
      if (other.LoginBonusId.Length != 0) {
        LoginBonusId = other.LoginBonusId;
      }
      if (other.RewardId.Length != 0) {
        RewardId = other.RewardId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.LoginBonusNameId.Length != 0) {
        LoginBonusNameId = other.LoginBonusNameId;
      }
      if (other.BannerId != 0) {
        BannerId = other.BannerId;
      }
      if (other.StartDate != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate != 0) {
        EndDate = other.EndDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoginBonusId = input.ReadString();
            break;
          }
          case 18: {
            RewardId = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
          case 34: {
            LoginBonusNameId = input.ReadString();
            break;
          }
          case 40: {
            BannerId = input.ReadInt32();
            break;
          }
          case 48: {
            StartDate = input.ReadUInt32();
            break;
          }
          case 56: {
            EndDate = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginBonusTable : pb::IMessage<LoginBonusTable> {
    private static readonly pb::MessageParser<LoginBonusTable> _parser = new pb::MessageParser<LoginBonusTable>(() => new LoginBonusTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginBonusTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.LoginBonusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusTable(LoginBonusTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginBonusTable Clone() {
      return new LoginBonusTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.LoginBonus> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.LoginBonus.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.LoginBonus> entries_ = new pbc::RepeatedField<global::ReMastersLib.LoginBonus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.LoginBonus> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginBonusTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginBonusTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginBonusTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
