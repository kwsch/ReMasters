// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/EggLotGroup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/EggLotGroup.proto</summary>
  public static partial class EggLotGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/EggLotGroup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EggLotGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90by9FZ2dMb3RHcm91cC5wcm90bxIMUmVNYXN0ZXJzTGliIlAKC0Vn",
            "Z0xvdEdyb3VwEhgKEGVnZ19sb3RfZ3JvdXBfaWQYASABKAUSFwoPZmFybV9t",
            "b25zdGVyX2lkGAIgASgDEg4KBndlaWdodBgDIAEoBSI+ChBFZ2dMb3RHcm91",
            "cFRhYmxlEioKB2VudHJpZXMYASADKAsyGS5SZU1hc3RlcnNMaWIuRWdnTG90",
            "R3JvdXBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.EggLotGroup), global::ReMastersLib.EggLotGroup.Parser, new[]{ "EggLotGroupId", "FarmMonsterId", "Weight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.EggLotGroupTable), global::ReMastersLib.EggLotGroupTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EggLotGroup : pb::IMessage<EggLotGroup> {
    private static readonly pb::MessageParser<EggLotGroup> _parser = new pb::MessageParser<EggLotGroup>(() => new EggLotGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EggLotGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.EggLotGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggLotGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggLotGroup(EggLotGroup other) : this() {
      eggLotGroupId_ = other.eggLotGroupId_;
      farmMonsterId_ = other.farmMonsterId_;
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggLotGroup Clone() {
      return new EggLotGroup(this);
    }

    /// <summary>Field number for the "egg_lot_group_id" field.</summary>
    public const int EggLotGroupIdFieldNumber = 1;
    private int eggLotGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EggLotGroupId {
      get { return eggLotGroupId_; }
      set {
        eggLotGroupId_ = value;
      }
    }

    /// <summary>Field number for the "farm_monster_id" field.</summary>
    public const int FarmMonsterIdFieldNumber = 2;
    private long farmMonsterId_;
    /// <summary>
    /// FarmMonster.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FarmMonsterId {
      get { return farmMonsterId_; }
      set {
        farmMonsterId_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 3;
    private int weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EggLotGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EggLotGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EggLotGroupId != other.EggLotGroupId) return false;
      if (FarmMonsterId != other.FarmMonsterId) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EggLotGroupId != 0) hash ^= EggLotGroupId.GetHashCode();
      if (FarmMonsterId != 0L) hash ^= FarmMonsterId.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EggLotGroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EggLotGroupId);
      }
      if (FarmMonsterId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FarmMonsterId);
      }
      if (Weight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EggLotGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EggLotGroupId);
      }
      if (FarmMonsterId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FarmMonsterId);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EggLotGroup other) {
      if (other == null) {
        return;
      }
      if (other.EggLotGroupId != 0) {
        EggLotGroupId = other.EggLotGroupId;
      }
      if (other.FarmMonsterId != 0L) {
        FarmMonsterId = other.FarmMonsterId;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EggLotGroupId = input.ReadInt32();
            break;
          }
          case 16: {
            FarmMonsterId = input.ReadInt64();
            break;
          }
          case 24: {
            Weight = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EggLotGroupTable : pb::IMessage<EggLotGroupTable> {
    private static readonly pb::MessageParser<EggLotGroupTable> _parser = new pb::MessageParser<EggLotGroupTable>(() => new EggLotGroupTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EggLotGroupTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.EggLotGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggLotGroupTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggLotGroupTable(EggLotGroupTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggLotGroupTable Clone() {
      return new EggLotGroupTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.EggLotGroup> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.EggLotGroup.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.EggLotGroup> entries_ = new pbc::RepeatedField<global::ReMastersLib.EggLotGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.EggLotGroup> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EggLotGroupTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EggLotGroupTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EggLotGroupTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
