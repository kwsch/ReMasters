// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/BingoMissionCard.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/BingoMissionCard.proto</summary>
  public static partial class BingoMissionCardReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/BingoMissionCard.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BingoMissionCardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90by9CaW5nb01pc3Npb25DYXJkLnByb3RvEgxSZU1hc3RlcnNMaWIi",
            "VQoQQmluZ29NaXNzaW9uQ2FyZBIdChViaW5nb19taXNzaW9uX2NhcmRfaWQY",
            "ASABKAUSDgoGbnVtYmVyGAIgASgFEhIKCm1pc3Npb25faWQYAyABKAUiSAoV",
            "QmluZ29NaXNzaW9uQ2FyZFRhYmxlEi8KB2VudHJpZXMYASADKAsyHi5SZU1h",
            "c3RlcnNMaWIuQmluZ29NaXNzaW9uQ2FyZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BingoMissionCard), global::ReMastersLib.BingoMissionCard.Parser, new[]{ "BingoMissionCardId", "Number", "MissionId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.BingoMissionCardTable), global::ReMastersLib.BingoMissionCardTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BingoMissionCard : pb::IMessage<BingoMissionCard> {
    private static readonly pb::MessageParser<BingoMissionCard> _parser = new pb::MessageParser<BingoMissionCard>(() => new BingoMissionCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BingoMissionCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BingoMissionCardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionCard(BingoMissionCard other) : this() {
      bingoMissionCardId_ = other.bingoMissionCardId_;
      number_ = other.number_;
      missionId_ = other.missionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionCard Clone() {
      return new BingoMissionCard(this);
    }

    /// <summary>Field number for the "bingo_mission_card_id" field.</summary>
    public const int BingoMissionCardIdFieldNumber = 1;
    private int bingoMissionCardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BingoMissionCardId {
      get { return bingoMissionCardId_; }
      set {
        bingoMissionCardId_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private int number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 3;
    private int missionId_;
    /// <summary>
    /// Mission.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissionId {
      get { return missionId_; }
      set {
        missionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BingoMissionCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BingoMissionCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BingoMissionCardId != other.BingoMissionCardId) return false;
      if (Number != other.Number) return false;
      if (MissionId != other.MissionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BingoMissionCardId != 0) hash ^= BingoMissionCardId.GetHashCode();
      if (Number != 0) hash ^= Number.GetHashCode();
      if (MissionId != 0) hash ^= MissionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BingoMissionCardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BingoMissionCardId);
      }
      if (Number != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Number);
      }
      if (MissionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MissionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BingoMissionCardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BingoMissionCardId);
      }
      if (Number != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
      }
      if (MissionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BingoMissionCard other) {
      if (other == null) {
        return;
      }
      if (other.BingoMissionCardId != 0) {
        BingoMissionCardId = other.BingoMissionCardId;
      }
      if (other.Number != 0) {
        Number = other.Number;
      }
      if (other.MissionId != 0) {
        MissionId = other.MissionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BingoMissionCardId = input.ReadInt32();
            break;
          }
          case 16: {
            Number = input.ReadInt32();
            break;
          }
          case 24: {
            MissionId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BingoMissionCardTable : pb::IMessage<BingoMissionCardTable> {
    private static readonly pb::MessageParser<BingoMissionCardTable> _parser = new pb::MessageParser<BingoMissionCardTable>(() => new BingoMissionCardTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BingoMissionCardTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.BingoMissionCardReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionCardTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionCardTable(BingoMissionCardTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BingoMissionCardTable Clone() {
      return new BingoMissionCardTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.BingoMissionCard> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.BingoMissionCard.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.BingoMissionCard> entries_ = new pbc::RepeatedField<global::ReMastersLib.BingoMissionCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.BingoMissionCard> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BingoMissionCardTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BingoMissionCardTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BingoMissionCardTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
