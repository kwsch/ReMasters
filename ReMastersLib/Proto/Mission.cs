// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Mission.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/Mission.proto</summary>
  public static partial class MissionReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/Mission.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MissionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90by9NaXNzaW9uLnByb3RvEgxSZU1hc3RlcnNMaWIi/AEKB01pc3Np",
            "b24SEgoKbWlzc2lvbl9pZBgBIAEoBRIYChBtaXNzaW9uX2dyb3VwX2lkGAIg",
            "ASgFEgoKAnUzGAMgASgFEhIKCnBhcmFtZXRlcnMYBCADKAMSEgoKb2JqZWN0",
            "aXZlcxgFIAMoBRITCgtzY2hlZHVsZV9pZBgGIAEoCRIKCgJ1NxgHIAEoBRIK",
            "CgJ1OBgIIAEoBRIKCgJ1ORgJIAEoBRIUCgxpdGVtX3NldF9pZHMYCiADKAMS",
            "DgoGbnVtYmVyGAsgASgFEhYKDnJlcXVpcmVtZW50X2lkGAwgASgFEgsKA3Ux",
            "MxgNIAEoCRILCgN1MTQYDiABKAkiNgoMTWlzc2lvblRhYmxlEiYKB2VudHJp",
            "ZXMYASADKAsyFS5SZU1hc3RlcnNMaWIuTWlzc2lvbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.Mission), global::ReMastersLib.Mission.Parser, new[]{ "MissionId", "MissionGroupId", "U3", "Parameters", "Objectives", "ScheduleId", "U7", "U8", "U9", "ItemSetIds", "Number", "RequirementId", "U13", "U14" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.MissionTable), global::ReMastersLib.MissionTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Mission : pb::IMessage<Mission> {
    private static readonly pb::MessageParser<Mission> _parser = new pb::MessageParser<Mission>(() => new Mission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.MissionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mission(Mission other) : this() {
      missionId_ = other.missionId_;
      missionGroupId_ = other.missionGroupId_;
      u3_ = other.u3_;
      parameters_ = other.parameters_.Clone();
      objectives_ = other.objectives_.Clone();
      scheduleId_ = other.scheduleId_;
      u7_ = other.u7_;
      u8_ = other.u8_;
      u9_ = other.u9_;
      itemSetIds_ = other.itemSetIds_.Clone();
      number_ = other.number_;
      requirementId_ = other.requirementId_;
      u13_ = other.u13_;
      u14_ = other.u14_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mission Clone() {
      return new Mission(this);
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 1;
    private int missionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissionId {
      get { return missionId_; }
      set {
        missionId_ = value;
      }
    }

    /// <summary>Field number for the "mission_group_id" field.</summary>
    public const int MissionGroupIdFieldNumber = 2;
    private int missionGroupId_;
    /// <summary>
    /// MissionGroup.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MissionGroupId {
      get { return missionGroupId_; }
      set {
        missionGroupId_ = value;
      }
    }

    /// <summary>Field number for the "u3" field.</summary>
    public const int U3FieldNumber = 3;
    private int u3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U3 {
      get { return u3_; }
      set {
        u3_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_parameters_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> parameters_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "objectives" field.</summary>
    public const int ObjectivesFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_objectives_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> objectives_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///
    ///u3 = 5:		StoryQuest.pb
    ///u3 = 14:	Trainer.pb (characterId)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Objectives {
      get { return objectives_; }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 6;
    private string scheduleId_ = "";
    /// <summary>
    /// Schedule.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u7" field.</summary>
    public const int U7FieldNumber = 7;
    private int u7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U7 {
      get { return u7_; }
      set {
        u7_ = value;
      }
    }

    /// <summary>Field number for the "u8" field.</summary>
    public const int U8FieldNumber = 8;
    private int u8_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U8 {
      get { return u8_; }
      set {
        u8_ = value;
      }
    }

    /// <summary>Field number for the "u9" field.</summary>
    public const int U9FieldNumber = 9;
    private int u9_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int U9 {
      get { return u9_; }
      set {
        u9_ = value;
      }
    }

    /// <summary>Field number for the "item_set_ids" field.</summary>
    public const int ItemSetIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<long> _repeated_itemSetIds_codec
        = pb::FieldCodec.ForInt64(82);
    private readonly pbc::RepeatedField<long> itemSetIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// ItemSet.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ItemSetIds {
      get { return itemSetIds_; }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 11;
    private int number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "requirement_id" field.</summary>
    public const int RequirementIdFieldNumber = 12;
    private int requirementId_;
    /// <summary>
    /// MissionRequirementCategory.pb
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequirementId {
      get { return requirementId_; }
      set {
        requirementId_ = value;
      }
    }

    /// <summary>Field number for the "u13" field.</summary>
    public const int U13FieldNumber = 13;
    private string u13_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U13 {
      get { return u13_; }
      set {
        u13_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "u14" field.</summary>
    public const int U14FieldNumber = 14;
    private string u14_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string U14 {
      get { return u14_; }
      set {
        u14_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionId != other.MissionId) return false;
      if (MissionGroupId != other.MissionGroupId) return false;
      if (U3 != other.U3) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      if(!objectives_.Equals(other.objectives_)) return false;
      if (ScheduleId != other.ScheduleId) return false;
      if (U7 != other.U7) return false;
      if (U8 != other.U8) return false;
      if (U9 != other.U9) return false;
      if(!itemSetIds_.Equals(other.itemSetIds_)) return false;
      if (Number != other.Number) return false;
      if (RequirementId != other.RequirementId) return false;
      if (U13 != other.U13) return false;
      if (U14 != other.U14) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionId != 0) hash ^= MissionId.GetHashCode();
      if (MissionGroupId != 0) hash ^= MissionGroupId.GetHashCode();
      if (U3 != 0) hash ^= U3.GetHashCode();
      hash ^= parameters_.GetHashCode();
      hash ^= objectives_.GetHashCode();
      if (ScheduleId.Length != 0) hash ^= ScheduleId.GetHashCode();
      if (U7 != 0) hash ^= U7.GetHashCode();
      if (U8 != 0) hash ^= U8.GetHashCode();
      if (U9 != 0) hash ^= U9.GetHashCode();
      hash ^= itemSetIds_.GetHashCode();
      if (Number != 0) hash ^= Number.GetHashCode();
      if (RequirementId != 0) hash ^= RequirementId.GetHashCode();
      if (U13.Length != 0) hash ^= U13.GetHashCode();
      if (U14.Length != 0) hash ^= U14.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MissionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MissionId);
      }
      if (MissionGroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MissionGroupId);
      }
      if (U3 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(U3);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      objectives_.WriteTo(output, _repeated_objectives_codec);
      if (ScheduleId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ScheduleId);
      }
      if (U7 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(U7);
      }
      if (U8 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(U8);
      }
      if (U9 != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(U9);
      }
      itemSetIds_.WriteTo(output, _repeated_itemSetIds_codec);
      if (Number != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Number);
      }
      if (RequirementId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RequirementId);
      }
      if (U13.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(U13);
      }
      if (U14.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(U14);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MissionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissionId);
      }
      if (MissionGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MissionGroupId);
      }
      if (U3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U3);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      size += objectives_.CalculateSize(_repeated_objectives_codec);
      if (ScheduleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScheduleId);
      }
      if (U7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U7);
      }
      if (U8 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U8);
      }
      if (U9 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(U9);
      }
      size += itemSetIds_.CalculateSize(_repeated_itemSetIds_codec);
      if (Number != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
      }
      if (RequirementId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequirementId);
      }
      if (U13.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U13);
      }
      if (U14.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(U14);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mission other) {
      if (other == null) {
        return;
      }
      if (other.MissionId != 0) {
        MissionId = other.MissionId;
      }
      if (other.MissionGroupId != 0) {
        MissionGroupId = other.MissionGroupId;
      }
      if (other.U3 != 0) {
        U3 = other.U3;
      }
      parameters_.Add(other.parameters_);
      objectives_.Add(other.objectives_);
      if (other.ScheduleId.Length != 0) {
        ScheduleId = other.ScheduleId;
      }
      if (other.U7 != 0) {
        U7 = other.U7;
      }
      if (other.U8 != 0) {
        U8 = other.U8;
      }
      if (other.U9 != 0) {
        U9 = other.U9;
      }
      itemSetIds_.Add(other.itemSetIds_);
      if (other.Number != 0) {
        Number = other.Number;
      }
      if (other.RequirementId != 0) {
        RequirementId = other.RequirementId;
      }
      if (other.U13.Length != 0) {
        U13 = other.U13;
      }
      if (other.U14.Length != 0) {
        U14 = other.U14;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MissionId = input.ReadInt32();
            break;
          }
          case 16: {
            MissionGroupId = input.ReadInt32();
            break;
          }
          case 24: {
            U3 = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
          case 42:
          case 40: {
            objectives_.AddEntriesFrom(input, _repeated_objectives_codec);
            break;
          }
          case 50: {
            ScheduleId = input.ReadString();
            break;
          }
          case 56: {
            U7 = input.ReadInt32();
            break;
          }
          case 64: {
            U8 = input.ReadInt32();
            break;
          }
          case 72: {
            U9 = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            itemSetIds_.AddEntriesFrom(input, _repeated_itemSetIds_codec);
            break;
          }
          case 88: {
            Number = input.ReadInt32();
            break;
          }
          case 96: {
            RequirementId = input.ReadInt32();
            break;
          }
          case 106: {
            U13 = input.ReadString();
            break;
          }
          case 114: {
            U14 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MissionTable : pb::IMessage<MissionTable> {
    private static readonly pb::MessageParser<MissionTable> _parser = new pb::MessageParser<MissionTable>(() => new MissionTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MissionTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.MissionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionTable(MissionTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MissionTable Clone() {
      return new MissionTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.Mission> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.Mission.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.Mission> entries_ = new pbc::RepeatedField<global::ReMastersLib.Mission>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.Mission> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MissionTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MissionTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MissionTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
