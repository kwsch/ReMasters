// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/EmblemItemCategory.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ReMastersLib {

  /// <summary>Holder for reflection information generated from Proto/EmblemItemCategory.proto</summary>
  public static partial class EmblemItemCategoryReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/EmblemItemCategory.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EmblemItemCategoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Qcm90by9FbWJsZW1JdGVtQ2F0ZWdvcnkucHJvdG8SDFJlTWFzdGVyc0xp",
            "YiI+ChJFbWJsZW1JdGVtQ2F0ZWdvcnkSEAoIY2F0ZWdvcnkYASABKAUSFgoO",
            "c3ViX2NhdGVnb3JpZXMYAiADKAMiTAoXRW1ibGVtSXRlbUNhdGVnb3J5VGFi",
            "bGUSMQoHZW50cmllcxgBIAMoCzIgLlJlTWFzdGVyc0xpYi5FbWJsZW1JdGVt",
            "Q2F0ZWdvcnliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.EmblemItemCategory), global::ReMastersLib.EmblemItemCategory.Parser, new[]{ "Category", "SubCategories" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ReMastersLib.EmblemItemCategoryTable), global::ReMastersLib.EmblemItemCategoryTable.Parser, new[]{ "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class EmblemItemCategory : pb::IMessage<EmblemItemCategory> {
    private static readonly pb::MessageParser<EmblemItemCategory> _parser = new pb::MessageParser<EmblemItemCategory>(() => new EmblemItemCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmblemItemCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.EmblemItemCategoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmblemItemCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmblemItemCategory(EmblemItemCategory other) : this() {
      category_ = other.category_;
      subCategories_ = other.subCategories_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmblemItemCategory Clone() {
      return new EmblemItemCategory(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private int category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "sub_categories" field.</summary>
    public const int SubCategoriesFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_subCategories_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> subCategories_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// bardge_item_minor_category_xx.lsd
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> SubCategories {
      get { return subCategories_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmblemItemCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmblemItemCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Category != other.Category) return false;
      if(!subCategories_.Equals(other.subCategories_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Category != 0) hash ^= Category.GetHashCode();
      hash ^= subCategories_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Category != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Category);
      }
      subCategories_.WriteTo(output, _repeated_subCategories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Category != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
      }
      size += subCategories_.CalculateSize(_repeated_subCategories_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmblemItemCategory other) {
      if (other == null) {
        return;
      }
      if (other.Category != 0) {
        Category = other.Category;
      }
      subCategories_.Add(other.subCategories_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Category = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            subCategories_.AddEntriesFrom(input, _repeated_subCategories_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmblemItemCategoryTable : pb::IMessage<EmblemItemCategoryTable> {
    private static readonly pb::MessageParser<EmblemItemCategoryTable> _parser = new pb::MessageParser<EmblemItemCategoryTable>(() => new EmblemItemCategoryTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmblemItemCategoryTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ReMastersLib.EmblemItemCategoryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmblemItemCategoryTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmblemItemCategoryTable(EmblemItemCategoryTable other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmblemItemCategoryTable Clone() {
      return new EmblemItemCategoryTable(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ReMastersLib.EmblemItemCategory> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::ReMastersLib.EmblemItemCategory.Parser);
    private readonly pbc::RepeatedField<global::ReMastersLib.EmblemItemCategory> entries_ = new pbc::RepeatedField<global::ReMastersLib.EmblemItemCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ReMastersLib.EmblemItemCategory> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmblemItemCategoryTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmblemItemCategoryTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmblemItemCategoryTable other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
